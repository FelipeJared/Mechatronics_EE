
SIB_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800100  000021f2  00002286  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000198  008001cc  008001cc  00002352  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002352  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  000023f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002cfb  00000000  00000000  000025c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cbe  00000000  00000000  000052c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019fb  00000000  00000000  00005f81  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000076c  00000000  00000000  0000797c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000eae  00000000  00000000  000080e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c50  00000000  00000000  00008f96  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000abe6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 10 04 	jmp	0x820	; 0x820 <__vector_1>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 07 	jmp	0xeee	; 0xeee <__vector_11>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 8b 03 	jmp	0x716	; 0x716 <__vector_21>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_24>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	11 e0       	ldi	r17, 0x01	; 1
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e2 ef       	ldi	r30, 0xF2	; 242
      c8:	f1 e2       	ldi	r31, 0x21	; 33
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	ac 3c       	cpi	r26, 0xCC	; 204
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	23 e0       	ldi	r18, 0x03	; 3
      d8:	ac ec       	ldi	r26, 0xCC	; 204
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a4 36       	cpi	r26, 0x64	; 100
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <main>
      ea:	0c 94 f7 10 	jmp	0x21ee	; 0x21ee <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <sys_config>:
		//_delay_ms(300);
		//mcp2515_send_message(&CI_ESC1);
		//mcp2515_send_message(&CI_Kill_Switch);
		//USART_CAN_TX(Request_Response_SIB_Temp);
	}
}
      f2:	21 9a       	sbi	0x04, 1	; 4
      f4:	87 b1       	in	r24, 0x07	; 7
      f6:	87 b9       	out	0x07, r24	; 7
      f8:	87 b1       	in	r24, 0x07	; 7
      fa:	87 b9       	out	0x07, r24	; 7
      fc:	87 b1       	in	r24, 0x07	; 7
      fe:	87 b9       	out	0x07, r24	; 7
     100:	8a b1       	in	r24, 0x0a	; 10
     102:	8a b9       	out	0x0a, r24	; 10
     104:	51 9a       	sbi	0x0a, 1	; 10
     106:	8a b1       	in	r24, 0x0a	; 10
     108:	8a b9       	out	0x0a, r24	; 10
     10a:	8a b1       	in	r24, 0x0a	; 10
     10c:	8a b9       	out	0x0a, r24	; 10
     10e:	8a b1       	in	r24, 0x0a	; 10
     110:	8a b9       	out	0x0a, r24	; 10
     112:	8a b1       	in	r24, 0x0a	; 10
     114:	8a b9       	out	0x0a, r24	; 10
     116:	8a b1       	in	r24, 0x0a	; 10
     118:	8a b9       	out	0x0a, r24	; 10
     11a:	8a b1       	in	r24, 0x0a	; 10
     11c:	8a b9       	out	0x0a, r24	; 10
     11e:	84 b1       	in	r24, 0x04	; 4
     120:	84 b9       	out	0x04, r24	; 4
     122:	23 9a       	sbi	0x04, 3	; 4
     124:	2b 9a       	sbi	0x05, 3	; 5
     126:	3c 9a       	sbi	0x07, 4	; 7
     128:	44 9a       	sbi	0x08, 4	; 8
     12a:	08 95       	ret

0000012c <initUART>:
     12c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     130:	87 e6       	ldi	r24, 0x67	; 103
     132:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     136:	88 e0       	ldi	r24, 0x08	; 8
     138:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     13c:	86 e0       	ldi	r24, 0x06	; 6
     13e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     142:	08 95       	ret

00000144 <txUART>:
     144:	e0 ec       	ldi	r30, 0xC0	; 192
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	90 81       	ld	r25, Z
     14a:	95 ff       	sbrs	r25, 5
     14c:	fd cf       	rjmp	.-6      	; 0x148 <txUART+0x4>
     14e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     152:	08 95       	ret

00000154 <sendString>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	ec 01       	movw	r28, r24
     15a:	88 81       	ld	r24, Y
     15c:	88 23       	and	r24, r24
     15e:	31 f0       	breq	.+12     	; 0x16c <sendString+0x18>
     160:	21 96       	adiw	r28, 0x01	; 1
     162:	0e 94 a2 00 	call	0x144	; 0x144 <txUART>
     166:	89 91       	ld	r24, Y+
     168:	81 11       	cpse	r24, r1
     16a:	fb cf       	rjmp	.-10     	; 0x162 <sendString+0xe>
     16c:	df 91       	pop	r29
     16e:	cf 91       	pop	r28
     170:	08 95       	ret

00000172 <INTERRUPT_init>:
     172:	e8 9a       	sbi	0x1d, 0	; 29
     174:	e9 e6       	ldi	r30, 0x69	; 105
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	80 81       	ld	r24, Z
     17a:	8c 7f       	andi	r24, 0xFC	; 252
     17c:	80 83       	st	Z, r24
     17e:	78 94       	sei
     180:	08 95       	ret

00000182 <SPI_masterInit>:
     182:	22 9a       	sbi	0x04, 2	; 4
     184:	23 9a       	sbi	0x04, 3	; 4
     186:	25 9a       	sbi	0x04, 5	; 4
     188:	2a 9a       	sbi	0x05, 2	; 5
     18a:	2b 98       	cbi	0x05, 3	; 5
     18c:	2d 98       	cbi	0x05, 5	; 5
     18e:	8c b5       	in	r24, 0x2c	; 44
     190:	80 65       	ori	r24, 0x50	; 80
     192:	8c bd       	out	0x2c, r24	; 44
     194:	8c b5       	in	r24, 0x2c	; 44
     196:	83 60       	ori	r24, 0x03	; 3
     198:	8c bd       	out	0x2c, r24	; 44
     19a:	08 95       	ret

0000019c <SPI_txrx>:
     19c:	8e bd       	out	0x2e, r24	; 46
     19e:	0d b4       	in	r0, 0x2d	; 45
     1a0:	07 fe       	sbrs	r0, 7
     1a2:	fd cf       	rjmp	.-6      	; 0x19e <SPI_txrx+0x2>
     1a4:	87 ec       	ldi	r24, 0xC7	; 199
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <SPI_txrx+0xc>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <SPI_txrx+0x12>
     1ae:	00 00       	nop
     1b0:	8e b5       	in	r24, 0x2e	; 46
     1b2:	08 95       	ret

000001b4 <mcp2515_write_register>:
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	d8 2f       	mov	r29, r24
     1ba:	c6 2f       	mov	r28, r22
     1bc:	2a 98       	cbi	0x05, 2	; 5
     1be:	82 e0       	ldi	r24, 0x02	; 2
     1c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1c4:	8d 2f       	mov	r24, r29
     1c6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1ca:	8c 2f       	mov	r24, r28
     1cc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1d0:	2a 9a       	sbi	0x05, 2	; 5
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <mcp2515_read_register>:
     1d8:	cf 93       	push	r28
     1da:	c8 2f       	mov	r28, r24
     1dc:	2a 98       	cbi	0x05, 2	; 5
     1de:	83 e0       	ldi	r24, 0x03	; 3
     1e0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1e4:	8c 2f       	mov	r24, r28
     1e6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1ea:	8f ef       	ldi	r24, 0xFF	; 255
     1ec:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1f0:	2a 9a       	sbi	0x05, 2	; 5
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <mcp2515_bit_modify>:
     1f6:	1f 93       	push	r17
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	18 2f       	mov	r17, r24
     1fe:	d6 2f       	mov	r29, r22
     200:	c4 2f       	mov	r28, r20
     202:	2a 98       	cbi	0x05, 2	; 5
     204:	85 e0       	ldi	r24, 0x05	; 5
     206:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     20a:	81 2f       	mov	r24, r17
     20c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     210:	8d 2f       	mov	r24, r29
     212:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     216:	8c 2f       	mov	r24, r28
     218:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     21c:	2a 9a       	sbi	0x05, 2	; 5
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	1f 91       	pop	r17
     224:	08 95       	ret

00000226 <mcp2515_read_status>:
     226:	2a 98       	cbi	0x05, 2	; 5
     228:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     232:	2a 9a       	sbi	0x05, 2	; 5
     234:	08 95       	ret

00000236 <mcp2515_init>:
     236:	cf 93       	push	r28
     238:	c8 2f       	mov	r28, r24
     23a:	2a 98       	cbi	0x05, 2	; 5
     23c:	80 ec       	ldi	r24, 0xC0	; 192
     23e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     242:	2a 9a       	sbi	0x05, 2	; 5
     244:	8a e6       	ldi	r24, 0x6A	; 106
     246:	8a 95       	dec	r24
     248:	f1 f7       	brne	.-4      	; 0x246 <mcp2515_init+0x10>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <mcp2515_init+0x16>
     24c:	2a 98       	cbi	0x05, 2	; 5
     24e:	82 e0       	ldi	r24, 0x02	; 2
     250:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     254:	88 e2       	ldi	r24, 0x28	; 40
     256:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     25a:	82 e0       	ldi	r24, 0x02	; 2
     25c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     260:	80 e9       	ldi	r24, 0x90	; 144
     262:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     266:	8c 2f       	mov	r24, r28
     268:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     26c:	83 e0       	ldi	r24, 0x03	; 3
     26e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     272:	2a 9a       	sbi	0x05, 2	; 5
     274:	8a e2       	ldi	r24, 0x2A	; 42
     276:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <mcp2515_read_register>
     27a:	c8 13       	cpse	r28, r24
     27c:	7e c0       	rjmp	.+252    	; 0x37a <mcp2515_init+0x144>
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	8c e0       	ldi	r24, 0x0C	; 12
     282:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     286:	60 e0       	ldi	r22, 0x00	; 0
     288:	8d e0       	ldi	r24, 0x0D	; 13
     28a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     28e:	2a 98       	cbi	0x05, 2	; 5
     290:	82 e0       	ldi	r24, 0x02	; 2
     292:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     296:	80 e2       	ldi	r24, 0x20	; 32
     298:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2a2:	80 ee       	ldi	r24, 0xE0	; 224
     2a4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2a8:	2a 9a       	sbi	0x05, 2	; 5
     2aa:	2a 98       	cbi	0x05, 2	; 5
     2ac:	82 e0       	ldi	r24, 0x02	; 2
     2ae:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2b2:	84 e2       	ldi	r24, 0x24	; 36
     2b4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2b8:	80 e0       	ldi	r24, 0x00	; 0
     2ba:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2be:	80 ee       	ldi	r24, 0xE0	; 224
     2c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2c4:	2a 9a       	sbi	0x05, 2	; 5
     2c6:	2a 98       	cbi	0x05, 2	; 5
     2c8:	82 e0       	ldi	r24, 0x02	; 2
     2ca:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2da:	80 e6       	ldi	r24, 0x60	; 96
     2dc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2e0:	2a 9a       	sbi	0x05, 2	; 5
     2e2:	2a 98       	cbi	0x05, 2	; 5
     2e4:	82 e0       	ldi	r24, 0x02	; 2
     2e6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2ea:	84 e0       	ldi	r24, 0x04	; 4
     2ec:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2f6:	80 e6       	ldi	r24, 0x60	; 96
     2f8:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2fc:	2a 9a       	sbi	0x05, 2	; 5
     2fe:	2a 98       	cbi	0x05, 2	; 5
     300:	82 e0       	ldi	r24, 0x02	; 2
     302:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     306:	88 e0       	ldi	r24, 0x08	; 8
     308:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     312:	80 e6       	ldi	r24, 0x60	; 96
     314:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	2a 98       	cbi	0x05, 2	; 5
     31c:	82 e0       	ldi	r24, 0x02	; 2
     31e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     322:	80 e1       	ldi	r24, 0x10	; 16
     324:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     32e:	80 e6       	ldi	r24, 0x60	; 96
     330:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     334:	2a 9a       	sbi	0x05, 2	; 5
     336:	2a 98       	cbi	0x05, 2	; 5
     338:	82 e0       	ldi	r24, 0x02	; 2
     33a:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     33e:	84 e1       	ldi	r24, 0x14	; 20
     340:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     34a:	80 e6       	ldi	r24, 0x60	; 96
     34c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     350:	2a 9a       	sbi	0x05, 2	; 5
     352:	2a 98       	cbi	0x05, 2	; 5
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     35a:	88 e1       	ldi	r24, 0x18	; 24
     35c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     366:	80 e6       	ldi	r24, 0x60	; 96
     368:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     36c:	2a 9a       	sbi	0x05, 2	; 5
     36e:	60 e0       	ldi	r22, 0x00	; 0
     370:	8f e0       	ldi	r24, 0x0F	; 15
     372:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	01 c0       	rjmp	.+2      	; 0x37c <mcp2515_init+0x146>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <mcp2515_get_message>:
     380:	cf 92       	push	r12
     382:	df 92       	push	r13
     384:	ef 92       	push	r14
     386:	ff 92       	push	r15
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	1f 92       	push	r1
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	6c 01       	movw	r12, r24
     398:	80 eb       	ldi	r24, 0xB0	; 176
     39a:	0e 94 13 01 	call	0x226	; 0x226 <mcp2515_read_status>
     39e:	89 83       	std	Y+1, r24	; 0x01
     3a0:	99 81       	ldd	r25, Y+1	; 0x01
     3a2:	89 2f       	mov	r24, r25
     3a4:	80 74       	andi	r24, 0x40	; 64
     3a6:	96 fd       	sbrc	r25, 6
     3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <mcp2515_get_message+0x36>
     3aa:	99 81       	ldd	r25, Y+1	; 0x01
     3ac:	99 23       	and	r25, r25
     3ae:	0c f0       	brlt	.+2      	; 0x3b2 <mcp2515_get_message+0x32>
     3b0:	5d c0       	rjmp	.+186    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     3b2:	84 e9       	ldi	r24, 0x94	; 148
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <mcp2515_get_message+0x38>
     3b6:	80 e9       	ldi	r24, 0x90	; 144
     3b8:	2a 98       	cbi	0x05, 2	; 5
     3ba:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3be:	8f ef       	ldi	r24, 0xFF	; 255
     3c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3c4:	28 e0       	ldi	r18, 0x08	; 8
     3c6:	82 9f       	mul	r24, r18
     3c8:	c0 01       	movw	r24, r0
     3ca:	11 24       	eor	r1, r1
     3cc:	f6 01       	movw	r30, r12
     3ce:	91 83       	std	Z+1, r25	; 0x01
     3d0:	80 83       	st	Z, r24
     3d2:	8f ef       	ldi	r24, 0xFF	; 255
     3d4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3d8:	28 2f       	mov	r18, r24
     3da:	22 95       	swap	r18
     3dc:	26 95       	lsr	r18
     3de:	27 70       	andi	r18, 0x07	; 7
     3e0:	f6 01       	movw	r30, r12
     3e2:	80 81       	ld	r24, Z
     3e4:	91 81       	ldd	r25, Z+1	; 0x01
     3e6:	82 2b       	or	r24, r18
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	80 83       	st	Z, r24
     3ec:	8f ef       	ldi	r24, 0xFF	; 255
     3ee:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3f2:	8f ef       	ldi	r24, 0xFF	; 255
     3f4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3f8:	8f ef       	ldi	r24, 0xFF	; 255
     3fa:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3fe:	8f 70       	andi	r24, 0x0F	; 15
     400:	28 2f       	mov	r18, r24
     402:	22 0f       	add	r18, r18
     404:	f6 01       	movw	r30, r12
     406:	92 81       	ldd	r25, Z+2	; 0x02
     408:	91 7e       	andi	r25, 0xE1	; 225
     40a:	92 2b       	or	r25, r18
     40c:	92 83       	std	Z+2, r25	; 0x02
     40e:	29 81       	ldd	r18, Y+1	; 0x01
     410:	23 fb       	bst	r18, 3
     412:	22 27       	eor	r18, r18
     414:	20 f9       	bld	r18, 0
     416:	20 fb       	bst	r18, 0
     418:	90 f9       	bld	r25, 0
     41a:	92 83       	std	Z+2, r25	; 0x02
     41c:	88 23       	and	r24, r24
     41e:	a1 f0       	breq	.+40     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     420:	86 01       	movw	r16, r12
     422:	0d 5f       	subi	r16, 0xFD	; 253
     424:	1f 4f       	sbci	r17, 0xFF	; 255
     426:	81 50       	subi	r24, 0x01	; 1
     428:	e8 2e       	mov	r14, r24
     42a:	f1 2c       	mov	r15, r1
     42c:	f4 e0       	ldi	r31, 0x04	; 4
     42e:	ef 0e       	add	r14, r31
     430:	f1 1c       	adc	r15, r1
     432:	ec 0c       	add	r14, r12
     434:	fd 1c       	adc	r15, r13
     436:	8f ef       	ldi	r24, 0xFF	; 255
     438:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     43c:	f8 01       	movw	r30, r16
     43e:	81 93       	st	Z+, r24
     440:	8f 01       	movw	r16, r30
     442:	ee 15       	cp	r30, r14
     444:	ff 05       	cpc	r31, r15
     446:	b9 f7       	brne	.-18     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     448:	2a 9a       	sbi	0x05, 2	; 5
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	86 ff       	sbrs	r24, 6
     44e:	06 c0       	rjmp	.+12     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	8c e2       	ldi	r24, 0x2C	; 44
     456:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <mcp2515_bit_modify>
     45a:	05 c0       	rjmp	.+10     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     45c:	40 e0       	ldi	r20, 0x00	; 0
     45e:	62 e0       	ldi	r22, 0x02	; 2
     460:	8c e2       	ldi	r24, 0x2C	; 44
     462:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <mcp2515_bit_modify>
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	87 70       	andi	r24, 0x07	; 7
     46a:	8f 5f       	subi	r24, 0xFF	; 255
     46c:	0f 90       	pop	r0
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	ff 90       	pop	r15
     478:	ef 90       	pop	r14
     47a:	df 90       	pop	r13
     47c:	cf 90       	pop	r12
     47e:	08 95       	ret

00000480 <mcp2515_send_message>:
     480:	bf 92       	push	r11
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	1f 92       	push	r1
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	6c 01       	movw	r12, r24
     49a:	80 ea       	ldi	r24, 0xA0	; 160
     49c:	0e 94 13 01 	call	0x226	; 0x226 <mcp2515_read_status>
     4a0:	89 83       	std	Y+1, r24	; 0x01
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	82 ff       	sbrs	r24, 2
     4a6:	0a c0       	rjmp	.+20     	; 0x4bc <mcp2515_send_message+0x3c>
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	84 ff       	sbrs	r24, 4
     4ac:	09 c0       	rjmp	.+18     	; 0x4c0 <mcp2515_send_message+0x40>
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	86 fd       	sbrc	r24, 6
     4b2:	5d c0       	rjmp	.+186    	; 0x56e <mcp2515_send_message+0xee>
     4b4:	68 94       	set
     4b6:	bb 24       	eor	r11, r11
     4b8:	b2 f8       	bld	r11, 2
     4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <mcp2515_send_message+0x46>
     4bc:	b1 2c       	mov	r11, r1
     4be:	03 c0       	rjmp	.+6      	; 0x4c6 <mcp2515_send_message+0x46>
     4c0:	68 94       	set
     4c2:	bb 24       	eor	r11, r11
     4c4:	b1 f8       	bld	r11, 1
     4c6:	2a 98       	cbi	0x05, 2	; 5
     4c8:	8b 2d       	mov	r24, r11
     4ca:	80 64       	ori	r24, 0x40	; 64
     4cc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4d0:	f6 01       	movw	r30, r12
     4d2:	80 81       	ld	r24, Z
     4d4:	91 81       	ldd	r25, Z+1	; 0x01
     4d6:	96 95       	lsr	r25
     4d8:	87 95       	ror	r24
     4da:	96 95       	lsr	r25
     4dc:	87 95       	ror	r24
     4de:	96 95       	lsr	r25
     4e0:	87 95       	ror	r24
     4e2:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4e6:	f6 01       	movw	r30, r12
     4e8:	80 81       	ld	r24, Z
     4ea:	82 95       	swap	r24
     4ec:	88 0f       	add	r24, r24
     4ee:	80 7e       	andi	r24, 0xE0	; 224
     4f0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     500:	f6 01       	movw	r30, r12
     502:	82 81       	ldd	r24, Z+2	; 0x02
     504:	f8 2e       	mov	r15, r24
     506:	f6 94       	lsr	r15
     508:	ff 2d       	mov	r31, r15
     50a:	ff 70       	andi	r31, 0x0F	; 15
     50c:	ff 2e       	mov	r15, r31
     50e:	80 ff       	sbrs	r24, 0
     510:	05 c0       	rjmp	.+10     	; 0x51c <mcp2515_send_message+0x9c>
     512:	8f 2f       	mov	r24, r31
     514:	80 64       	ori	r24, 0x40	; 64
     516:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     51a:	18 c0       	rjmp	.+48     	; 0x54c <mcp2515_send_message+0xcc>
     51c:	8f 2f       	mov	r24, r31
     51e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     522:	ff 20       	and	r15, r15
     524:	99 f0       	breq	.+38     	; 0x54c <mcp2515_send_message+0xcc>
     526:	86 01       	movw	r16, r12
     528:	0d 5f       	subi	r16, 0xFD	; 253
     52a:	1f 4f       	sbci	r17, 0xFF	; 255
     52c:	fa 94       	dec	r15
     52e:	ef 2c       	mov	r14, r15
     530:	f1 2c       	mov	r15, r1
     532:	84 e0       	ldi	r24, 0x04	; 4
     534:	e8 0e       	add	r14, r24
     536:	f1 1c       	adc	r15, r1
     538:	ec 0c       	add	r14, r12
     53a:	fd 1c       	adc	r15, r13
     53c:	f8 01       	movw	r30, r16
     53e:	81 91       	ld	r24, Z+
     540:	8f 01       	movw	r16, r30
     542:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     546:	0e 15       	cp	r16, r14
     548:	1f 05       	cpc	r17, r15
     54a:	c1 f7       	brne	.-16     	; 0x53c <mcp2515_send_message+0xbc>
     54c:	2a 9a       	sbi	0x05, 2	; 5
     54e:	f5 e0       	ldi	r31, 0x05	; 5
     550:	fa 95       	dec	r31
     552:	f1 f7       	brne	.-4      	; 0x550 <mcp2515_send_message+0xd0>
     554:	00 00       	nop
     556:	2a 98       	cbi	0x05, 2	; 5
     558:	b1 10       	cpse	r11, r1
     55a:	02 c0       	rjmp	.+4      	; 0x560 <mcp2515_send_message+0xe0>
     55c:	bb 24       	eor	r11, r11
     55e:	b3 94       	inc	r11
     560:	8b 2d       	mov	r24, r11
     562:	80 68       	ori	r24, 0x80	; 128
     564:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     568:	2a 9a       	sbi	0x05, 2	; 5
     56a:	8b 2d       	mov	r24, r11
     56c:	01 c0       	rjmp	.+2      	; 0x570 <mcp2515_send_message+0xf0>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	0f 90       	pop	r0
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	ff 90       	pop	r15
     57c:	ef 90       	pop	r14
     57e:	df 90       	pop	r13
     580:	cf 90       	pop	r12
     582:	bf 90       	pop	r11
     584:	08 95       	ret

00000586 <USART_Init>:
     586:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     58a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     58e:	e1 ec       	ldi	r30, 0xC1	; 193
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	80 81       	ld	r24, Z
     594:	88 69       	ori	r24, 0x98	; 152
     596:	80 83       	st	Z, r24
     598:	e2 ec       	ldi	r30, 0xC2	; 194
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	80 81       	ld	r24, Z
     59e:	86 60       	ori	r24, 0x06	; 6
     5a0:	80 83       	st	Z, r24
     5a2:	08 95       	ret

000005a4 <USART_Transmit>:
     5a4:	e0 ec       	ldi	r30, 0xC0	; 192
     5a6:	f0 e0       	ldi	r31, 0x00	; 0
     5a8:	90 81       	ld	r25, Z
     5aa:	95 ff       	sbrs	r25, 5
     5ac:	fd cf       	rjmp	.-6      	; 0x5a8 <USART_Transmit+0x4>
     5ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     5b2:	08 95       	ret

000005b4 <USART_Transmit_TX>:
     5b4:	ef 92       	push	r14
     5b6:	ff 92       	push	r15
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	fc 01       	movw	r30, r24
     5c2:	01 90       	ld	r0, Z+
     5c4:	00 20       	and	r0, r0
     5c6:	e9 f7       	brne	.-6      	; 0x5c2 <USART_Transmit_TX+0xe>
     5c8:	31 97       	sbiw	r30, 0x01	; 1
     5ca:	7f 01       	movw	r14, r30
     5cc:	e8 1a       	sub	r14, r24
     5ce:	f9 0a       	sbc	r15, r25
     5d0:	61 f0       	breq	.+24     	; 0x5ea <USART_Transmit_TX+0x36>
     5d2:	8c 01       	movw	r16, r24
     5d4:	c0 e0       	ldi	r28, 0x00	; 0
     5d6:	d0 e0       	ldi	r29, 0x00	; 0
     5d8:	f8 01       	movw	r30, r16
     5da:	81 91       	ld	r24, Z+
     5dc:	8f 01       	movw	r16, r30
     5de:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     5e2:	21 96       	adiw	r28, 0x01	; 1
     5e4:	ec 16       	cp	r14, r28
     5e6:	fd 06       	cpc	r15, r29
     5e8:	b9 f7       	brne	.-18     	; 0x5d8 <USART_Transmit_TX+0x24>
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	ff 90       	pop	r15
     5f4:	ef 90       	pop	r14
     5f6:	08 95       	ret

000005f8 <USART_CAN_TX>:
     5f8:	cf 92       	push	r12
     5fa:	df 92       	push	r13
     5fc:	ef 92       	push	r14
     5fe:	ff 92       	push	r15
     600:	0f 93       	push	r16
     602:	1f 93       	push	r17
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	2b 97       	sbiw	r28, 0x0b	; 11
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	e9 82       	std	Y+1, r14	; 0x01
     61a:	fa 82       	std	Y+2, r15	; 0x02
     61c:	0b 83       	std	Y+3, r16	; 0x03
     61e:	1c 83       	std	Y+4, r17	; 0x04
     620:	2d 83       	std	Y+5, r18	; 0x05
     622:	3e 83       	std	Y+6, r19	; 0x06
     624:	4f 83       	std	Y+7, r20	; 0x07
     626:	58 87       	std	Y+8, r21	; 0x08
     628:	69 87       	std	Y+9, r22	; 0x09
     62a:	7a 87       	std	Y+10, r23	; 0x0a
     62c:	8b 87       	std	Y+11, r24	; 0x0b
     62e:	c9 80       	ldd	r12, Y+1	; 0x01
     630:	da 80       	ldd	r13, Y+2	; 0x02
     632:	06 95       	lsr	r16
     634:	0f 70       	andi	r16, 0x0F	; 15
     636:	8e ee       	ldi	r24, 0xEE	; 238
     638:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     63c:	c6 01       	movw	r24, r12
     63e:	96 95       	lsr	r25
     640:	87 95       	ror	r24
     642:	96 95       	lsr	r25
     644:	87 95       	ror	r24
     646:	96 95       	lsr	r25
     648:	87 95       	ror	r24
     64a:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     64e:	9b 81       	ldd	r25, Y+3	; 0x03
     650:	97 95       	ror	r25
     652:	99 27       	eor	r25, r25
     654:	97 95       	ror	r25
     656:	99 0f       	add	r25, r25
     658:	99 0b       	sbc	r25, r25
     65a:	92 95       	swap	r25
     65c:	90 7f       	andi	r25, 0xF0	; 240
     65e:	8c 2d       	mov	r24, r12
     660:	82 95       	swap	r24
     662:	88 0f       	add	r24, r24
     664:	80 7e       	andi	r24, 0xE0	; 224
     666:	89 2b       	or	r24, r25
     668:	80 2b       	or	r24, r16
     66a:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     66e:	8b 81       	ldd	r24, Y+3	; 0x03
     670:	80 fd       	sbrc	r24, 0
     672:	17 c0       	rjmp	.+46     	; 0x6a2 <USART_CAN_TX+0xaa>
     674:	e0 2e       	mov	r14, r16
     676:	f1 2c       	mov	r15, r1
     678:	1e 14       	cp	r1, r14
     67a:	1f 04       	cpc	r1, r15
     67c:	94 f4       	brge	.+36     	; 0x6a2 <USART_CAN_TX+0xaa>
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	10 e0       	ldi	r17, 0x00	; 0
     684:	e4 e0       	ldi	r30, 0x04	; 4
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	ec 0f       	add	r30, r28
     68a:	fd 1f       	adc	r31, r29
     68c:	e8 0f       	add	r30, r24
     68e:	f9 1f       	adc	r31, r25
     690:	80 81       	ld	r24, Z
     692:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     696:	1f 5f       	subi	r17, 0xFF	; 255
     698:	81 2f       	mov	r24, r17
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	8e 15       	cp	r24, r14
     69e:	9f 05       	cpc	r25, r15
     6a0:	8c f3       	brlt	.-30     	; 0x684 <USART_CAN_TX+0x8c>
     6a2:	2b 96       	adiw	r28, 0x0b	; 11
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	f8 94       	cli
     6a8:	de bf       	out	0x3e, r29	; 62
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	1f 91       	pop	r17
     6b4:	0f 91       	pop	r16
     6b6:	ff 90       	pop	r15
     6b8:	ef 90       	pop	r14
     6ba:	df 90       	pop	r13
     6bc:	cf 90       	pop	r12
     6be:	08 95       	ret

000006c0 <init_ADC>:
     6c0:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     6c4:	8e ec       	ldi	r24, 0xCE	; 206
     6c6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     6ca:	81 ec       	ldi	r24, 0xC1	; 193
     6cc:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
     6d0:	08 95       	ret

000006d2 <init_ADC_timer>:
     6d2:	8d e4       	ldi	r24, 0x4D	; 77
     6d4:	87 bd       	out	0x27, r24	; 39
     6d6:	84 b5       	in	r24, 0x24	; 36
     6d8:	82 60       	ori	r24, 0x02	; 2
     6da:	84 bd       	out	0x24, r24	; 36
     6dc:	84 e0       	ldi	r24, 0x04	; 4
     6de:	85 bd       	out	0x25, r24	; 37
     6e0:	ee e6       	ldi	r30, 0x6E	; 110
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 81       	ld	r24, Z
     6e6:	82 60       	ori	r24, 0x02	; 2
     6e8:	80 83       	st	Z, r24
     6ea:	08 95       	ret

000006ec <__vector_14>:
     6ec:	1f 92       	push	r1
     6ee:	0f 92       	push	r0
     6f0:	0f b6       	in	r0, 0x3f	; 63
     6f2:	0f 92       	push	r0
     6f4:	11 24       	eor	r1, r1
     6f6:	8f 93       	push	r24
     6f8:	ef 93       	push	r30
     6fa:	ff 93       	push	r31
     6fc:	ea e7       	ldi	r30, 0x7A	; 122
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	80 81       	ld	r24, Z
     702:	80 64       	ori	r24, 0x40	; 64
     704:	80 83       	st	Z, r24
     706:	ff 91       	pop	r31
     708:	ef 91       	pop	r30
     70a:	8f 91       	pop	r24
     70c:	0f 90       	pop	r0
     70e:	0f be       	out	0x3f, r0	; 63
     710:	0f 90       	pop	r0
     712:	1f 90       	pop	r1
     714:	18 95       	reti

00000716 <__vector_21>:
     716:	1f 92       	push	r1
     718:	0f 92       	push	r0
     71a:	0f b6       	in	r0, 0x3f	; 63
     71c:	0f 92       	push	r0
     71e:	11 24       	eor	r1, r1
     720:	2f 93       	push	r18
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	ef 93       	push	r30
     728:	ff 93       	push	r31
     72a:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     72e:	85 30       	cpi	r24, 0x05	; 5
     730:	31 f0       	breq	.+12     	; 0x73e <__vector_21+0x28>
     732:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     736:	8f 5f       	subi	r24, 0xFF	; 255
     738:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <adCount>
     73c:	02 c0       	rjmp	.+4      	; 0x742 <__vector_21+0x2c>
     73e:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <adCount>
     742:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     746:	80 ff       	sbrs	r24, 0
     748:	61 c0       	rjmp	.+194    	; 0x80c <__vector_21+0xf6>
     74a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <adResult+0x1>
     754:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <adResult>
     758:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     75c:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <adResult>
     760:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <adResult+0x1>
     764:	92 2b       	or	r25, r18
     766:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <adResult+0x1>
     76a:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <adResult>
     76e:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     772:	85 30       	cpi	r24, 0x05	; 5
     774:	a8 f5       	brcc	.+106    	; 0x7e0 <__vector_21+0xca>
     776:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     77a:	81 30       	cpi	r24, 0x01	; 1
     77c:	e9 f4       	brne	.+58     	; 0x7b8 <__vector_21+0xa2>
     77e:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <ep_history>
     782:	89 30       	cpi	r24, 0x09	; 9
     784:	30 f4       	brcc	.+12     	; 0x792 <__vector_21+0x7c>
     786:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <ep_history>
     78a:	8f 5f       	subi	r24, 0xFF	; 255
     78c:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <ep_history>
     790:	03 c0       	rjmp	.+6      	; 0x798 <__vector_21+0x82>
     792:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <ep_history>
     796:	19 9a       	sbi	0x03, 1	; 3
     798:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <ep_history>
     79c:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <adResult>
     7a0:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <adResult+0x1>
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	ee 0f       	add	r30, r30
     7a8:	ff 1f       	adc	r31, r31
     7aa:	e1 58       	subi	r30, 0x81	; 129
     7ac:	fd 4f       	sbci	r31, 0xFD	; 253
     7ae:	91 83       	std	Z+1, r25	; 0x01
     7b0:	80 83       	st	Z, r24
     7b2:	86 e0       	ldi	r24, 0x06	; 6
     7b4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     7b8:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     7bc:	83 30       	cpi	r24, 0x03	; 3
     7be:	81 f4       	brne	.+32     	; 0x7e0 <__vector_21+0xca>
     7c0:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <ep_history>
     7c4:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <adResult>
     7c8:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <adResult+0x1>
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	ee 0f       	add	r30, r30
     7d0:	ff 1f       	adc	r31, r31
     7d2:	e5 59       	subi	r30, 0x95	; 149
     7d4:	fd 4f       	sbci	r31, 0xFD	; 253
     7d6:	91 83       	std	Z+1, r25	; 0x01
     7d8:	80 83       	st	Z, r24
     7da:	87 e0       	ldi	r24, 0x07	; 7
     7dc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     7e0:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adCount>
     7e4:	85 30       	cpi	r24, 0x05	; 5
     7e6:	91 f4       	brne	.+36     	; 0x80c <__vector_21+0xf6>
     7e8:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <ep_history>
     7ec:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <adResult>
     7f0:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <adResult+0x1>
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	ee 0f       	add	r30, r30
     7f8:	ff 1f       	adc	r31, r31
     7fa:	ec 5d       	subi	r30, 0xDC	; 220
     7fc:	fd 4f       	sbci	r31, 0xFD	; 253
     7fe:	91 83       	std	Z+1, r25	; 0x01
     800:	80 83       	st	Z, r24
     802:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <adc_Cycle_Done>
     80c:	ff 91       	pop	r31
     80e:	ef 91       	pop	r30
     810:	9f 91       	pop	r25
     812:	8f 91       	pop	r24
     814:	2f 91       	pop	r18
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <__vector_1>:
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
     82a:	2f 93       	push	r18
     82c:	3f 93       	push	r19
     82e:	4f 93       	push	r20
     830:	5f 93       	push	r21
     832:	6f 93       	push	r22
     834:	7f 93       	push	r23
     836:	8f 93       	push	r24
     838:	9f 93       	push	r25
     83a:	af 93       	push	r26
     83c:	bf 93       	push	r27
     83e:	ef 93       	push	r30
     840:	ff 93       	push	r31
     842:	88 e3       	ldi	r24, 0x38	; 56
     844:	92 e0       	ldi	r25, 0x02	; 2
     846:	0e 94 c0 01 	call	0x380	; 0x380 <mcp2515_get_message>
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <rx_flag>
     850:	ff 91       	pop	r31
     852:	ef 91       	pop	r30
     854:	bf 91       	pop	r27
     856:	af 91       	pop	r26
     858:	9f 91       	pop	r25
     85a:	8f 91       	pop	r24
     85c:	7f 91       	pop	r23
     85e:	6f 91       	pop	r22
     860:	5f 91       	pop	r21
     862:	4f 91       	pop	r20
     864:	3f 91       	pop	r19
     866:	2f 91       	pop	r18
     868:	0f 90       	pop	r0
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	0f 90       	pop	r0
     86e:	1f 90       	pop	r1
     870:	18 95       	reti

00000872 <__vector_24>:
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	0f 92       	push	r0
     87a:	11 24       	eor	r1, r1
     87c:	8f 93       	push	r24
     87e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     882:	8c 7f       	andi	r24, 0xFC	; 252
     884:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <i2c_status>
     888:	8f 91       	pop	r24
     88a:	0f 90       	pop	r0
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	0f 90       	pop	r0
     890:	1f 90       	pop	r1
     892:	18 95       	reti

00000894 <init_state_timer>:
     894:	85 e0       	ldi	r24, 0x05	; 5
     896:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     89a:	86 e1       	ldi	r24, 0x16	; 22
     89c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     8a0:	8d e0       	ldi	r24, 0x0D	; 13
     8a2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     8a6:	82 e0       	ldi	r24, 0x02	; 2
     8a8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     8ac:	08 95       	ret

000008ae <load_i2c_data>:
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     8b6:	83 30       	cpi	r24, 0x03	; 3
     8b8:	09 f4       	brne	.+2      	; 0x8bc <load_i2c_data+0xe>
     8ba:	6b c1       	rjmp	.+726    	; 0xb92 <__stack+0x293>
     8bc:	38 f4       	brcc	.+14     	; 0x8cc <load_i2c_data+0x1e>
     8be:	81 30       	cpi	r24, 0x01	; 1
     8c0:	09 f4       	brne	.+2      	; 0x8c4 <load_i2c_data+0x16>
     8c2:	c3 c0       	rjmp	.+390    	; 0xa4a <__stack+0x14b>
     8c4:	82 30       	cpi	r24, 0x02	; 2
     8c6:	09 f4       	brne	.+2      	; 0x8ca <load_i2c_data+0x1c>
     8c8:	18 c1       	rjmp	.+560    	; 0xafa <__stack+0x1fb>
     8ca:	ae c1       	rjmp	.+860    	; 0xc28 <__stack+0x329>
     8cc:	85 30       	cpi	r24, 0x05	; 5
     8ce:	09 f4       	brne	.+2      	; 0x8d2 <load_i2c_data+0x24>
     8d0:	42 c0       	rjmp	.+132    	; 0x956 <__stack+0x57>
     8d2:	20 f0       	brcs	.+8      	; 0x8dc <load_i2c_data+0x2e>
     8d4:	86 30       	cpi	r24, 0x06	; 6
     8d6:	09 f4       	brne	.+2      	; 0x8da <load_i2c_data+0x2c>
     8d8:	7b c0       	rjmp	.+246    	; 0x9d0 <__stack+0xd1>
     8da:	a6 c1       	rjmp	.+844    	; 0xc28 <__stack+0x329>
     8dc:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     8e0:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     8e4:	97 e0       	ldi	r25, 0x07	; 7
     8e6:	e9 9f       	mul	r30, r25
     8e8:	f0 01       	movw	r30, r0
     8ea:	11 24       	eor	r1, r1
     8ec:	e2 5e       	subi	r30, 0xE2	; 226
     8ee:	fc 4f       	sbci	r31, 0xFC	; 252
     8f0:	e8 0f       	add	r30, r24
     8f2:	f1 1d       	adc	r31, r1
     8f4:	80 81       	ld	r24, Z
     8f6:	88 23       	and	r24, r24
     8f8:	61 f0       	breq	.+24     	; 0x912 <__stack+0x13>
     8fa:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	ed 56       	subi	r30, 0x6D	; 109
     906:	fd 4f       	sbci	r31, 0xFD	; 253
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	9f ef       	ldi	r25, 0xFF	; 255
     90c:	91 83       	std	Z+1, r25	; 0x01
     90e:	80 83       	st	Z, r24
     910:	8b c1       	rjmp	.+790    	; 0xc28 <__stack+0x329>
     912:	e6 e1       	ldi	r30, 0x16	; 22
     914:	f3 e0       	ldi	r31, 0x03	; 3
     916:	80 81       	ld	r24, Z
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	98 2f       	mov	r25, r24
     91c:	88 27       	eor	r24, r24
     91e:	21 81       	ldd	r18, Z+1	; 0x01
     920:	82 2b       	or	r24, r18
     922:	87 ff       	sbrs	r24, 7
     924:	08 c0       	rjmp	.+16     	; 0x936 <__stack+0x37>
     926:	96 95       	lsr	r25
     928:	87 95       	ror	r24
     92a:	96 95       	lsr	r25
     92c:	87 95       	ror	r24
     92e:	96 95       	lsr	r25
     930:	87 95       	ror	r24
     932:	80 6e       	ori	r24, 0xE0	; 224
     934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
     936:	96 95       	lsr	r25
     938:	87 95       	ror	r24
     93a:	96 95       	lsr	r25
     93c:	87 95       	ror	r24
     93e:	96 95       	lsr	r25
     940:	87 95       	ror	r24
     942:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     946:	f0 e0       	ldi	r31, 0x00	; 0
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	ed 56       	subi	r30, 0x6D	; 109
     94e:	fd 4f       	sbci	r31, 0xFD	; 253
     950:	91 83       	std	Z+1, r25	; 0x01
     952:	80 83       	st	Z, r24
     954:	69 c1       	rjmp	.+722    	; 0xc28 <__stack+0x329>
     956:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     95a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     95e:	97 e0       	ldi	r25, 0x07	; 7
     960:	e9 9f       	mul	r30, r25
     962:	f0 01       	movw	r30, r0
     964:	11 24       	eor	r1, r1
     966:	e2 5e       	subi	r30, 0xE2	; 226
     968:	fc 4f       	sbci	r31, 0xFC	; 252
     96a:	e8 0f       	add	r30, r24
     96c:	f1 1d       	adc	r31, r1
     96e:	80 81       	ld	r24, Z
     970:	88 23       	and	r24, r24
     972:	61 f0       	breq	.+24     	; 0x98c <__stack+0x8d>
     974:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	ee 0f       	add	r30, r30
     97c:	ff 1f       	adc	r31, r31
     97e:	ee 54       	subi	r30, 0x4E	; 78
     980:	fd 4f       	sbci	r31, 0xFD	; 253
     982:	8f ef       	ldi	r24, 0xFF	; 255
     984:	9f ef       	ldi	r25, 0xFF	; 255
     986:	91 83       	std	Z+1, r25	; 0x01
     988:	80 83       	st	Z, r24
     98a:	4e c1       	rjmp	.+668    	; 0xc28 <__stack+0x329>
     98c:	e6 e1       	ldi	r30, 0x16	; 22
     98e:	f3 e0       	ldi	r31, 0x03	; 3
     990:	80 81       	ld	r24, Z
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	98 2f       	mov	r25, r24
     996:	88 27       	eor	r24, r24
     998:	21 81       	ldd	r18, Z+1	; 0x01
     99a:	82 2b       	or	r24, r18
     99c:	87 ff       	sbrs	r24, 7
     99e:	08 c0       	rjmp	.+16     	; 0x9b0 <__stack+0xb1>
     9a0:	96 95       	lsr	r25
     9a2:	87 95       	ror	r24
     9a4:	96 95       	lsr	r25
     9a6:	87 95       	ror	r24
     9a8:	96 95       	lsr	r25
     9aa:	87 95       	ror	r24
     9ac:	80 6e       	ori	r24, 0xE0	; 224
     9ae:	06 c0       	rjmp	.+12     	; 0x9bc <__stack+0xbd>
     9b0:	96 95       	lsr	r25
     9b2:	87 95       	ror	r24
     9b4:	96 95       	lsr	r25
     9b6:	87 95       	ror	r24
     9b8:	96 95       	lsr	r25
     9ba:	87 95       	ror	r24
     9bc:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	ee 0f       	add	r30, r30
     9c4:	ff 1f       	adc	r31, r31
     9c6:	ee 54       	subi	r30, 0x4E	; 78
     9c8:	fd 4f       	sbci	r31, 0xFD	; 253
     9ca:	91 83       	std	Z+1, r25	; 0x01
     9cc:	80 83       	st	Z, r24
     9ce:	2c c1       	rjmp	.+600    	; 0xc28 <__stack+0x329>
     9d0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     9d4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     9d8:	97 e0       	ldi	r25, 0x07	; 7
     9da:	e9 9f       	mul	r30, r25
     9dc:	f0 01       	movw	r30, r0
     9de:	11 24       	eor	r1, r1
     9e0:	e2 5e       	subi	r30, 0xE2	; 226
     9e2:	fc 4f       	sbci	r31, 0xFC	; 252
     9e4:	e8 0f       	add	r30, r24
     9e6:	f1 1d       	adc	r31, r1
     9e8:	80 81       	ld	r24, Z
     9ea:	88 23       	and	r24, r24
     9ec:	61 f0       	breq	.+24     	; 0xa06 <__stack+0x107>
     9ee:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     9f2:	f0 e0       	ldi	r31, 0x00	; 0
     9f4:	ee 0f       	add	r30, r30
     9f6:	ff 1f       	adc	r31, r31
     9f8:	e0 5f       	subi	r30, 0xF0	; 240
     9fa:	fd 4f       	sbci	r31, 0xFD	; 253
     9fc:	8f ef       	ldi	r24, 0xFF	; 255
     9fe:	9f ef       	ldi	r25, 0xFF	; 255
     a00:	91 83       	std	Z+1, r25	; 0x01
     a02:	80 83       	st	Z, r24
     a04:	11 c1       	rjmp	.+546    	; 0xc28 <__stack+0x329>
     a06:	e6 e1       	ldi	r30, 0x16	; 22
     a08:	f3 e0       	ldi	r31, 0x03	; 3
     a0a:	80 81       	ld	r24, Z
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	98 2f       	mov	r25, r24
     a10:	88 27       	eor	r24, r24
     a12:	21 81       	ldd	r18, Z+1	; 0x01
     a14:	82 2b       	or	r24, r18
     a16:	87 ff       	sbrs	r24, 7
     a18:	08 c0       	rjmp	.+16     	; 0xa2a <__stack+0x12b>
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	96 95       	lsr	r25
     a20:	87 95       	ror	r24
     a22:	96 95       	lsr	r25
     a24:	87 95       	ror	r24
     a26:	80 6e       	ori	r24, 0xE0	; 224
     a28:	06 c0       	rjmp	.+12     	; 0xa36 <__stack+0x137>
     a2a:	96 95       	lsr	r25
     a2c:	87 95       	ror	r24
     a2e:	96 95       	lsr	r25
     a30:	87 95       	ror	r24
     a32:	96 95       	lsr	r25
     a34:	87 95       	ror	r24
     a36:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	ee 0f       	add	r30, r30
     a3e:	ff 1f       	adc	r31, r31
     a40:	e0 5f       	subi	r30, 0xF0	; 240
     a42:	fd 4f       	sbci	r31, 0xFD	; 253
     a44:	91 83       	std	Z+1, r25	; 0x01
     a46:	80 83       	st	Z, r24
     a48:	ef c0       	rjmp	.+478    	; 0xc28 <__stack+0x329>
     a4a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     a4e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     a52:	97 e0       	ldi	r25, 0x07	; 7
     a54:	e9 9f       	mul	r30, r25
     a56:	f0 01       	movw	r30, r0
     a58:	11 24       	eor	r1, r1
     a5a:	e2 5e       	subi	r30, 0xE2	; 226
     a5c:	fc 4f       	sbci	r31, 0xFC	; 252
     a5e:	e8 0f       	add	r30, r24
     a60:	f1 1d       	adc	r31, r1
     a62:	80 81       	ld	r24, Z
     a64:	88 23       	and	r24, r24
     a66:	89 f0       	breq	.+34     	; 0xa8a <__stack+0x18b>
     a68:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     a6c:	f0 e0       	ldi	r31, 0x00	; 0
     a6e:	ee 0f       	add	r30, r30
     a70:	ff 1f       	adc	r31, r31
     a72:	ee 0f       	add	r30, r30
     a74:	ff 1f       	adc	r31, r31
     a76:	ed 5b       	subi	r30, 0xBD	; 189
     a78:	fd 4f       	sbci	r31, 0xFD	; 253
     a7a:	8f ef       	ldi	r24, 0xFF	; 255
     a7c:	9f ef       	ldi	r25, 0xFF	; 255
     a7e:	dc 01       	movw	r26, r24
     a80:	80 83       	st	Z, r24
     a82:	91 83       	std	Z+1, r25	; 0x01
     a84:	a2 83       	std	Z+2, r26	; 0x02
     a86:	b3 83       	std	Z+3, r27	; 0x03
     a88:	cf c0       	rjmp	.+414    	; 0xc28 <__stack+0x329>
     a8a:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <history>
     a8e:	89 30       	cpi	r24, 0x09	; 9
     a90:	19 f4       	brne	.+6      	; 0xa98 <__stack+0x199>
     a92:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <history>
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <__stack+0x1a3>
     a98:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <history>
     a9c:	8f 5f       	subi	r24, 0xFF	; 255
     a9e:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <history>
     aa2:	e6 e1       	ldi	r30, 0x16	; 22
     aa4:	f3 e0       	ldi	r31, 0x03	; 3
     aa6:	80 81       	ld	r24, Z
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	a0 e0       	ldi	r26, 0x00	; 0
     aac:	b0 e0       	ldi	r27, 0x00	; 0
     aae:	ba 2f       	mov	r27, r26
     ab0:	a9 2f       	mov	r26, r25
     ab2:	98 2f       	mov	r25, r24
     ab4:	88 27       	eor	r24, r24
     ab6:	21 81       	ldd	r18, Z+1	; 0x01
     ab8:	82 2b       	or	r24, r18
     aba:	88 0f       	add	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	aa 1f       	adc	r26, r26
     ac0:	bb 1f       	adc	r27, r27
     ac2:	88 0f       	add	r24, r24
     ac4:	99 1f       	adc	r25, r25
     ac6:	aa 1f       	adc	r26, r26
     ac8:	bb 1f       	adc	r27, r27
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	c0 91 da 01 	lds	r28, 0x01DA	; 0x8001da <history>
     ade:	d0 e0       	ldi	r29, 0x00	; 0
     ae0:	cc 0f       	add	r28, r28
     ae2:	dd 1f       	adc	r29, r29
     ae4:	cc 0f       	add	r28, r28
     ae6:	dd 1f       	adc	r29, r29
     ae8:	cd 5b       	subi	r28, 0xBD	; 189
     aea:	dd 4f       	sbci	r29, 0xFD	; 253
     aec:	22 81       	ldd	r18, Z+2	; 0x02
     aee:	82 2b       	or	r24, r18
     af0:	88 83       	st	Y, r24
     af2:	99 83       	std	Y+1, r25	; 0x01
     af4:	aa 83       	std	Y+2, r26	; 0x02
     af6:	bb 83       	std	Y+3, r27	; 0x03
     af8:	97 c0       	rjmp	.+302    	; 0xc28 <__stack+0x329>
     afa:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     afe:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     b02:	97 e0       	ldi	r25, 0x07	; 7
     b04:	e9 9f       	mul	r30, r25
     b06:	f0 01       	movw	r30, r0
     b08:	11 24       	eor	r1, r1
     b0a:	e2 5e       	subi	r30, 0xE2	; 226
     b0c:	fc 4f       	sbci	r31, 0xFC	; 252
     b0e:	e8 0f       	add	r30, r24
     b10:	f1 1d       	adc	r31, r1
     b12:	80 81       	ld	r24, Z
     b14:	88 23       	and	r24, r24
     b16:	89 f0       	breq	.+34     	; 0xb3a <__stack+0x23b>
     b18:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	ee 0f       	add	r30, r30
     b20:	ff 1f       	adc	r31, r31
     b22:	ee 0f       	add	r30, r30
     b24:	ff 1f       	adc	r31, r31
     b26:	ea 53       	subi	r30, 0x3A	; 58
     b28:	fd 4f       	sbci	r31, 0xFD	; 253
     b2a:	8f ef       	ldi	r24, 0xFF	; 255
     b2c:	9f ef       	ldi	r25, 0xFF	; 255
     b2e:	dc 01       	movw	r26, r24
     b30:	80 83       	st	Z, r24
     b32:	91 83       	std	Z+1, r25	; 0x01
     b34:	a2 83       	std	Z+2, r26	; 0x02
     b36:	b3 83       	std	Z+3, r27	; 0x03
     b38:	77 c0       	rjmp	.+238    	; 0xc28 <__stack+0x329>
     b3a:	e6 e1       	ldi	r30, 0x16	; 22
     b3c:	f3 e0       	ldi	r31, 0x03	; 3
     b3e:	80 81       	ld	r24, Z
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e0       	ldi	r26, 0x00	; 0
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	ba 2f       	mov	r27, r26
     b48:	a9 2f       	mov	r26, r25
     b4a:	98 2f       	mov	r25, r24
     b4c:	88 27       	eor	r24, r24
     b4e:	21 81       	ldd	r18, Z+1	; 0x01
     b50:	82 2b       	or	r24, r18
     b52:	88 0f       	add	r24, r24
     b54:	99 1f       	adc	r25, r25
     b56:	aa 1f       	adc	r26, r26
     b58:	bb 1f       	adc	r27, r27
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	aa 1f       	adc	r26, r26
     b60:	bb 1f       	adc	r27, r27
     b62:	88 0f       	add	r24, r24
     b64:	99 1f       	adc	r25, r25
     b66:	aa 1f       	adc	r26, r26
     b68:	bb 1f       	adc	r27, r27
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	aa 1f       	adc	r26, r26
     b70:	bb 1f       	adc	r27, r27
     b72:	c0 91 da 01 	lds	r28, 0x01DA	; 0x8001da <history>
     b76:	d0 e0       	ldi	r29, 0x00	; 0
     b78:	cc 0f       	add	r28, r28
     b7a:	dd 1f       	adc	r29, r29
     b7c:	cc 0f       	add	r28, r28
     b7e:	dd 1f       	adc	r29, r29
     b80:	ca 53       	subi	r28, 0x3A	; 58
     b82:	dd 4f       	sbci	r29, 0xFD	; 253
     b84:	22 81       	ldd	r18, Z+2	; 0x02
     b86:	82 2b       	or	r24, r18
     b88:	88 83       	st	Y, r24
     b8a:	99 83       	std	Y+1, r25	; 0x01
     b8c:	aa 83       	std	Y+2, r26	; 0x02
     b8e:	bb 83       	std	Y+3, r27	; 0x03
     b90:	4b c0       	rjmp	.+150    	; 0xc28 <__stack+0x329>
     b92:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     b96:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     b9a:	97 e0       	ldi	r25, 0x07	; 7
     b9c:	e9 9f       	mul	r30, r25
     b9e:	f0 01       	movw	r30, r0
     ba0:	11 24       	eor	r1, r1
     ba2:	e2 5e       	subi	r30, 0xE2	; 226
     ba4:	fc 4f       	sbci	r31, 0xFC	; 252
     ba6:	e8 0f       	add	r30, r24
     ba8:	f1 1d       	adc	r31, r1
     baa:	80 81       	ld	r24, Z
     bac:	88 23       	and	r24, r24
     bae:	89 f0       	breq	.+34     	; 0xbd2 <__stack+0x2d3>
     bb0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	ee 0f       	add	r30, r30
     bb8:	ff 1f       	adc	r31, r31
     bba:	ee 0f       	add	r30, r30
     bbc:	ff 1f       	adc	r31, r31
     bbe:	e2 51       	subi	r30, 0x12	; 18
     bc0:	fd 4f       	sbci	r31, 0xFD	; 253
     bc2:	8f ef       	ldi	r24, 0xFF	; 255
     bc4:	9f ef       	ldi	r25, 0xFF	; 255
     bc6:	dc 01       	movw	r26, r24
     bc8:	80 83       	st	Z, r24
     bca:	91 83       	std	Z+1, r25	; 0x01
     bcc:	a2 83       	std	Z+2, r26	; 0x02
     bce:	b3 83       	std	Z+3, r27	; 0x03
     bd0:	2b c0       	rjmp	.+86     	; 0xc28 <__stack+0x329>
     bd2:	e6 e1       	ldi	r30, 0x16	; 22
     bd4:	f3 e0       	ldi	r31, 0x03	; 3
     bd6:	80 81       	ld	r24, Z
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	a0 e0       	ldi	r26, 0x00	; 0
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	ba 2f       	mov	r27, r26
     be0:	a9 2f       	mov	r26, r25
     be2:	98 2f       	mov	r25, r24
     be4:	88 27       	eor	r24, r24
     be6:	21 81       	ldd	r18, Z+1	; 0x01
     be8:	82 2b       	or	r24, r18
     bea:	88 0f       	add	r24, r24
     bec:	99 1f       	adc	r25, r25
     bee:	aa 1f       	adc	r26, r26
     bf0:	bb 1f       	adc	r27, r27
     bf2:	88 0f       	add	r24, r24
     bf4:	99 1f       	adc	r25, r25
     bf6:	aa 1f       	adc	r26, r26
     bf8:	bb 1f       	adc	r27, r27
     bfa:	88 0f       	add	r24, r24
     bfc:	99 1f       	adc	r25, r25
     bfe:	aa 1f       	adc	r26, r26
     c00:	bb 1f       	adc	r27, r27
     c02:	88 0f       	add	r24, r24
     c04:	99 1f       	adc	r25, r25
     c06:	aa 1f       	adc	r26, r26
     c08:	bb 1f       	adc	r27, r27
     c0a:	c0 91 da 01 	lds	r28, 0x01DA	; 0x8001da <history>
     c0e:	d0 e0       	ldi	r29, 0x00	; 0
     c10:	cc 0f       	add	r28, r28
     c12:	dd 1f       	adc	r29, r29
     c14:	cc 0f       	add	r28, r28
     c16:	dd 1f       	adc	r29, r29
     c18:	c2 51       	subi	r28, 0x12	; 18
     c1a:	dd 4f       	sbci	r29, 0xFD	; 253
     c1c:	22 81       	ldd	r18, Z+2	; 0x02
     c1e:	82 2b       	or	r24, r18
     c20:	88 83       	st	Y, r24
     c22:	99 83       	std	Y+1, r25	; 0x01
     c24:	aa 83       	std	Y+2, r26	; 0x02
     c26:	bb 83       	std	Y+3, r27	; 0x03
     c28:	df 91       	pop	r29
     c2a:	cf 91       	pop	r28
     c2c:	08 95       	ret

00000c2e <i2c_write>:
     c2e:	cf 93       	push	r28
     c30:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c34:	c9 2f       	mov	r28, r25
     c36:	c4 70       	andi	r28, 0x04	; 4
     c38:	92 ff       	sbrs	r25, 2
     c3a:	c5 c0       	rjmp	.+394    	; 0xdc6 <i2c_write+0x198>
     c3c:	c0 91 d4 01 	lds	r28, 0x01D4	; 0x8001d4 <i2c_status>
     c40:	c8 31       	cpi	r28, 0x18	; 24
     c42:	09 f1       	breq	.+66     	; 0xc86 <i2c_write+0x58>
     c44:	28 f4       	brcc	.+10     	; 0xc50 <i2c_write+0x22>
     c46:	c8 30       	cpi	r28, 0x08	; 8
     c48:	61 f0       	breq	.+24     	; 0xc62 <i2c_write+0x34>
     c4a:	c0 31       	cpi	r28, 0x10	; 16
     c4c:	99 f0       	breq	.+38     	; 0xc74 <i2c_write+0x46>
     c4e:	ba c0       	rjmp	.+372    	; 0xdc4 <i2c_write+0x196>
     c50:	c8 32       	cpi	r28, 0x28	; 40
     c52:	e9 f1       	breq	.+122    	; 0xcce <i2c_write+0xa0>
     c54:	c0 33       	cpi	r28, 0x30	; 48
     c56:	09 f4       	brne	.+2      	; 0xc5a <i2c_write+0x2c>
     c58:	82 c0       	rjmp	.+260    	; 0xd5e <i2c_write+0x130>
     c5a:	c0 32       	cpi	r28, 0x20	; 32
     c5c:	09 f0       	breq	.+2      	; 0xc60 <i2c_write+0x32>
     c5e:	b2 c0       	rjmp	.+356    	; 0xdc4 <i2c_write+0x196>
     c60:	21 c0       	rjmp	.+66     	; 0xca4 <i2c_write+0x76>
     c62:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     c66:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c6a:	85 e8       	ldi	r24, 0x85	; 133
     c6c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c70:	c0 e0       	ldi	r28, 0x00	; 0
     c72:	a9 c0       	rjmp	.+338    	; 0xdc6 <i2c_write+0x198>
     c74:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     c78:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c7c:	85 e8       	ldi	r24, 0x85	; 133
     c7e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c82:	c0 e0       	ldi	r28, 0x00	; 0
     c84:	a0 c0       	rjmp	.+320    	; 0xdc6 <i2c_write+0x198>
     c86:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <nack_count>
     c8a:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <__data_end>
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	ea 5e       	subi	r30, 0xEA	; 234
     c92:	fc 4f       	sbci	r31, 0xFC	; 252
     c94:	80 81       	ld	r24, Z
     c96:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c9a:	85 e8       	ldi	r24, 0x85	; 133
     c9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     ca0:	c0 e0       	ldi	r28, 0x00	; 0
     ca2:	91 c0       	rjmp	.+290    	; 0xdc6 <i2c_write+0x198>
     ca4:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <nack_count>
     ca8:	9f 5f       	subi	r25, 0xFF	; 255
     caa:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <nack_count>
     cae:	9b 30       	cpi	r25, 0x0B	; 11
     cb0:	38 f0       	brcs	.+14     	; 0xcc0 <i2c_write+0x92>
     cb2:	82 e0       	ldi	r24, 0x02	; 2
     cb4:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <write_done>
     cb8:	85 e9       	ldi	r24, 0x95	; 149
     cba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cbe:	83 c0       	rjmp	.+262    	; 0xdc6 <i2c_write+0x198>
     cc0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     cc4:	85 e8       	ldi	r24, 0x85	; 133
     cc6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cca:	c0 e0       	ldi	r28, 0x00	; 0
     ccc:	7c c0       	rjmp	.+248    	; 0xdc6 <i2c_write+0x198>
     cce:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <nack_count>
     cd2:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <__data_end>
     cd6:	2e 2f       	mov	r18, r30
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	2f 5f       	subi	r18, 0xFF	; 255
     cdc:	3f 4f       	sbci	r19, 0xFF	; 255
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	26 17       	cp	r18, r22
     ce2:	37 07       	cpc	r19, r23
     ce4:	74 f4       	brge	.+28     	; 0xd02 <i2c_write+0xd4>
     ce6:	ef 5f       	subi	r30, 0xFF	; 255
     ce8:	e0 93 cc 01 	sts	0x01CC, r30	; 0x8001cc <__data_end>
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	ea 5e       	subi	r30, 0xEA	; 234
     cf0:	fc 4f       	sbci	r31, 0xFC	; 252
     cf2:	80 81       	ld	r24, Z
     cf4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     cf8:	85 e8       	ldi	r24, 0x85	; 133
     cfa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cfe:	c0 e0       	ldi	r28, 0x00	; 0
     d00:	62 c0       	rjmp	.+196    	; 0xdc6 <i2c_write+0x198>
     d02:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     d06:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <state>
     d0a:	94 30       	cpi	r25, 0x04	; 4
     d0c:	00 f5       	brcc	.+64     	; 0xd4e <i2c_write+0x120>
     d0e:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <state>
     d12:	99 23       	and	r25, r25
     d14:	e1 f0       	breq	.+56     	; 0xd4e <i2c_write+0x120>
     d16:	80 3e       	cpi	r24, 0xE0	; 224
     d18:	71 f4       	brne	.+28     	; 0xd36 <i2c_write+0x108>
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <MPL_WRITE>
     d20:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <MPL_READ>
     d24:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <TCA_WRITE>
     d28:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <write_done>
     d2c:	85 e9       	ldi	r24, 0x95	; 149
     d2e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d32:	c0 e0       	ldi	r28, 0x00	; 0
     d34:	48 c0       	rjmp	.+144    	; 0xdc6 <i2c_write+0x198>
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <MPL_READ>
     d3c:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <MPL_WRITE>
     d40:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <write_done>
     d44:	85 ea       	ldi	r24, 0xA5	; 165
     d46:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d4a:	c0 e0       	ldi	r28, 0x00	; 0
     d4c:	3c c0       	rjmp	.+120    	; 0xdc6 <i2c_write+0x198>
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <write_done>
     d54:	85 e9       	ldi	r24, 0x95	; 149
     d56:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d5a:	c0 e0       	ldi	r28, 0x00	; 0
     d5c:	34 c0       	rjmp	.+104    	; 0xdc6 <i2c_write+0x198>
     d5e:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <nack_count>
     d62:	8f 5f       	subi	r24, 0xFF	; 255
     d64:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <nack_count>
     d68:	8b 30       	cpi	r24, 0x0B	; 11
     d6a:	f8 f0       	brcs	.+62     	; 0xdaa <i2c_write+0x17c>
     d6c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     d70:	1f 92       	push	r1
     d72:	8f 93       	push	r24
     d74:	87 e1       	ldi	r24, 0x17	; 23
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	9f 93       	push	r25
     d7a:	8f 93       	push	r24
     d7c:	8e ed       	ldi	r24, 0xDE	; 222
     d7e:	91 e0       	ldi	r25, 0x01	; 1
     d80:	9f 93       	push	r25
     d82:	8f 93       	push	r24
     d84:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
     d88:	8e ed       	ldi	r24, 0xDE	; 222
     d8a:	91 e0       	ldi	r25, 0x01	; 1
     d8c:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
     d90:	82 e0       	ldi	r24, 0x02	; 2
     d92:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <write_done>
     d96:	85 e9       	ldi	r24, 0x95	; 149
     d98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	0f 90       	pop	r0
     da6:	0f 90       	pop	r0
     da8:	0e c0       	rjmp	.+28     	; 0xdc6 <i2c_write+0x198>
     daa:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <__data_end>
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	ea 5e       	subi	r30, 0xEA	; 234
     db2:	fc 4f       	sbci	r31, 0xFC	; 252
     db4:	80 81       	ld	r24, Z
     db6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     dba:	85 e8       	ldi	r24, 0x85	; 133
     dbc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dc0:	c0 e0       	ldi	r28, 0x00	; 0
     dc2:	01 c0       	rjmp	.+2      	; 0xdc6 <i2c_write+0x198>
     dc4:	c0 e0       	ldi	r28, 0x00	; 0
     dc6:	8c 2f       	mov	r24, r28
     dc8:	cf 91       	pop	r28
     dca:	08 95       	ret

00000dcc <i2c_read>:
     dcc:	28 2f       	mov	r18, r24
     dce:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dd2:	89 2f       	mov	r24, r25
     dd4:	84 70       	andi	r24, 0x04	; 4
     dd6:	92 ff       	sbrs	r25, 2
     dd8:	7d c0       	rjmp	.+250    	; 0xed4 <i2c_read+0x108>
     dda:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <i2c_status>
     dde:	90 34       	cpi	r25, 0x40	; 64
     de0:	09 f1       	breq	.+66     	; 0xe24 <i2c_read+0x58>
     de2:	28 f4       	brcc	.+10     	; 0xdee <i2c_read+0x22>
     de4:	98 30       	cpi	r25, 0x08	; 8
     de6:	61 f0       	breq	.+24     	; 0xe00 <i2c_read+0x34>
     de8:	90 31       	cpi	r25, 0x10	; 16
     dea:	99 f0       	breq	.+38     	; 0xe12 <i2c_read+0x46>
     dec:	72 c0       	rjmp	.+228    	; 0xed2 <i2c_read+0x106>
     dee:	90 35       	cpi	r25, 0x50	; 80
     df0:	e1 f1       	breq	.+120    	; 0xe6a <i2c_read+0x9e>
     df2:	98 35       	cpi	r25, 0x58	; 88
     df4:	09 f4       	brne	.+2      	; 0xdf8 <i2c_read+0x2c>
     df6:	5f c0       	rjmp	.+190    	; 0xeb6 <i2c_read+0xea>
     df8:	98 34       	cpi	r25, 0x48	; 72
     dfa:	09 f0       	breq	.+2      	; 0xdfe <i2c_read+0x32>
     dfc:	6a c0       	rjmp	.+212    	; 0xed2 <i2c_read+0x106>
     dfe:	21 c0       	rjmp	.+66     	; 0xe42 <i2c_read+0x76>
     e00:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     e04:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e08:	85 e8       	ldi	r24, 0x85	; 133
     e0a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	08 95       	ret
     e12:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     e16:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e1a:	85 e8       	ldi	r24, 0x85	; 133
     e1c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	08 95       	ret
     e24:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <nack_count>
     e28:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <busy>
     e2c:	88 23       	and	r24, r24
     e2e:	29 f0       	breq	.+10     	; 0xe3a <i2c_read+0x6e>
     e30:	85 e8       	ldi	r24, 0x85	; 133
     e32:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	08 95       	ret
     e3a:	95 ec       	ldi	r25, 0xC5	; 197
     e3c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e40:	08 95       	ret
     e42:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <nack_count>
     e46:	8f 5f       	subi	r24, 0xFF	; 255
     e48:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <nack_count>
     e4c:	8b 30       	cpi	r24, 0x0B	; 11
     e4e:	40 f0       	brcs	.+16     	; 0xe60 <i2c_read+0x94>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <read_done>
     e56:	85 e9       	ldi	r24, 0x95	; 149
     e58:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e5c:	80 e4       	ldi	r24, 0x40	; 64
     e5e:	08 95       	ret
     e60:	85 ea       	ldi	r24, 0xA5	; 165
     e62:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	08 95       	ret
     e6a:	20 91 cc 01 	lds	r18, 0x01CC	; 0x8001cc <__data_end>
     e6e:	82 2f       	mov	r24, r18
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	ac 01       	movw	r20, r24
     e74:	4f 5f       	subi	r20, 0xFF	; 255
     e76:	5f 4f       	sbci	r21, 0xFF	; 255
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	46 17       	cp	r20, r22
     e7c:	57 07       	cpc	r21, r23
     e7e:	74 f4       	brge	.+28     	; 0xe9c <i2c_read+0xd0>
     e80:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e84:	fc 01       	movw	r30, r24
     e86:	ea 5e       	subi	r30, 0xEA	; 234
     e88:	fc 4f       	sbci	r31, 0xFC	; 252
     e8a:	30 83       	st	Z, r19
     e8c:	2f 5f       	subi	r18, 0xFF	; 255
     e8e:	20 93 cc 01 	sts	0x01CC, r18	; 0x8001cc <__data_end>
     e92:	85 ec       	ldi	r24, 0xC5	; 197
     e94:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	08 95       	ret
     e9c:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     ea0:	fc 01       	movw	r30, r24
     ea2:	ea 5e       	subi	r30, 0xEA	; 234
     ea4:	fc 4f       	sbci	r31, 0xFC	; 252
     ea6:	20 83       	st	Z, r18
     ea8:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     eac:	85 e8       	ldi	r24, 0x85	; 133
     eae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	08 95       	ret
     eb6:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     eba:	f8 94       	cli
     ebc:	0e 94 57 04 	call	0x8ae	; 0x8ae <load_i2c_data>
     ec0:	78 94       	sei
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <read_done>
     ec8:	85 e9       	ldi	r24, 0x95	; 149
     eca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     ece:	80 e0       	ldi	r24, 0x00	; 0
     ed0:	08 95       	ret
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	08 95       	ret

00000ed6 <init_i2c>:
     ed6:	e9 eb       	ldi	r30, 0xB9	; 185
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	80 81       	ld	r24, Z
     edc:	81 60       	ori	r24, 0x01	; 1
     ede:	80 83       	st	Z, r24
     ee0:	83 e0       	ldi	r24, 0x03	; 3
     ee2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     ee6:	85 ea       	ldi	r24, 0xA5	; 165
     ee8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     eec:	08 95       	ret

00000eee <__vector_11>:
     eee:	1f 92       	push	r1
     ef0:	0f 92       	push	r0
     ef2:	0f b6       	in	r0, 0x3f	; 63
     ef4:	0f 92       	push	r0
     ef6:	11 24       	eor	r1, r1
     ef8:	2f 93       	push	r18
     efa:	3f 93       	push	r19
     efc:	4f 93       	push	r20
     efe:	5f 93       	push	r21
     f00:	6f 93       	push	r22
     f02:	7f 93       	push	r23
     f04:	8f 93       	push	r24
     f06:	9f 93       	push	r25
     f08:	af 93       	push	r26
     f0a:	bf 93       	push	r27
     f0c:	ef 93       	push	r30
     f0e:	ff 93       	push	r31
     f10:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <end_state>
     f14:	88 23       	and	r24, r24
     f16:	e9 f1       	breq	.+122    	; 0xf92 <__vector_11+0xa4>
     f18:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     f1c:	86 30       	cpi	r24, 0x06	; 6
     f1e:	e0 f4       	brcc	.+56     	; 0xf58 <__vector_11+0x6a>
     f20:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     f24:	8f 5f       	subi	r24, 0xFF	; 255
     f26:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <state>
     f2a:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <MPL_READ>
     f2e:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <MPL_WRITE>
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <TCA_WRITE>
     f38:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     f3c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     f40:	97 e0       	ldi	r25, 0x07	; 7
     f42:	e9 9f       	mul	r30, r25
     f44:	f0 01       	movw	r30, r0
     f46:	11 24       	eor	r1, r1
     f48:	e2 5e       	subi	r30, 0xE2	; 226
     f4a:	fc 4f       	sbci	r31, 0xFC	; 252
     f4c:	e8 0f       	add	r30, r24
     f4e:	f1 1d       	adc	r31, r1
     f50:	10 82       	st	Z, r1
     f52:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     f56:	18 c0       	rjmp	.+48     	; 0xf88 <__vector_11+0x9a>
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <state>
     f5e:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <MPL_READ>
     f62:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <MPL_WRITE>
     f66:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <TCA_WRITE>
     f6a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
     f6e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
     f72:	97 e0       	ldi	r25, 0x07	; 7
     f74:	e9 9f       	mul	r30, r25
     f76:	f0 01       	movw	r30, r0
     f78:	11 24       	eor	r1, r1
     f7a:	e2 5e       	subi	r30, 0xE2	; 226
     f7c:	fc 4f       	sbci	r31, 0xFC	; 252
     f7e:	e8 0f       	add	r30, r24
     f80:	f1 1d       	adc	r31, r1
     f82:	10 82       	st	Z, r1
     f84:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     f88:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <end_state>
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <state_ready>
     f92:	ff 91       	pop	r31
     f94:	ef 91       	pop	r30
     f96:	bf 91       	pop	r27
     f98:	af 91       	pop	r26
     f9a:	9f 91       	pop	r25
     f9c:	8f 91       	pop	r24
     f9e:	7f 91       	pop	r23
     fa0:	6f 91       	pop	r22
     fa2:	5f 91       	pop	r21
     fa4:	4f 91       	pop	r20
     fa6:	3f 91       	pop	r19
     fa8:	2f 91       	pop	r18
     faa:	0f 90       	pop	r0
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	0f 90       	pop	r0
     fb0:	1f 90       	pop	r1
     fb2:	18 95       	reti

00000fb4 <init_int_press>:
     fb4:	cf 93       	push	r28
     fb6:	df 93       	push	r29
     fb8:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     fbc:	84 e0       	ldi	r24, 0x04	; 4
     fbe:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
     fc2:	cc eb       	ldi	r28, 0xBC	; 188
     fc4:	d0 e0       	ldi	r29, 0x00	; 0
     fc6:	07 c0       	rjmp	.+14     	; 0xfd6 <init_int_press+0x22>
     fc8:	88 81       	ld	r24, Y
     fca:	88 23       	and	r24, r24
     fcc:	34 f4       	brge	.+12     	; 0xfda <init_int_press+0x26>
     fce:	61 e0       	ldi	r22, 0x01	; 1
     fd0:	80 ee       	ldi	r24, 0xE0	; 224
     fd2:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
     fd6:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
     fda:	91 30       	cpi	r25, 0x01	; 1
     fdc:	a9 f7       	brne	.-22     	; 0xfc8 <init_int_press+0x14>
     fde:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
     fe2:	1f 92       	push	r1
     fe4:	8f 93       	push	r24
     fe6:	87 e2       	ldi	r24, 0x27	; 39
     fe8:	91 e0       	ldi	r25, 0x01	; 1
     fea:	9f 93       	push	r25
     fec:	8f 93       	push	r24
     fee:	8e ed       	ldi	r24, 0xDE	; 222
     ff0:	91 e0       	ldi	r25, 0x01	; 1
     ff2:	9f 93       	push	r25
     ff4:	8f 93       	push	r24
     ff6:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
     ffa:	8e ed       	ldi	r24, 0xDE	; 222
     ffc:	91 e0       	ldi	r25, 0x01	; 1
     ffe:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    1002:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    1006:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    100a:	e6 e1       	ldi	r30, 0x16	; 22
    100c:	f3 e0       	ldi	r31, 0x03	; 3
    100e:	86 e2       	ldi	r24, 0x26	; 38
    1010:	80 83       	st	Z, r24
    1012:	89 e3       	ldi	r24, 0x39	; 57
    1014:	81 83       	std	Z+1, r24	; 0x01
    1016:	0f 90       	pop	r0
    1018:	0f 90       	pop	r0
    101a:	0f 90       	pop	r0
    101c:	0f 90       	pop	r0
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
    1022:	cc eb       	ldi	r28, 0xBC	; 188
    1024:	d0 e0       	ldi	r29, 0x00	; 0
    1026:	07 c0       	rjmp	.+14     	; 0x1036 <init_int_press+0x82>
    1028:	88 81       	ld	r24, Y
    102a:	88 23       	and	r24, r24
    102c:	34 f4       	brge	.+12     	; 0x103a <init_int_press+0x86>
    102e:	62 e0       	ldi	r22, 0x02	; 2
    1030:	80 ec       	ldi	r24, 0xC0	; 192
    1032:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    1036:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
    103a:	91 30       	cpi	r25, 0x01	; 1
    103c:	a9 f7       	brne	.-22     	; 0x1028 <init_int_press+0x74>
    103e:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
    1042:	1f 92       	push	r1
    1044:	8f 93       	push	r24
    1046:	8b e3       	ldi	r24, 0x3B	; 59
    1048:	91 e0       	ldi	r25, 0x01	; 1
    104a:	9f 93       	push	r25
    104c:	8f 93       	push	r24
    104e:	8e ed       	ldi	r24, 0xDE	; 222
    1050:	91 e0       	ldi	r25, 0x01	; 1
    1052:	9f 93       	push	r25
    1054:	8f 93       	push	r24
    1056:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
    105a:	8e ed       	ldi	r24, 0xDE	; 222
    105c:	91 e0       	ldi	r25, 0x01	; 1
    105e:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    1062:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    1066:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    106a:	85 e0       	ldi	r24, 0x05	; 5
    106c:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	0f 90       	pop	r0
    107a:	0f 90       	pop	r0
    107c:	cc eb       	ldi	r28, 0xBC	; 188
    107e:	d0 e0       	ldi	r29, 0x00	; 0
    1080:	07 c0       	rjmp	.+14     	; 0x1090 <init_int_press+0xdc>
    1082:	88 81       	ld	r24, Y
    1084:	88 23       	and	r24, r24
    1086:	34 f4       	brge	.+12     	; 0x1094 <init_int_press+0xe0>
    1088:	61 e0       	ldi	r22, 0x01	; 1
    108a:	80 ee       	ldi	r24, 0xE0	; 224
    108c:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    1090:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
    1094:	91 30       	cpi	r25, 0x01	; 1
    1096:	a9 f7       	brne	.-22     	; 0x1082 <init_int_press+0xce>
    1098:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    109c:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
    10a0:	1f 92       	push	r1
    10a2:	8f 93       	push	r24
    10a4:	87 e2       	ldi	r24, 0x27	; 39
    10a6:	91 e0       	ldi	r25, 0x01	; 1
    10a8:	9f 93       	push	r25
    10aa:	8f 93       	push	r24
    10ac:	8e ed       	ldi	r24, 0xDE	; 222
    10ae:	91 e0       	ldi	r25, 0x01	; 1
    10b0:	9f 93       	push	r25
    10b2:	8f 93       	push	r24
    10b4:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
    10b8:	8e ed       	ldi	r24, 0xDE	; 222
    10ba:	91 e0       	ldi	r25, 0x01	; 1
    10bc:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    10c0:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    10c4:	e6 e1       	ldi	r30, 0x16	; 22
    10c6:	f3 e0       	ldi	r31, 0x03	; 3
    10c8:	86 e2       	ldi	r24, 0x26	; 38
    10ca:	80 83       	st	Z, r24
    10cc:	89 e3       	ldi	r24, 0x39	; 57
    10ce:	81 83       	std	Z+1, r24	; 0x01
    10d0:	0f 90       	pop	r0
    10d2:	0f 90       	pop	r0
    10d4:	0f 90       	pop	r0
    10d6:	0f 90       	pop	r0
    10d8:	0f 90       	pop	r0
    10da:	0f 90       	pop	r0
    10dc:	cc eb       	ldi	r28, 0xBC	; 188
    10de:	d0 e0       	ldi	r29, 0x00	; 0
    10e0:	07 c0       	rjmp	.+14     	; 0x10f0 <init_int_press+0x13c>
    10e2:	88 81       	ld	r24, Y
    10e4:	88 23       	and	r24, r24
    10e6:	34 f4       	brge	.+12     	; 0x10f4 <init_int_press+0x140>
    10e8:	62 e0       	ldi	r22, 0x02	; 2
    10ea:	80 ec       	ldi	r24, 0xC0	; 192
    10ec:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    10f0:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
    10f4:	91 30       	cpi	r25, 0x01	; 1
    10f6:	a9 f7       	brne	.-22     	; 0x10e2 <init_int_press+0x12e>
    10f8:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
    10fc:	1f 92       	push	r1
    10fe:	8f 93       	push	r24
    1100:	8b e3       	ldi	r24, 0x3B	; 59
    1102:	91 e0       	ldi	r25, 0x01	; 1
    1104:	9f 93       	push	r25
    1106:	8f 93       	push	r24
    1108:	8e ed       	ldi	r24, 0xDE	; 222
    110a:	91 e0       	ldi	r25, 0x01	; 1
    110c:	9f 93       	push	r25
    110e:	8f 93       	push	r24
    1110:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
    1114:	8e ed       	ldi	r24, 0xDE	; 222
    1116:	91 e0       	ldi	r25, 0x01	; 1
    1118:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    111c:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    1120:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    1124:	86 e0       	ldi	r24, 0x06	; 6
    1126:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
    112a:	0f 90       	pop	r0
    112c:	0f 90       	pop	r0
    112e:	0f 90       	pop	r0
    1130:	0f 90       	pop	r0
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	cc eb       	ldi	r28, 0xBC	; 188
    1138:	d0 e0       	ldi	r29, 0x00	; 0
    113a:	07 c0       	rjmp	.+14     	; 0x114a <init_int_press+0x196>
    113c:	88 81       	ld	r24, Y
    113e:	88 23       	and	r24, r24
    1140:	34 f4       	brge	.+12     	; 0x114e <init_int_press+0x19a>
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	80 ee       	ldi	r24, 0xE0	; 224
    1146:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    114a:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
    114e:	91 30       	cpi	r25, 0x01	; 1
    1150:	a9 f7       	brne	.-22     	; 0x113c <init_int_press+0x188>
    1152:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    1156:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
    115a:	1f 92       	push	r1
    115c:	8f 93       	push	r24
    115e:	8f e4       	ldi	r24, 0x4F	; 79
    1160:	91 e0       	ldi	r25, 0x01	; 1
    1162:	9f 93       	push	r25
    1164:	8f 93       	push	r24
    1166:	8e ed       	ldi	r24, 0xDE	; 222
    1168:	91 e0       	ldi	r25, 0x01	; 1
    116a:	9f 93       	push	r25
    116c:	8f 93       	push	r24
    116e:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
    1172:	8e ed       	ldi	r24, 0xDE	; 222
    1174:	91 e0       	ldi	r25, 0x01	; 1
    1176:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    117a:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    117e:	e6 e1       	ldi	r30, 0x16	; 22
    1180:	f3 e0       	ldi	r31, 0x03	; 3
    1182:	86 e2       	ldi	r24, 0x26	; 38
    1184:	80 83       	st	Z, r24
    1186:	89 e3       	ldi	r24, 0x39	; 57
    1188:	81 83       	std	Z+1, r24	; 0x01
    118a:	0f 90       	pop	r0
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	0f 90       	pop	r0
    1196:	cc eb       	ldi	r28, 0xBC	; 188
    1198:	d0 e0       	ldi	r29, 0x00	; 0
    119a:	07 c0       	rjmp	.+14     	; 0x11aa <init_int_press+0x1f6>
    119c:	88 81       	ld	r24, Y
    119e:	88 23       	and	r24, r24
    11a0:	34 f4       	brge	.+12     	; 0x11ae <init_int_press+0x1fa>
    11a2:	62 e0       	ldi	r22, 0x02	; 2
    11a4:	80 ec       	ldi	r24, 0xC0	; 192
    11a6:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    11aa:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <write_done>
    11ae:	91 30       	cpi	r25, 0x01	; 1
    11b0:	a9 f7       	brne	.-22     	; 0x119c <init_int_press+0x1e8>
    11b2:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <i2c_status>
    11b6:	1f 92       	push	r1
    11b8:	8f 93       	push	r24
    11ba:	8b e3       	ldi	r24, 0x3B	; 59
    11bc:	91 e0       	ldi	r25, 0x01	; 1
    11be:	9f 93       	push	r25
    11c0:	8f 93       	push	r24
    11c2:	8e ed       	ldi	r24, 0xDE	; 222
    11c4:	91 e0       	ldi	r25, 0x01	; 1
    11c6:	9f 93       	push	r25
    11c8:	8f 93       	push	r24
    11ca:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
    11ce:	8e ed       	ldi	r24, 0xDE	; 222
    11d0:	91 e0       	ldi	r25, 0x01	; 1
    11d2:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    11d6:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
    11da:	0f 90       	pop	r0
    11dc:	0f 90       	pop	r0
    11de:	0f 90       	pop	r0
    11e0:	0f 90       	pop	r0
    11e2:	0f 90       	pop	r0
    11e4:	0f 90       	pop	r0
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	08 95       	ret

000011ec <ip_CAN>:
    11ec:	cf 93       	push	r28
    11ee:	df 93       	push	r29
    11f0:	f8 94       	cli
    11f2:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    11f6:	cc e0       	ldi	r28, 0x0C	; 12
    11f8:	d1 e0       	ldi	r29, 0x01	; 1
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	ee 0f       	add	r30, r30
    11fe:	ff 1f       	adc	r31, r31
    1200:	ee 0f       	add	r30, r30
    1202:	ff 1f       	adc	r31, r31
    1204:	ed 5b       	subi	r30, 0xBD	; 189
    1206:	fd 4f       	sbci	r31, 0xFD	; 253
    1208:	80 81       	ld	r24, Z
    120a:	8f 83       	std	Y+7, r24	; 0x07
    120c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	ee 0f       	add	r30, r30
    1214:	ff 1f       	adc	r31, r31
    1216:	ee 0f       	add	r30, r30
    1218:	ff 1f       	adc	r31, r31
    121a:	ed 5b       	subi	r30, 0xBD	; 189
    121c:	fd 4f       	sbci	r31, 0xFD	; 253
    121e:	81 81       	ldd	r24, Z+1	; 0x01
    1220:	88 87       	std	Y+8, r24	; 0x08
    1222:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <history>
    1226:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	aa 0f       	add	r26, r26
    122e:	bb 1f       	adc	r27, r27
    1230:	aa 0f       	add	r26, r26
    1232:	bb 1f       	adc	r27, r27
    1234:	ad 5b       	subi	r26, 0xBD	; 189
    1236:	bd 4f       	sbci	r27, 0xFD	; 253
    1238:	12 96       	adiw	r26, 0x02	; 2
    123a:	9c 91       	ld	r25, X
    123c:	f0 e0       	ldi	r31, 0x00	; 0
    123e:	ee 0f       	add	r30, r30
    1240:	ff 1f       	adc	r31, r31
    1242:	ee 0f       	add	r30, r30
    1244:	ff 1f       	adc	r31, r31
    1246:	ea 53       	subi	r30, 0x3A	; 58
    1248:	fd 4f       	sbci	r31, 0xFD	; 253
    124a:	80 81       	ld	r24, Z
    124c:	82 95       	swap	r24
    124e:	80 7f       	andi	r24, 0xF0	; 240
    1250:	89 2b       	or	r24, r25
    1252:	89 87       	std	Y+9, r24	; 0x09
    1254:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	ee 0f       	add	r30, r30
    125c:	ff 1f       	adc	r31, r31
    125e:	ee 0f       	add	r30, r30
    1260:	ff 1f       	adc	r31, r31
    1262:	ea 53       	subi	r30, 0x3A	; 58
    1264:	fd 4f       	sbci	r31, 0xFD	; 253
    1266:	80 81       	ld	r24, Z
    1268:	91 81       	ldd	r25, Z+1	; 0x01
    126a:	a2 81       	ldd	r26, Z+2	; 0x02
    126c:	b3 81       	ldd	r27, Z+3	; 0x03
    126e:	68 94       	set
    1270:	13 f8       	bld	r1, 3
    1272:	b6 95       	lsr	r27
    1274:	a7 95       	ror	r26
    1276:	97 95       	ror	r25
    1278:	87 95       	ror	r24
    127a:	16 94       	lsr	r1
    127c:	d1 f7       	brne	.-12     	; 0x1272 <ip_CAN+0x86>
    127e:	8a 87       	std	Y+10, r24	; 0x0a
    1280:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1284:	a1 e0       	ldi	r26, 0x01	; 1
    1286:	b1 e0       	ldi	r27, 0x01	; 1
    1288:	f0 e0       	ldi	r31, 0x00	; 0
    128a:	ee 0f       	add	r30, r30
    128c:	ff 1f       	adc	r31, r31
    128e:	ee 0f       	add	r30, r30
    1290:	ff 1f       	adc	r31, r31
    1292:	ea 53       	subi	r30, 0x3A	; 58
    1294:	fd 4f       	sbci	r31, 0xFD	; 253
    1296:	40 81       	ld	r20, Z
    1298:	51 81       	ldd	r21, Z+1	; 0x01
    129a:	62 81       	ldd	r22, Z+2	; 0x02
    129c:	73 81       	ldd	r23, Z+3	; 0x03
    129e:	03 2e       	mov	r0, r19
    12a0:	3c e0       	ldi	r19, 0x0C	; 12
    12a2:	76 95       	lsr	r23
    12a4:	67 95       	ror	r22
    12a6:	57 95       	ror	r21
    12a8:	47 95       	ror	r20
    12aa:	3a 95       	dec	r19
    12ac:	d1 f7       	brne	.-12     	; 0x12a2 <ip_CAN+0xb6>
    12ae:	30 2d       	mov	r19, r0
    12b0:	13 96       	adiw	r26, 0x03	; 3
    12b2:	4c 93       	st	X, r20
    12b4:	13 97       	sbiw	r26, 0x03	; 3
    12b6:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    12ba:	f0 e0       	ldi	r31, 0x00	; 0
    12bc:	ee 0f       	add	r30, r30
    12be:	ff 1f       	adc	r31, r31
    12c0:	ee 0f       	add	r30, r30
    12c2:	ff 1f       	adc	r31, r31
    12c4:	e2 51       	subi	r30, 0x12	; 18
    12c6:	fd 4f       	sbci	r31, 0xFD	; 253
    12c8:	80 81       	ld	r24, Z
    12ca:	14 96       	adiw	r26, 0x04	; 4
    12cc:	8c 93       	st	X, r24
    12ce:	14 97       	sbiw	r26, 0x04	; 4
    12d0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	ee 0f       	add	r30, r30
    12d8:	ff 1f       	adc	r31, r31
    12da:	ee 0f       	add	r30, r30
    12dc:	ff 1f       	adc	r31, r31
    12de:	e2 51       	subi	r30, 0x12	; 18
    12e0:	fd 4f       	sbci	r31, 0xFD	; 253
    12e2:	81 81       	ldd	r24, Z+1	; 0x01
    12e4:	15 96       	adiw	r26, 0x05	; 5
    12e6:	8c 93       	st	X, r24
    12e8:	15 97       	sbiw	r26, 0x05	; 5
    12ea:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    12ee:	f0 e0       	ldi	r31, 0x00	; 0
    12f0:	ee 0f       	add	r30, r30
    12f2:	ff 1f       	adc	r31, r31
    12f4:	ee 0f       	add	r30, r30
    12f6:	ff 1f       	adc	r31, r31
    12f8:	e2 51       	subi	r30, 0x12	; 18
    12fa:	fd 4f       	sbci	r31, 0xFD	; 253
    12fc:	82 81       	ldd	r24, Z+2	; 0x02
    12fe:	16 96       	adiw	r26, 0x06	; 6
    1300:	8c 93       	st	X, r24
    1302:	78 94       	sei
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	08 95       	ret

0000130a <ep_CAN>:
    130a:	cf 93       	push	r28
    130c:	df 93       	push	r29
    130e:	f8 94       	cli
    1310:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1314:	cc e0       	ldi	r28, 0x0C	; 12
    1316:	d1 e0       	ldi	r29, 0x01	; 1
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	ee 0f       	add	r30, r30
    131c:	ff 1f       	adc	r31, r31
    131e:	e1 58       	subi	r30, 0x81	; 129
    1320:	fd 4f       	sbci	r31, 0xFD	; 253
    1322:	80 81       	ld	r24, Z
    1324:	8b 83       	std	Y+3, r24	; 0x03
    1326:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <history>
    132a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    132e:	b0 e0       	ldi	r27, 0x00	; 0
    1330:	aa 0f       	add	r26, r26
    1332:	bb 1f       	adc	r27, r27
    1334:	a1 58       	subi	r26, 0x81	; 129
    1336:	bd 4f       	sbci	r27, 0xFD	; 253
    1338:	11 96       	adiw	r26, 0x01	; 1
    133a:	9c 91       	ld	r25, X
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	e5 59       	subi	r30, 0x95	; 149
    1344:	fd 4f       	sbci	r31, 0xFD	; 253
    1346:	80 81       	ld	r24, Z
    1348:	88 0f       	add	r24, r24
    134a:	88 0f       	add	r24, r24
    134c:	89 2b       	or	r24, r25
    134e:	8c 83       	std	Y+4, r24	; 0x04
    1350:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <history>
    1354:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1358:	b0 e0       	ldi	r27, 0x00	; 0
    135a:	aa 0f       	add	r26, r26
    135c:	bb 1f       	adc	r27, r27
    135e:	a5 59       	subi	r26, 0x95	; 149
    1360:	bd 4f       	sbci	r27, 0xFD	; 253
    1362:	8d 91       	ld	r24, X+
    1364:	9c 91       	ld	r25, X
    1366:	00 24       	eor	r0, r0
    1368:	88 0f       	add	r24, r24
    136a:	99 1f       	adc	r25, r25
    136c:	00 1c       	adc	r0, r0
    136e:	88 0f       	add	r24, r24
    1370:	99 1f       	adc	r25, r25
    1372:	00 1c       	adc	r0, r0
    1374:	89 2f       	mov	r24, r25
    1376:	90 2d       	mov	r25, r0
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	ee 0f       	add	r30, r30
    137c:	ff 1f       	adc	r31, r31
    137e:	ec 5d       	subi	r30, 0xDC	; 220
    1380:	fd 4f       	sbci	r31, 0xFD	; 253
    1382:	90 81       	ld	r25, Z
    1384:	92 95       	swap	r25
    1386:	90 7f       	andi	r25, 0xF0	; 240
    1388:	89 2b       	or	r24, r25
    138a:	8d 83       	std	Y+5, r24	; 0x05
    138c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1390:	f0 e0       	ldi	r31, 0x00	; 0
    1392:	ee 0f       	add	r30, r30
    1394:	ff 1f       	adc	r31, r31
    1396:	ec 5d       	subi	r30, 0xDC	; 220
    1398:	fd 4f       	sbci	r31, 0xFD	; 253
    139a:	80 81       	ld	r24, Z
    139c:	91 81       	ldd	r25, Z+1	; 0x01
    139e:	92 95       	swap	r25
    13a0:	82 95       	swap	r24
    13a2:	8f 70       	andi	r24, 0x0F	; 15
    13a4:	89 27       	eor	r24, r25
    13a6:	9f 70       	andi	r25, 0x0F	; 15
    13a8:	89 27       	eor	r24, r25
    13aa:	8e 83       	std	Y+6, r24	; 0x06
    13ac:	78 94       	sei
    13ae:	df 91       	pop	r29
    13b0:	cf 91       	pop	r28
    13b2:	08 95       	ret

000013b4 <it_CAN>:
    13b4:	cf 93       	push	r28
    13b6:	df 93       	push	r29
    13b8:	f8 94       	cli
    13ba:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    13be:	c1 e0       	ldi	r28, 0x01	; 1
    13c0:	d1 e0       	ldi	r29, 0x01	; 1
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	ee 0f       	add	r30, r30
    13c6:	ff 1f       	adc	r31, r31
    13c8:	ed 56       	subi	r30, 0x6D	; 109
    13ca:	fd 4f       	sbci	r31, 0xFD	; 253
    13cc:	80 81       	ld	r24, Z
    13ce:	82 95       	swap	r24
    13d0:	80 7f       	andi	r24, 0xF0	; 240
    13d2:	8e 83       	std	Y+6, r24	; 0x06
    13d4:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	ee 0f       	add	r30, r30
    13dc:	ff 1f       	adc	r31, r31
    13de:	ed 56       	subi	r30, 0x6D	; 109
    13e0:	fd 4f       	sbci	r31, 0xFD	; 253
    13e2:	80 81       	ld	r24, Z
    13e4:	91 81       	ldd	r25, Z+1	; 0x01
    13e6:	95 95       	asr	r25
    13e8:	87 95       	ror	r24
    13ea:	95 95       	asr	r25
    13ec:	87 95       	ror	r24
    13ee:	95 95       	asr	r25
    13f0:	87 95       	ror	r24
    13f2:	95 95       	asr	r25
    13f4:	87 95       	ror	r24
    13f6:	8f 83       	std	Y+7, r24	; 0x07
    13f8:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	ee 0f       	add	r30, r30
    1400:	ff 1f       	adc	r31, r31
    1402:	ee 54       	subi	r30, 0x4E	; 78
    1404:	fd 4f       	sbci	r31, 0xFD	; 253
    1406:	80 81       	ld	r24, Z
    1408:	88 87       	std	Y+8, r24	; 0x08
    140a:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <history>
    140e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1412:	b0 e0       	ldi	r27, 0x00	; 0
    1414:	aa 0f       	add	r26, r26
    1416:	bb 1f       	adc	r27, r27
    1418:	ae 54       	subi	r26, 0x4E	; 78
    141a:	bd 4f       	sbci	r27, 0xFD	; 253
    141c:	11 96       	adiw	r26, 0x01	; 1
    141e:	2c 91       	ld	r18, X
    1420:	f0 e0       	ldi	r31, 0x00	; 0
    1422:	ee 0f       	add	r30, r30
    1424:	ff 1f       	adc	r31, r31
    1426:	e0 5f       	subi	r30, 0xF0	; 240
    1428:	fd 4f       	sbci	r31, 0xFD	; 253
    142a:	80 81       	ld	r24, Z
    142c:	91 81       	ldd	r25, Z+1	; 0x01
    142e:	82 95       	swap	r24
    1430:	92 95       	swap	r25
    1432:	90 7f       	andi	r25, 0xF0	; 240
    1434:	98 27       	eor	r25, r24
    1436:	80 7f       	andi	r24, 0xF0	; 240
    1438:	98 27       	eor	r25, r24
    143a:	82 2b       	or	r24, r18
    143c:	89 87       	std	Y+9, r24	; 0x09
    143e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1442:	f0 e0       	ldi	r31, 0x00	; 0
    1444:	ee 0f       	add	r30, r30
    1446:	ff 1f       	adc	r31, r31
    1448:	e0 5f       	subi	r30, 0xF0	; 240
    144a:	fd 4f       	sbci	r31, 0xFD	; 253
    144c:	80 81       	ld	r24, Z
    144e:	91 81       	ldd	r25, Z+1	; 0x01
    1450:	95 95       	asr	r25
    1452:	87 95       	ror	r24
    1454:	95 95       	asr	r25
    1456:	87 95       	ror	r24
    1458:	95 95       	asr	r25
    145a:	87 95       	ror	r24
    145c:	95 95       	asr	r25
    145e:	87 95       	ror	r24
    1460:	8a 87       	std	Y+10, r24	; 0x0a
    1462:	78 94       	sei
    1464:	df 91       	pop	r29
    1466:	cf 91       	pop	r28
    1468:	08 95       	ret

0000146a <update_ep>:
    146a:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <adc_Cycle_Done>
    146e:	88 23       	and	r24, r24
    1470:	21 f0       	breq	.+8      	; 0x147a <update_ep+0x10>
    1472:	0e 94 85 09 	call	0x130a	; 0x130a <ep_CAN>
    1476:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <adc_Cycle_Done>
    147a:	08 95       	ret

0000147c <CAN_HANDLE>:
    147c:	ef 92       	push	r14
    147e:	ff 92       	push	r15
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <rx_flag>
    1488:	88 23       	and	r24, r24
    148a:	09 f4       	brne	.+2      	; 0x148e <CAN_HANDLE+0x12>
    148c:	49 c0       	rjmp	.+146    	; 0x1520 <CAN_HANDLE+0xa4>
    148e:	f8 94       	cli
    1490:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <CANRX_buffer>
    1494:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <CANRX_buffer+0x1>
    1498:	8b 3f       	cpi	r24, 0xFB	; 251
    149a:	21 e0       	ldi	r18, 0x01	; 1
    149c:	92 07       	cpc	r25, r18
    149e:	21 f0       	breq	.+8      	; 0x14a8 <CAN_HANDLE+0x2c>
    14a0:	83 30       	cpi	r24, 0x03	; 3
    14a2:	92 40       	sbci	r25, 0x02	; 2
    14a4:	f1 f0       	breq	.+60     	; 0x14e2 <CAN_HANDLE+0x66>
    14a6:	39 c0       	rjmp	.+114    	; 0x151a <CAN_HANDLE+0x9e>
    14a8:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <Request_Response_SIB_Pressure>
    14ac:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <Request_Response_SIB_Pressure+0x1>
    14b0:	00 91 0e 01 	lds	r16, 0x010E	; 0x80010e <Request_Response_SIB_Pressure+0x2>
    14b4:	10 91 0f 01 	lds	r17, 0x010F	; 0x80010f <Request_Response_SIB_Pressure+0x3>
    14b8:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <Request_Response_SIB_Pressure+0x4>
    14bc:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <Request_Response_SIB_Pressure+0x5>
    14c0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <Request_Response_SIB_Pressure+0x6>
    14c4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <Request_Response_SIB_Pressure+0x7>
    14c8:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <Request_Response_SIB_Pressure+0x8>
    14cc:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <Request_Response_SIB_Pressure+0x9>
    14d0:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <Request_Response_SIB_Pressure+0xa>
    14d4:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    14d8:	8c e0       	ldi	r24, 0x0C	; 12
    14da:	91 e0       	ldi	r25, 0x01	; 1
    14dc:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
    14e0:	1c c0       	rjmp	.+56     	; 0x151a <CAN_HANDLE+0x9e>
    14e2:	e0 90 01 01 	lds	r14, 0x0101	; 0x800101 <Request_Response_SIB_Temp>
    14e6:	f0 90 02 01 	lds	r15, 0x0102	; 0x800102 <Request_Response_SIB_Temp+0x1>
    14ea:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <Request_Response_SIB_Temp+0x2>
    14ee:	10 91 04 01 	lds	r17, 0x0104	; 0x800104 <Request_Response_SIB_Temp+0x3>
    14f2:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <Request_Response_SIB_Temp+0x4>
    14f6:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <Request_Response_SIB_Temp+0x5>
    14fa:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <Request_Response_SIB_Temp+0x6>
    14fe:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <Request_Response_SIB_Temp+0x7>
    1502:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <Request_Response_SIB_Temp+0x8>
    1506:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <Request_Response_SIB_Temp+0x9>
    150a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Request_Response_SIB_Temp+0xa>
    150e:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	91 e0       	ldi	r25, 0x01	; 1
    1516:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
    151a:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <rx_flag>
    151e:	78 94       	sei
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	ef 90       	pop	r14
    1528:	08 95       	ret

0000152a <error_TCA>:

void error_TCA(uint8_t type)
{
	switch(type)
    152a:	80 32       	cpi	r24, 0x20	; 32
    152c:	19 f0       	breq	.+6      	; 0x1534 <error_TCA+0xa>
    152e:	80 33       	cpi	r24, 0x30	; 48
    1530:	a1 f0       	breq	.+40     	; 0x155a <error_TCA+0x30>
    1532:	08 95       	ret
	{
		case T_ADD_NACK:
			i2c_errors[history][state] |= (1<<7) | (1<<2);
    1534:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1538:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    153c:	97 e0       	ldi	r25, 0x07	; 7
    153e:	e9 9f       	mul	r30, r25
    1540:	f0 01       	movw	r30, r0
    1542:	11 24       	eor	r1, r1
    1544:	e2 5e       	subi	r30, 0xE2	; 226
    1546:	fc 4f       	sbci	r31, 0xFC	; 252
    1548:	e8 0f       	add	r30, r24
    154a:	f1 1d       	adc	r31, r1
    154c:	80 81       	ld	r24, Z
    154e:	84 68       	ori	r24, 0x84	; 132
    1550:	80 83       	st	Z, r24
			end_state = 1;
    1552:	81 e0       	ldi	r24, 0x01	; 1
    1554:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
			break;
    1558:	08 95       	ret
		case T_NACK:
			i2c_errors[history][state] |= (1<<6) | (1<<2);
    155a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    155e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1562:	97 e0       	ldi	r25, 0x07	; 7
    1564:	e9 9f       	mul	r30, r25
    1566:	f0 01       	movw	r30, r0
    1568:	11 24       	eor	r1, r1
    156a:	e2 5e       	subi	r30, 0xE2	; 226
    156c:	fc 4f       	sbci	r31, 0xFC	; 252
    156e:	e8 0f       	add	r30, r24
    1570:	f1 1d       	adc	r31, r1
    1572:	80 81       	ld	r24, Z
    1574:	84 64       	ori	r24, 0x44	; 68
    1576:	80 83       	st	Z, r24
			end_state = 1;
    1578:	81 e0       	ldi	r24, 0x01	; 1
    157a:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    157e:	08 95       	ret

00001580 <error_MPLW>:
	}
}

void error_MPLW(uint8_t type)
{
	switch(type)
    1580:	80 32       	cpi	r24, 0x20	; 32
    1582:	19 f0       	breq	.+6      	; 0x158a <error_MPLW+0xa>
    1584:	80 33       	cpi	r24, 0x30	; 48
    1586:	a1 f0       	breq	.+40     	; 0x15b0 <error_MPLW+0x30>
    1588:	08 95       	ret
	{
		case T_ADD_NACK:
			i2c_errors[history][state] |= (1<<7) | (1<<3);
    158a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    158e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1592:	97 e0       	ldi	r25, 0x07	; 7
    1594:	e9 9f       	mul	r30, r25
    1596:	f0 01       	movw	r30, r0
    1598:	11 24       	eor	r1, r1
    159a:	e2 5e       	subi	r30, 0xE2	; 226
    159c:	fc 4f       	sbci	r31, 0xFC	; 252
    159e:	e8 0f       	add	r30, r24
    15a0:	f1 1d       	adc	r31, r1
    15a2:	80 81       	ld	r24, Z
    15a4:	88 68       	ori	r24, 0x88	; 136
    15a6:	80 83       	st	Z, r24
			end_state = 1;
    15a8:	81 e0       	ldi	r24, 0x01	; 1
    15aa:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
			break;
    15ae:	08 95       	ret
		case T_NACK:
			i2c_errors[history][state] |= (1<<6) | (1<<3);
    15b0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    15b4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    15b8:	97 e0       	ldi	r25, 0x07	; 7
    15ba:	e9 9f       	mul	r30, r25
    15bc:	f0 01       	movw	r30, r0
    15be:	11 24       	eor	r1, r1
    15c0:	e2 5e       	subi	r30, 0xE2	; 226
    15c2:	fc 4f       	sbci	r31, 0xFC	; 252
    15c4:	e8 0f       	add	r30, r24
    15c6:	f1 1d       	adc	r31, r1
    15c8:	80 81       	ld	r24, Z
    15ca:	88 64       	ori	r24, 0x48	; 72
    15cc:	80 83       	st	Z, r24
			end_state = 1;
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    15d4:	08 95       	ret

000015d6 <error_MPLR>:
	}
}

void error_MPLR(uint8_t type)
{
	switch(type)
    15d6:	88 34       	cpi	r24, 0x48	; 72
    15d8:	19 f0       	breq	.+6      	; 0x15e0 <error_MPLR+0xa>
    15da:	88 35       	cpi	r24, 0x58	; 88
    15dc:	99 f0       	breq	.+38     	; 0x1604 <error_MPLR+0x2e>
    15de:	08 95       	ret
	{
		case R_ADD_NACK:
			i2c_errors[history][state] = (1<<5) | (1<<3);
    15e0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    15e4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    15e8:	97 e0       	ldi	r25, 0x07	; 7
    15ea:	e9 9f       	mul	r30, r25
    15ec:	f0 01       	movw	r30, r0
    15ee:	11 24       	eor	r1, r1
    15f0:	e2 5e       	subi	r30, 0xE2	; 226
    15f2:	fc 4f       	sbci	r31, 0xFC	; 252
    15f4:	e8 0f       	add	r30, r24
    15f6:	f1 1d       	adc	r31, r1
    15f8:	88 e2       	ldi	r24, 0x28	; 40
    15fa:	80 83       	st	Z, r24
			end_state =1;
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
			break;
    1602:	08 95       	ret
		case R_NACK:
			i2c_errors[history][state] = (1<<4) | (1<<3);
    1604:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1608:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    160c:	97 e0       	ldi	r25, 0x07	; 7
    160e:	e9 9f       	mul	r30, r25
    1610:	f0 01       	movw	r30, r0
    1612:	11 24       	eor	r1, r1
    1614:	e2 5e       	subi	r30, 0xE2	; 226
    1616:	fc 4f       	sbci	r31, 0xFC	; 252
    1618:	e8 0f       	add	r30, r24
    161a:	f1 1d       	adc	r31, r1
    161c:	88 e1       	ldi	r24, 0x18	; 24
    161e:	80 83       	st	Z, r24
			end_state = 1;
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    1626:	08 95       	ret

00001628 <error_LM92>:
	}
}

void error_LM92(uint8_t type)
{
	switch(type)
    1628:	88 34       	cpi	r24, 0x48	; 72
    162a:	19 f0       	breq	.+6      	; 0x1632 <error_LM92+0xa>
    162c:	88 35       	cpi	r24, 0x58	; 88
    162e:	a1 f0       	breq	.+40     	; 0x1658 <error_LM92+0x30>
    1630:	08 95       	ret
	{
		case R_ADD_NACK:
			i2c_errors[history][state] |= (1<<5) | (1<<1);
    1632:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1636:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    163a:	97 e0       	ldi	r25, 0x07	; 7
    163c:	e9 9f       	mul	r30, r25
    163e:	f0 01       	movw	r30, r0
    1640:	11 24       	eor	r1, r1
    1642:	e2 5e       	subi	r30, 0xE2	; 226
    1644:	fc 4f       	sbci	r31, 0xFC	; 252
    1646:	e8 0f       	add	r30, r24
    1648:	f1 1d       	adc	r31, r1
    164a:	80 81       	ld	r24, Z
    164c:	82 62       	ori	r24, 0x22	; 34
    164e:	80 83       	st	Z, r24
			end_state = 1;
    1650:	81 e0       	ldi	r24, 0x01	; 1
    1652:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
			break;
    1656:	08 95       	ret
		case R_NACK:
			i2c_errors[history][state] |= (1<<4) | (1<<1);
    1658:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    165c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1660:	97 e0       	ldi	r25, 0x07	; 7
    1662:	e9 9f       	mul	r30, r25
    1664:	f0 01       	movw	r30, r0
    1666:	11 24       	eor	r1, r1
    1668:	e2 5e       	subi	r30, 0xE2	; 226
    166a:	fc 4f       	sbci	r31, 0xFC	; 252
    166c:	e8 0f       	add	r30, r24
    166e:	f1 1d       	adc	r31, r1
    1670:	80 81       	ld	r24, Z
    1672:	82 61       	ori	r24, 0x12	; 18
    1674:	80 83       	st	Z, r24
			end_state = 1;
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    167c:	08 95       	ret

0000167e <i2c_FSM>:
	uint8_t t_address;		//i2c address of device to be written depending on state
	uint8_t readCycle;		//number of data bytes to read [not including address]
	uint8_t writeCycle;		//number of data bytes to write [not including address]
	uint8_t error;
	
	if(TWCR0 & 0b10000000)	//if TWINT high 
    167e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1682:	88 23       	and	r24, r24
    1684:	0c f0       	brlt	.+2      	; 0x1688 <i2c_FSM+0xa>
    1686:	17 c1       	rjmp	.+558    	; 0x18b6 <i2c_FSM+0x238>
	{
		switch(state)
    1688:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    168c:	83 30       	cpi	r24, 0x03	; 3
    168e:	09 f4       	brne	.+2      	; 0x1692 <i2c_FSM+0x14>
    1690:	90 c0       	rjmp	.+288    	; 0x17b2 <i2c_FSM+0x134>
    1692:	30 f4       	brcc	.+12     	; 0x16a0 <i2c_FSM+0x22>
    1694:	81 30       	cpi	r24, 0x01	; 1
    1696:	69 f0       	breq	.+26     	; 0x16b2 <i2c_FSM+0x34>
    1698:	82 30       	cpi	r24, 0x02	; 2
    169a:	09 f4       	brne	.+2      	; 0x169e <i2c_FSM+0x20>
    169c:	4a c0       	rjmp	.+148    	; 0x1732 <i2c_FSM+0xb4>
    169e:	08 95       	ret
    16a0:	85 30       	cpi	r24, 0x05	; 5
    16a2:	09 f4       	brne	.+2      	; 0x16a6 <i2c_FSM+0x28>
    16a4:	dd c0       	rjmp	.+442    	; 0x1860 <i2c_FSM+0x1e2>
    16a6:	08 f4       	brcc	.+2      	; 0x16aa <i2c_FSM+0x2c>
    16a8:	c6 c0       	rjmp	.+396    	; 0x1836 <i2c_FSM+0x1b8>
    16aa:	86 30       	cpi	r24, 0x06	; 6
    16ac:	09 f4       	brne	.+2      	; 0x16b0 <i2c_FSM+0x32>
    16ae:	ed c0       	rjmp	.+474    	; 0x188a <i2c_FSM+0x20c>
    16b0:	08 95       	ret
		{
			case IP1: 
					if(TCA_WRITE)
    16b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    16b6:	88 23       	and	r24, r24
    16b8:	99 f0       	breq	.+38     	; 0x16e0 <i2c_FSM+0x62>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 0
						i2c_temp[0] = 0b00000100; //Channel 2 select: 0b00000110;
    16ba:	84 e0       	ldi	r24, 0x04	; 4
    16bc:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    16c0:	61 e0       	ldi	r22, 0x01	; 1
    16c2:	80 ee       	ldi	r24, 0xE0	; 224
    16c4:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    16c8:	0e 94 95 0a 	call	0x152a	; 0x152a <error_TCA>
						if(write_done==1)
    16cc:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <write_done>
    16d0:	81 30       	cpi	r24, 0x01	; 1
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <i2c_FSM+0x58>
    16d4:	f0 c0       	rjmp	.+480    	; 0x18b6 <i2c_FSM+0x238>
						{
							write_done = 0;
    16d6:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
							init_i2c();
    16da:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    16de:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    16e0:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <MPL_WRITE>
    16e4:	88 23       	and	r24, r24
    16e6:	51 f0       	breq	.+20     	; 0x16fc <i2c_FSM+0x7e>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;							
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    16ee:	61 e0       	ldi	r22, 0x01	; 1
    16f0:	80 ec       	ldi	r24, 0xC0	; 192
    16f2:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    16f6:	0e 94 c0 0a 	call	0x1580	; 0x1580 <error_MPLW>
    16fa:	08 95       	ret
					}
					else if (MPL_READ)
    16fc:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <MPL_READ>
    1700:	88 23       	and	r24, r24
    1702:	09 f4       	brne	.+2      	; 0x1706 <i2c_FSM+0x88>
    1704:	d8 c0       	rjmp	.+432    	; 0x18b6 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001; 
						error = i2c_read(r_address, readCycle);
    1706:	63 e0       	ldi	r22, 0x03	; 3
    1708:	81 ec       	ldi	r24, 0xC1	; 193
    170a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    170e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done == 1)
    1712:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    1716:	81 30       	cpi	r24, 0x01	; 1
    1718:	09 f0       	breq	.+2      	; 0x171c <i2c_FSM+0x9e>
    171a:	cd c0       	rjmp	.+410    	; 0x18b6 <i2c_FSM+0x238>
						{
							read_done = 0;
    171c:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
							//debug_state();
							CLEAR_TWEN;
    1720:	ec eb       	ldi	r30, 0xBC	; 188
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	80 81       	ld	r24, Z
    1726:	8b 7f       	andi	r24, 0xFB	; 251
    1728:	80 83       	st	Z, r24
							end_state = 1;
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    1730:	08 95       	ret
					break;


			//Internal Pressure 2
			case IP2:
					if(TCA_WRITE)
    1732:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    1736:	88 23       	and	r24, r24
    1738:	99 f0       	breq	.+38     	; 0x1760 <i2c_FSM+0xe2>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 1
						i2c_temp[0] = 0b00000101;
    173a:	85 e0       	ldi	r24, 0x05	; 5
    173c:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    1740:	61 e0       	ldi	r22, 0x01	; 1
    1742:	80 ee       	ldi	r24, 0xE0	; 224
    1744:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    1748:	0e 94 95 0a 	call	0x152a	; 0x152a <error_TCA>
						if(write_done==1)
    174c:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <write_done>
    1750:	81 30       	cpi	r24, 0x01	; 1
    1752:	09 f0       	breq	.+2      	; 0x1756 <i2c_FSM+0xd8>
    1754:	b0 c0       	rjmp	.+352    	; 0x18b6 <i2c_FSM+0x238>
						{
							write_done = 0;
    1756:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
							init_i2c();
    175a:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    175e:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    1760:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <MPL_WRITE>
    1764:	88 23       	and	r24, r24
    1766:	51 f0       	breq	.+20     	; 0x177c <i2c_FSM+0xfe>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;
    1768:	81 e0       	ldi	r24, 0x01	; 1
    176a:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    176e:	61 e0       	ldi	r22, 0x01	; 1
    1770:	80 ec       	ldi	r24, 0xC0	; 192
    1772:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    1776:	0e 94 c0 0a 	call	0x1580	; 0x1580 <error_MPLW>
    177a:	08 95       	ret
					}
					else if (MPL_READ)
    177c:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <MPL_READ>
    1780:	88 23       	and	r24, r24
    1782:	09 f4       	brne	.+2      	; 0x1786 <i2c_FSM+0x108>
    1784:	98 c0       	rjmp	.+304    	; 0x18b6 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001;
						error = i2c_read(r_address, readCycle);
    1786:	63 e0       	ldi	r22, 0x03	; 3
    1788:	81 ec       	ldi	r24, 0xC1	; 193
    178a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    178e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done==1)
    1792:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    1796:	81 30       	cpi	r24, 0x01	; 1
    1798:	09 f0       	breq	.+2      	; 0x179c <i2c_FSM+0x11e>
    179a:	8d c0       	rjmp	.+282    	; 0x18b6 <i2c_FSM+0x238>
						{
							read_done = 0;
    179c:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
							//debug_state();
							CLEAR_TWEN;
    17a0:	ec eb       	ldi	r30, 0xBC	; 188
    17a2:	f0 e0       	ldi	r31, 0x00	; 0
    17a4:	80 81       	ld	r24, Z
    17a6:	8b 7f       	andi	r24, 0xFB	; 251
    17a8:	80 83       	st	Z, r24
							end_state = 1;
    17aa:	81 e0       	ldi	r24, 0x01	; 1
    17ac:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    17b0:	08 95       	ret
					break;


			//Internal Pressure 3
			case IP3:
					if(TCA_WRITE)
    17b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    17b6:	88 23       	and	r24, r24
    17b8:	99 f0       	breq	.+38     	; 0x17e0 <i2c_FSM+0x162>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 2
						i2c_temp[0] = 0b00000110;
    17ba:	86 e0       	ldi	r24, 0x06	; 6
    17bc:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    17c0:	61 e0       	ldi	r22, 0x01	; 1
    17c2:	80 ee       	ldi	r24, 0xE0	; 224
    17c4:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    17c8:	0e 94 95 0a 	call	0x152a	; 0x152a <error_TCA>
						if(write_done==1)
    17cc:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <write_done>
    17d0:	81 30       	cpi	r24, 0x01	; 1
    17d2:	09 f0       	breq	.+2      	; 0x17d6 <i2c_FSM+0x158>
    17d4:	70 c0       	rjmp	.+224    	; 0x18b6 <i2c_FSM+0x238>
						{
							write_done = 0;
    17d6:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <write_done>
							init_i2c();
    17da:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    17de:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    17e0:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <MPL_WRITE>
    17e4:	88 23       	and	r24, r24
    17e6:	51 f0       	breq	.+20     	; 0x17fc <i2c_FSM+0x17e>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    17ee:	61 e0       	ldi	r22, 0x01	; 1
    17f0:	80 ec       	ldi	r24, 0xC0	; 192
    17f2:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    17f6:	0e 94 c0 0a 	call	0x1580	; 0x1580 <error_MPLW>
    17fa:	08 95       	ret
					}
					else if (MPL_READ)
    17fc:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <MPL_READ>
    1800:	88 23       	and	r24, r24
    1802:	09 f4       	brne	.+2      	; 0x1806 <i2c_FSM+0x188>
    1804:	58 c0       	rjmp	.+176    	; 0x18b6 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001;
						error = i2c_read(r_address, readCycle);
    1806:	63 e0       	ldi	r22, 0x03	; 3
    1808:	81 ec       	ldi	r24, 0xC1	; 193
    180a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    180e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done ==1)
    1812:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    1816:	81 30       	cpi	r24, 0x01	; 1
    1818:	09 f0       	breq	.+2      	; 0x181c <i2c_FSM+0x19e>
    181a:	4d c0       	rjmp	.+154    	; 0x18b6 <i2c_FSM+0x238>
						{
							read_done =0;
    181c:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
							ip_CAN();
    1820:	0e 94 f6 08 	call	0x11ec	; 0x11ec <ip_CAN>
							//debug_state();
							CLEAR_TWEN;
    1824:	ec eb       	ldi	r30, 0xBC	; 188
    1826:	f0 e0       	ldi	r31, 0x00	; 0
    1828:	80 81       	ld	r24, Z
    182a:	8b 7f       	andi	r24, 0xFB	; 251
    182c:	80 83       	st	Z, r24
							end_state = 1;
    182e:	81 e0       	ldi	r24, 0x01	; 1
    1830:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    1834:	08 95       	ret
			//Temperature 1, U8
			case T1: r_address = 0b10010001;
					t_address = 0b10010000;
					readCycle = 2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    1836:	62 e0       	ldi	r22, 0x02	; 2
    1838:	81 e9       	ldi	r24, 0x91	; 145
    183a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    183e:	0e 94 14 0b 	call	0x1628	; 0x1628 <error_LM92>
					if(read_done ==1)
    1842:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    1846:	81 30       	cpi	r24, 0x01	; 1
    1848:	b1 f5       	brne	.+108    	; 0x18b6 <i2c_FSM+0x238>
					{
						read_done = 0;
    184a:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
						//debug_state();
						CLEAR_TWEN;
    184e:	ec eb       	ldi	r30, 0xBC	; 188
    1850:	f0 e0       	ldi	r31, 0x00	; 0
    1852:	80 81       	ld	r24, Z
    1854:	8b 7f       	andi	r24, 0xFB	; 251
    1856:	80 83       	st	Z, r24
						end_state = 1;
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    185e:	08 95       	ret
			//Temperature 2, U9
			case T2: r_address = 0b10010011;
					//t_address = ;
					readCycle =2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    1860:	62 e0       	ldi	r22, 0x02	; 2
    1862:	83 e9       	ldi	r24, 0x93	; 147
    1864:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    1868:	0e 94 14 0b 	call	0x1628	; 0x1628 <error_LM92>
					if(read_done ==1)
    186c:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    1870:	81 30       	cpi	r24, 0x01	; 1
    1872:	09 f5       	brne	.+66     	; 0x18b6 <i2c_FSM+0x238>
					{
						read_done = 0;
    1874:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
						//debug_state();
						CLEAR_TWEN;
    1878:	ec eb       	ldi	r30, 0xBC	; 188
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	80 81       	ld	r24, Z
    187e:	8b 7f       	andi	r24, 0xFB	; 251
    1880:	80 83       	st	Z, r24
						end_state = 1;
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
    1888:	08 95       	ret
			//Temperature 3, U10
			case T3: r_address = 0b10010101;
					//taddress = ;
					readCycle =2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    188a:	62 e0       	ldi	r22, 0x02	; 2
    188c:	85 e9       	ldi	r24, 0x95	; 149
    188e:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    1892:	0e 94 14 0b 	call	0x1628	; 0x1628 <error_LM92>
					if(read_done == 1)
    1896:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <read_done>
    189a:	81 30       	cpi	r24, 0x01	; 1
    189c:	61 f4       	brne	.+24     	; 0x18b6 <i2c_FSM+0x238>
					{
						read_done =0;
    189e:	10 92 ce 01 	sts	0x01CE, r1	; 0x8001ce <read_done>
						//debug_state();
						CLEAR_TWEN;
    18a2:	ec eb       	ldi	r30, 0xBC	; 188
    18a4:	f0 e0       	ldi	r31, 0x00	; 0
    18a6:	80 81       	ld	r24, Z
    18a8:	8b 7f       	andi	r24, 0xFB	; 251
    18aa:	80 83       	st	Z, r24
						end_state = 1;
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>
						it_CAN();
    18b2:	0e 94 da 09 	call	0x13b4	; 0x13b4 <it_CAN>
    18b6:	08 95       	ret

000018b8 <int_p1>:
	//SCL freq = 400k
}

void int_p1(void)
{
		if(state_ready && (state == IP1))
    18b8:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    18bc:	88 23       	and	r24, r24
    18be:	81 f0       	breq	.+32     	; 0x18e0 <int_p1+0x28>
    18c0:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    18c4:	81 30       	cpi	r24, 0x01	; 1
    18c6:	61 f4       	brne	.+24     	; 0x18e0 <int_p1+0x28>
		{
			state_ready = 0;
    18c8:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == IP1)
    18cc:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    18d0:	81 30       	cpi	r24, 0x01	; 1
    18d2:	31 f4       	brne	.+12     	; 0x18e0 <int_p1+0x28>
			{
				i2c_FSM();
    18d4:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_p1(void)
{
		if(state_ready && (state == IP1))
		{
			state_ready = 0;
			while (state == IP1)
    18d8:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    18dc:	81 30       	cpi	r24, 0x01	; 1
    18de:	d1 f3       	breq	.-12     	; 0x18d4 <int_p1+0x1c>
    18e0:	08 95       	ret

000018e2 <int_p2>:
		}	
}

void int_p2(void)
{
		if(state_ready && state == IP2)
    18e2:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    18e6:	88 23       	and	r24, r24
    18e8:	81 f0       	breq	.+32     	; 0x190a <int_p2+0x28>
    18ea:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    18ee:	82 30       	cpi	r24, 0x02	; 2
    18f0:	61 f4       	brne	.+24     	; 0x190a <int_p2+0x28>
		{
			state_ready = 0;
    18f2:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == IP2)
    18f6:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    18fa:	82 30       	cpi	r24, 0x02	; 2
    18fc:	31 f4       	brne	.+12     	; 0x190a <int_p2+0x28>
			{
				i2c_FSM();
    18fe:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_p2(void)
{
		if(state_ready && state == IP2)
		{
			state_ready = 0;
			while (state == IP2)
    1902:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1906:	82 30       	cpi	r24, 0x02	; 2
    1908:	d1 f3       	breq	.-12     	; 0x18fe <int_p2+0x1c>
    190a:	08 95       	ret

0000190c <int_p3>:
		}
}

void int_p3(void)
{
		if(state_ready && state == IP3)
    190c:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    1910:	88 23       	and	r24, r24
    1912:	81 f0       	breq	.+32     	; 0x1934 <int_p3+0x28>
    1914:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1918:	83 30       	cpi	r24, 0x03	; 3
    191a:	61 f4       	brne	.+24     	; 0x1934 <int_p3+0x28>
		{
			state_ready = 0;
    191c:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == IP3)
    1920:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1924:	83 30       	cpi	r24, 0x03	; 3
    1926:	31 f4       	brne	.+12     	; 0x1934 <int_p3+0x28>
			{
				i2c_FSM();
    1928:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_p3(void)
{
		if(state_ready && state == IP3)
		{
			state_ready = 0;
			while (state == IP3)
    192c:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1930:	83 30       	cpi	r24, 0x03	; 3
    1932:	d1 f3       	breq	.-12     	; 0x1928 <int_p3+0x1c>
    1934:	08 95       	ret

00001936 <int_t1>:
		}
}

void int_t1(void)
{
		if(state_ready && state == T1)
    1936:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    193a:	88 23       	and	r24, r24
    193c:	81 f0       	breq	.+32     	; 0x195e <int_t1+0x28>
    193e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1942:	84 30       	cpi	r24, 0x04	; 4
    1944:	61 f4       	brne	.+24     	; 0x195e <int_t1+0x28>
		{
			state_ready = 0;
    1946:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == T1)
    194a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    194e:	84 30       	cpi	r24, 0x04	; 4
    1950:	31 f4       	brne	.+12     	; 0x195e <int_t1+0x28>
			{
				i2c_FSM();
    1952:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_t1(void)
{
		if(state_ready && state == T1)
		{
			state_ready = 0;
			while (state == T1)
    1956:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    195a:	84 30       	cpi	r24, 0x04	; 4
    195c:	d1 f3       	breq	.-12     	; 0x1952 <int_t1+0x1c>
    195e:	08 95       	ret

00001960 <int_t2>:
		}
}

void int_t2(void)
{
		if(state_ready && state == T2)
    1960:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    1964:	88 23       	and	r24, r24
    1966:	81 f0       	breq	.+32     	; 0x1988 <int_t2+0x28>
    1968:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    196c:	85 30       	cpi	r24, 0x05	; 5
    196e:	61 f4       	brne	.+24     	; 0x1988 <int_t2+0x28>
		{
			state_ready = 0;
    1970:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == T2)
    1974:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1978:	85 30       	cpi	r24, 0x05	; 5
    197a:	31 f4       	brne	.+12     	; 0x1988 <int_t2+0x28>
			{
				i2c_FSM();
    197c:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_t2(void)
{
		if(state_ready && state == T2)
		{
			state_ready = 0;
			while (state == T2)
    1980:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1984:	85 30       	cpi	r24, 0x05	; 5
    1986:	d1 f3       	breq	.-12     	; 0x197c <int_t2+0x1c>
    1988:	08 95       	ret

0000198a <int_t3>:
		}
}

void int_t3(void)
{
		if(state_ready && state == T3)
    198a:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <state_ready>
    198e:	88 23       	and	r24, r24
    1990:	81 f0       	breq	.+32     	; 0x19b2 <int_t3+0x28>
    1992:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    1996:	86 30       	cpi	r24, 0x06	; 6
    1998:	61 f4       	brne	.+24     	; 0x19b2 <int_t3+0x28>
		{
			state_ready = 0;
    199a:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <state_ready>
			while (state == T3)
    199e:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    19a2:	86 30       	cpi	r24, 0x06	; 6
    19a4:	31 f4       	brne	.+12     	; 0x19b2 <int_t3+0x28>
			{
				i2c_FSM();
    19a6:	0e 94 3f 0b 	call	0x167e	; 0x167e <i2c_FSM>
void int_t3(void)
{
		if(state_ready && state == T3)
		{
			state_ready = 0;
			while (state == T3)
    19aa:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    19ae:	86 30       	cpi	r24, 0x06	; 6
    19b0:	d1 f3       	breq	.-12     	; 0x19a6 <int_t3+0x1c>
    19b2:	08 95       	ret

000019b4 <debug_state>:
	}
}

void debug_state(void)
{
	switch(state)
    19b4:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <state>
    19b8:	83 30       	cpi	r24, 0x03	; 3
    19ba:	09 f4       	brne	.+2      	; 0x19be <debug_state+0xa>
    19bc:	5f c0       	rjmp	.+190    	; 0x1a7c <debug_state+0xc8>
    19be:	28 f4       	brcc	.+10     	; 0x19ca <debug_state+0x16>
    19c0:	81 30       	cpi	r24, 0x01	; 1
    19c2:	61 f0       	breq	.+24     	; 0x19dc <debug_state+0x28>
    19c4:	82 30       	cpi	r24, 0x02	; 2
    19c6:	91 f1       	breq	.+100    	; 0x1a2c <debug_state+0x78>
    19c8:	08 95       	ret
    19ca:	85 30       	cpi	r24, 0x05	; 5
    19cc:	09 f4       	brne	.+2      	; 0x19d0 <debug_state+0x1c>
    19ce:	9e c0       	rjmp	.+316    	; 0x1b0c <debug_state+0x158>
    19d0:	08 f4       	brcc	.+2      	; 0x19d4 <debug_state+0x20>
    19d2:	7c c0       	rjmp	.+248    	; 0x1acc <debug_state+0x118>
    19d4:	86 30       	cpi	r24, 0x06	; 6
    19d6:	09 f4       	brne	.+2      	; 0x19da <debug_state+0x26>
    19d8:	b9 c0       	rjmp	.+370    	; 0x1b4c <debug_state+0x198>
    19da:	08 95       	ret
	{
		case IP1:
			sprintf(string_out, "IP 1: %lu\n\r", ip1_raw[history]);
    19dc:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    19e0:	f0 e0       	ldi	r31, 0x00	; 0
    19e2:	ee 0f       	add	r30, r30
    19e4:	ff 1f       	adc	r31, r31
    19e6:	ee 0f       	add	r30, r30
    19e8:	ff 1f       	adc	r31, r31
    19ea:	ed 5b       	subi	r30, 0xBD	; 189
    19ec:	fd 4f       	sbci	r31, 0xFD	; 253
    19ee:	83 81       	ldd	r24, Z+3	; 0x03
    19f0:	8f 93       	push	r24
    19f2:	82 81       	ldd	r24, Z+2	; 0x02
    19f4:	8f 93       	push	r24
    19f6:	81 81       	ldd	r24, Z+1	; 0x01
    19f8:	8f 93       	push	r24
    19fa:	80 81       	ld	r24, Z
    19fc:	8f 93       	push	r24
    19fe:	85 e6       	ldi	r24, 0x65	; 101
    1a00:	91 e0       	ldi	r25, 0x01	; 1
    1a02:	9f 93       	push	r25
    1a04:	8f 93       	push	r24
    1a06:	8e ed       	ldi	r24, 0xDE	; 222
    1a08:	91 e0       	ldi	r25, 0x01	; 1
    1a0a:	9f 93       	push	r25
    1a0c:	8f 93       	push	r24
    1a0e:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1a12:	8e ed       	ldi	r24, 0xDE	; 222
    1a14:	91 e0       	ldi	r25, 0x01	; 1
    1a16:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1a1a:	8d b7       	in	r24, 0x3d	; 61
    1a1c:	9e b7       	in	r25, 0x3e	; 62
    1a1e:	08 96       	adiw	r24, 0x08	; 8
    1a20:	0f b6       	in	r0, 0x3f	; 63
    1a22:	f8 94       	cli
    1a24:	9e bf       	out	0x3e, r25	; 62
    1a26:	0f be       	out	0x3f, r0	; 63
    1a28:	8d bf       	out	0x3d, r24	; 61
    1a2a:	08 95       	ret
		case IP2:
			sprintf(string_out, "IP 2: %lu\n\r", ip2_raw[history]);
    1a2c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1a30:	f0 e0       	ldi	r31, 0x00	; 0
    1a32:	ee 0f       	add	r30, r30
    1a34:	ff 1f       	adc	r31, r31
    1a36:	ee 0f       	add	r30, r30
    1a38:	ff 1f       	adc	r31, r31
    1a3a:	ea 53       	subi	r30, 0x3A	; 58
    1a3c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a3e:	83 81       	ldd	r24, Z+3	; 0x03
    1a40:	8f 93       	push	r24
    1a42:	82 81       	ldd	r24, Z+2	; 0x02
    1a44:	8f 93       	push	r24
    1a46:	81 81       	ldd	r24, Z+1	; 0x01
    1a48:	8f 93       	push	r24
    1a4a:	80 81       	ld	r24, Z
    1a4c:	8f 93       	push	r24
    1a4e:	81 e7       	ldi	r24, 0x71	; 113
    1a50:	91 e0       	ldi	r25, 0x01	; 1
    1a52:	9f 93       	push	r25
    1a54:	8f 93       	push	r24
    1a56:	8e ed       	ldi	r24, 0xDE	; 222
    1a58:	91 e0       	ldi	r25, 0x01	; 1
    1a5a:	9f 93       	push	r25
    1a5c:	8f 93       	push	r24
    1a5e:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1a62:	8e ed       	ldi	r24, 0xDE	; 222
    1a64:	91 e0       	ldi	r25, 0x01	; 1
    1a66:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1a6a:	8d b7       	in	r24, 0x3d	; 61
    1a6c:	9e b7       	in	r25, 0x3e	; 62
    1a6e:	08 96       	adiw	r24, 0x08	; 8
    1a70:	0f b6       	in	r0, 0x3f	; 63
    1a72:	f8 94       	cli
    1a74:	9e bf       	out	0x3e, r25	; 62
    1a76:	0f be       	out	0x3f, r0	; 63
    1a78:	8d bf       	out	0x3d, r24	; 61
    1a7a:	08 95       	ret
		case IP3:
			sprintf(string_out, "IP 3: %lu\n\r", ip3_raw[history]);
    1a7c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1a80:	f0 e0       	ldi	r31, 0x00	; 0
    1a82:	ee 0f       	add	r30, r30
    1a84:	ff 1f       	adc	r31, r31
    1a86:	ee 0f       	add	r30, r30
    1a88:	ff 1f       	adc	r31, r31
    1a8a:	e2 51       	subi	r30, 0x12	; 18
    1a8c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a8e:	83 81       	ldd	r24, Z+3	; 0x03
    1a90:	8f 93       	push	r24
    1a92:	82 81       	ldd	r24, Z+2	; 0x02
    1a94:	8f 93       	push	r24
    1a96:	81 81       	ldd	r24, Z+1	; 0x01
    1a98:	8f 93       	push	r24
    1a9a:	80 81       	ld	r24, Z
    1a9c:	8f 93       	push	r24
    1a9e:	8d e7       	ldi	r24, 0x7D	; 125
    1aa0:	91 e0       	ldi	r25, 0x01	; 1
    1aa2:	9f 93       	push	r25
    1aa4:	8f 93       	push	r24
    1aa6:	8e ed       	ldi	r24, 0xDE	; 222
    1aa8:	91 e0       	ldi	r25, 0x01	; 1
    1aaa:	9f 93       	push	r25
    1aac:	8f 93       	push	r24
    1aae:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1ab2:	8e ed       	ldi	r24, 0xDE	; 222
    1ab4:	91 e0       	ldi	r25, 0x01	; 1
    1ab6:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1aba:	8d b7       	in	r24, 0x3d	; 61
    1abc:	9e b7       	in	r25, 0x3e	; 62
    1abe:	08 96       	adiw	r24, 0x08	; 8
    1ac0:	0f b6       	in	r0, 0x3f	; 63
    1ac2:	f8 94       	cli
    1ac4:	9e bf       	out	0x3e, r25	; 62
    1ac6:	0f be       	out	0x3f, r0	; 63
    1ac8:	8d bf       	out	0x3d, r24	; 61
    1aca:	08 95       	ret
		case T1:
			sprintf(string_out, "T 1: %u\n\r", t1_raw[history]);
    1acc:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1ad0:	f0 e0       	ldi	r31, 0x00	; 0
    1ad2:	ee 0f       	add	r30, r30
    1ad4:	ff 1f       	adc	r31, r31
    1ad6:	ed 56       	subi	r30, 0x6D	; 109
    1ad8:	fd 4f       	sbci	r31, 0xFD	; 253
    1ada:	81 81       	ldd	r24, Z+1	; 0x01
    1adc:	8f 93       	push	r24
    1ade:	80 81       	ld	r24, Z
    1ae0:	8f 93       	push	r24
    1ae2:	89 e8       	ldi	r24, 0x89	; 137
    1ae4:	91 e0       	ldi	r25, 0x01	; 1
    1ae6:	9f 93       	push	r25
    1ae8:	8f 93       	push	r24
    1aea:	8e ed       	ldi	r24, 0xDE	; 222
    1aec:	91 e0       	ldi	r25, 0x01	; 1
    1aee:	9f 93       	push	r25
    1af0:	8f 93       	push	r24
    1af2:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1af6:	8e ed       	ldi	r24, 0xDE	; 222
    1af8:	91 e0       	ldi	r25, 0x01	; 1
    1afa:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1afe:	0f 90       	pop	r0
    1b00:	0f 90       	pop	r0
    1b02:	0f 90       	pop	r0
    1b04:	0f 90       	pop	r0
    1b06:	0f 90       	pop	r0
    1b08:	0f 90       	pop	r0
    1b0a:	08 95       	ret
		case T2:
			sprintf(string_out, "T 2: %u\n\r", t2_raw[history]);
    1b0c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1b10:	f0 e0       	ldi	r31, 0x00	; 0
    1b12:	ee 0f       	add	r30, r30
    1b14:	ff 1f       	adc	r31, r31
    1b16:	ee 54       	subi	r30, 0x4E	; 78
    1b18:	fd 4f       	sbci	r31, 0xFD	; 253
    1b1a:	81 81       	ldd	r24, Z+1	; 0x01
    1b1c:	8f 93       	push	r24
    1b1e:	80 81       	ld	r24, Z
    1b20:	8f 93       	push	r24
    1b22:	83 e9       	ldi	r24, 0x93	; 147
    1b24:	91 e0       	ldi	r25, 0x01	; 1
    1b26:	9f 93       	push	r25
    1b28:	8f 93       	push	r24
    1b2a:	8e ed       	ldi	r24, 0xDE	; 222
    1b2c:	91 e0       	ldi	r25, 0x01	; 1
    1b2e:	9f 93       	push	r25
    1b30:	8f 93       	push	r24
    1b32:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1b36:	8e ed       	ldi	r24, 0xDE	; 222
    1b38:	91 e0       	ldi	r25, 0x01	; 1
    1b3a:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1b3e:	0f 90       	pop	r0
    1b40:	0f 90       	pop	r0
    1b42:	0f 90       	pop	r0
    1b44:	0f 90       	pop	r0
    1b46:	0f 90       	pop	r0
    1b48:	0f 90       	pop	r0
    1b4a:	08 95       	ret
		case T3:
			sprintf(string_out, "T 3: %u\n\r", t3_raw[history]);
    1b4c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <history>
    1b50:	f0 e0       	ldi	r31, 0x00	; 0
    1b52:	ee 0f       	add	r30, r30
    1b54:	ff 1f       	adc	r31, r31
    1b56:	e0 5f       	subi	r30, 0xF0	; 240
    1b58:	fd 4f       	sbci	r31, 0xFD	; 253
    1b5a:	81 81       	ldd	r24, Z+1	; 0x01
    1b5c:	8f 93       	push	r24
    1b5e:	80 81       	ld	r24, Z
    1b60:	8f 93       	push	r24
    1b62:	8d e9       	ldi	r24, 0x9D	; 157
    1b64:	91 e0       	ldi	r25, 0x01	; 1
    1b66:	9f 93       	push	r25
    1b68:	8f 93       	push	r24
    1b6a:	8e ed       	ldi	r24, 0xDE	; 222
    1b6c:	91 e0       	ldi	r25, 0x01	; 1
    1b6e:	9f 93       	push	r25
    1b70:	8f 93       	push	r24
    1b72:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <sprintf>
			sendString(string_out);
    1b76:	8e ed       	ldi	r24, 0xDE	; 222
    1b78:	91 e0       	ldi	r25, 0x01	; 1
    1b7a:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
			break;
    1b7e:	0f 90       	pop	r0
    1b80:	0f 90       	pop	r0
    1b82:	0f 90       	pop	r0
    1b84:	0f 90       	pop	r0
    1b86:	0f 90       	pop	r0
    1b88:	0f 90       	pop	r0
    1b8a:	08 95       	ret

00001b8c <main>:
}

//STATE is incremented when the ~17ms timer triggers, iff state_end = 1
int main(void)
{
	sys_config();
    1b8c:	0e 94 79 00 	call	0xf2	; 0xf2 <sys_config>
	
	init_ADC_timer();
    1b90:	0e 94 69 03 	call	0x6d2	; 0x6d2 <init_ADC_timer>
	init_ADC();
    1b94:	0e 94 60 03 	call	0x6c0	; 0x6c0 <init_ADC>
	initUART();
    1b98:	0e 94 96 00 	call	0x12c	; 0x12c <initUART>
	INTERRUPT_init();
    1b9c:	0e 94 b9 00 	call	0x172	; 0x172 <INTERRUPT_init>
	USART_Init(103);	//103 sets baud rate at 9600
    1ba0:	87 e6       	ldi	r24, 0x67	; 103
    1ba2:	90 e0       	ldi	r25, 0x00	; 0
    1ba4:	0e 94 c3 02 	call	0x586	; 0x586 <USART_Init>
	SPI_masterInit();
    1ba8:	0e 94 c1 00 	call	0x182	; 0x182 <SPI_masterInit>
	init_int_press();	//blocking code - i2c transmit only, disables TWI
    1bac:	0e 94 da 07 	call	0xfb4	; 0xfb4 <init_int_press>

	init_state_timer(); //will increment state iff i2c disabled
    1bb0:	0e 94 4a 04 	call	0x894	; 0x894 <init_state_timer>
	state_ready = 1;
    1bb4:	81 e0       	ldi	r24, 0x01	; 1
    1bb6:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <state_ready>
	end_state = 1;
    1bba:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <end_state>

	//MCP2515 initialization
	if(mcp2515_init(CANSPEED_500))
    1bbe:	0e 94 1b 01 	call	0x236	; 0x236 <mcp2515_init>
    1bc2:	88 23       	and	r24, r24
    1bc4:	29 f0       	breq	.+10     	; 0x1bd0 <main+0x44>
	{//[TODO]these need to be updated to RAW serial messages
		USART_Transmit_TX("Can Init SUCCESS!");
    1bc6:	87 ea       	ldi	r24, 0xA7	; 167
    1bc8:	91 e0       	ldi	r25, 0x01	; 1
    1bca:	0e 94 da 02 	call	0x5b4	; 0x5b4 <USART_Transmit_TX>
    1bce:	04 c0       	rjmp	.+8      	; 0x1bd8 <main+0x4c>
	}else
	{
		USART_Transmit_TX("Can Init FAILURE!");
    1bd0:	89 eb       	ldi	r24, 0xB9	; 185
    1bd2:	91 e0       	ldi	r25, 0x01	; 1
    1bd4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <USART_Transmit_TX>
	}
	//_delay_ms(100);

	while (1) 
    {
		int_p1();
    1bd8:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <int_p1>
		debug_state();
    1bdc:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>
		int_p2();
    1be0:	0e 94 71 0c 	call	0x18e2	; 0x18e2 <int_p2>
		debug_state();
    1be4:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>
		update_ep();
    1be8:	0e 94 35 0a 	call	0x146a	; 0x146a <update_ep>

		int_p3();
    1bec:	0e 94 86 0c 	call	0x190c	; 0x190c <int_p3>
		debug_state();
    1bf0:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>
		int_t1();
    1bf4:	0e 94 9b 0c 	call	0x1936	; 0x1936 <int_t1>
		debug_state();
    1bf8:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>

		update_ep();
    1bfc:	0e 94 35 0a 	call	0x146a	; 0x146a <update_ep>

		int_t2();
    1c00:	0e 94 b0 0c 	call	0x1960	; 0x1960 <int_t2>
		debug_state();
    1c04:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>
		int_t3();
    1c08:	0e 94 c5 0c 	call	0x198a	; 0x198a <int_t3>
		debug_state();
    1c0c:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <debug_state>
		update_ep();
    1c10:	0e 94 35 0a 	call	0x146a	; 0x146a <update_ep>
		CAN_HANDLE();
    1c14:	0e 94 3e 0a 	call	0x147c	; 0x147c <CAN_HANDLE>
    1c18:	df cf       	rjmp	.-66     	; 0x1bd8 <main+0x4c>

00001c1a <sprintf>:
    1c1a:	ae e0       	ldi	r26, 0x0E	; 14
    1c1c:	b0 e0       	ldi	r27, 0x00	; 0
    1c1e:	e3 e1       	ldi	r30, 0x13	; 19
    1c20:	fe e0       	ldi	r31, 0x0E	; 14
    1c22:	0c 94 ce 10 	jmp	0x219c	; 0x219c <__prologue_saves__+0x1c>
    1c26:	0d 89       	ldd	r16, Y+21	; 0x15
    1c28:	1e 89       	ldd	r17, Y+22	; 0x16
    1c2a:	86 e0       	ldi	r24, 0x06	; 6
    1c2c:	8c 83       	std	Y+4, r24	; 0x04
    1c2e:	1a 83       	std	Y+2, r17	; 0x02
    1c30:	09 83       	std	Y+1, r16	; 0x01
    1c32:	8f ef       	ldi	r24, 0xFF	; 255
    1c34:	9f e7       	ldi	r25, 0x7F	; 127
    1c36:	9e 83       	std	Y+6, r25	; 0x06
    1c38:	8d 83       	std	Y+5, r24	; 0x05
    1c3a:	ae 01       	movw	r20, r28
    1c3c:	47 5e       	subi	r20, 0xE7	; 231
    1c3e:	5f 4f       	sbci	r21, 0xFF	; 255
    1c40:	6f 89       	ldd	r22, Y+23	; 0x17
    1c42:	78 8d       	ldd	r23, Y+24	; 0x18
    1c44:	ce 01       	movw	r24, r28
    1c46:	01 96       	adiw	r24, 0x01	; 1
    1c48:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <vfprintf>
    1c4c:	ef 81       	ldd	r30, Y+7	; 0x07
    1c4e:	f8 85       	ldd	r31, Y+8	; 0x08
    1c50:	e0 0f       	add	r30, r16
    1c52:	f1 1f       	adc	r31, r17
    1c54:	10 82       	st	Z, r1
    1c56:	2e 96       	adiw	r28, 0x0e	; 14
    1c58:	e4 e0       	ldi	r30, 0x04	; 4
    1c5a:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__epilogue_restores__+0x1c>

00001c5e <vfprintf>:
    1c5e:	ab e0       	ldi	r26, 0x0B	; 11
    1c60:	b0 e0       	ldi	r27, 0x00	; 0
    1c62:	e5 e3       	ldi	r30, 0x35	; 53
    1c64:	fe e0       	ldi	r31, 0x0E	; 14
    1c66:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__prologue_saves__>
    1c6a:	6c 01       	movw	r12, r24
    1c6c:	7b 01       	movw	r14, r22
    1c6e:	8a 01       	movw	r16, r20
    1c70:	fc 01       	movw	r30, r24
    1c72:	17 82       	std	Z+7, r1	; 0x07
    1c74:	16 82       	std	Z+6, r1	; 0x06
    1c76:	83 81       	ldd	r24, Z+3	; 0x03
    1c78:	81 ff       	sbrs	r24, 1
    1c7a:	cc c1       	rjmp	.+920    	; 0x2014 <vfprintf+0x3b6>
    1c7c:	ce 01       	movw	r24, r28
    1c7e:	01 96       	adiw	r24, 0x01	; 1
    1c80:	3c 01       	movw	r6, r24
    1c82:	f6 01       	movw	r30, r12
    1c84:	93 81       	ldd	r25, Z+3	; 0x03
    1c86:	f7 01       	movw	r30, r14
    1c88:	93 fd       	sbrc	r25, 3
    1c8a:	85 91       	lpm	r24, Z+
    1c8c:	93 ff       	sbrs	r25, 3
    1c8e:	81 91       	ld	r24, Z+
    1c90:	7f 01       	movw	r14, r30
    1c92:	88 23       	and	r24, r24
    1c94:	09 f4       	brne	.+2      	; 0x1c98 <vfprintf+0x3a>
    1c96:	ba c1       	rjmp	.+884    	; 0x200c <vfprintf+0x3ae>
    1c98:	85 32       	cpi	r24, 0x25	; 37
    1c9a:	39 f4       	brne	.+14     	; 0x1caa <vfprintf+0x4c>
    1c9c:	93 fd       	sbrc	r25, 3
    1c9e:	85 91       	lpm	r24, Z+
    1ca0:	93 ff       	sbrs	r25, 3
    1ca2:	81 91       	ld	r24, Z+
    1ca4:	7f 01       	movw	r14, r30
    1ca6:	85 32       	cpi	r24, 0x25	; 37
    1ca8:	29 f4       	brne	.+10     	; 0x1cb4 <vfprintf+0x56>
    1caa:	b6 01       	movw	r22, r12
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1cb2:	e7 cf       	rjmp	.-50     	; 0x1c82 <vfprintf+0x24>
    1cb4:	91 2c       	mov	r9, r1
    1cb6:	21 2c       	mov	r2, r1
    1cb8:	31 2c       	mov	r3, r1
    1cba:	ff e1       	ldi	r31, 0x1F	; 31
    1cbc:	f3 15       	cp	r31, r3
    1cbe:	d8 f0       	brcs	.+54     	; 0x1cf6 <vfprintf+0x98>
    1cc0:	8b 32       	cpi	r24, 0x2B	; 43
    1cc2:	79 f0       	breq	.+30     	; 0x1ce2 <vfprintf+0x84>
    1cc4:	38 f4       	brcc	.+14     	; 0x1cd4 <vfprintf+0x76>
    1cc6:	80 32       	cpi	r24, 0x20	; 32
    1cc8:	79 f0       	breq	.+30     	; 0x1ce8 <vfprintf+0x8a>
    1cca:	83 32       	cpi	r24, 0x23	; 35
    1ccc:	a1 f4       	brne	.+40     	; 0x1cf6 <vfprintf+0x98>
    1cce:	23 2d       	mov	r18, r3
    1cd0:	20 61       	ori	r18, 0x10	; 16
    1cd2:	1d c0       	rjmp	.+58     	; 0x1d0e <vfprintf+0xb0>
    1cd4:	8d 32       	cpi	r24, 0x2D	; 45
    1cd6:	61 f0       	breq	.+24     	; 0x1cf0 <vfprintf+0x92>
    1cd8:	80 33       	cpi	r24, 0x30	; 48
    1cda:	69 f4       	brne	.+26     	; 0x1cf6 <vfprintf+0x98>
    1cdc:	23 2d       	mov	r18, r3
    1cde:	21 60       	ori	r18, 0x01	; 1
    1ce0:	16 c0       	rjmp	.+44     	; 0x1d0e <vfprintf+0xb0>
    1ce2:	83 2d       	mov	r24, r3
    1ce4:	82 60       	ori	r24, 0x02	; 2
    1ce6:	38 2e       	mov	r3, r24
    1ce8:	e3 2d       	mov	r30, r3
    1cea:	e4 60       	ori	r30, 0x04	; 4
    1cec:	3e 2e       	mov	r3, r30
    1cee:	2a c0       	rjmp	.+84     	; 0x1d44 <vfprintf+0xe6>
    1cf0:	f3 2d       	mov	r31, r3
    1cf2:	f8 60       	ori	r31, 0x08	; 8
    1cf4:	1d c0       	rjmp	.+58     	; 0x1d30 <vfprintf+0xd2>
    1cf6:	37 fc       	sbrc	r3, 7
    1cf8:	2d c0       	rjmp	.+90     	; 0x1d54 <vfprintf+0xf6>
    1cfa:	20 ed       	ldi	r18, 0xD0	; 208
    1cfc:	28 0f       	add	r18, r24
    1cfe:	2a 30       	cpi	r18, 0x0A	; 10
    1d00:	40 f0       	brcs	.+16     	; 0x1d12 <vfprintf+0xb4>
    1d02:	8e 32       	cpi	r24, 0x2E	; 46
    1d04:	b9 f4       	brne	.+46     	; 0x1d34 <vfprintf+0xd6>
    1d06:	36 fc       	sbrc	r3, 6
    1d08:	81 c1       	rjmp	.+770    	; 0x200c <vfprintf+0x3ae>
    1d0a:	23 2d       	mov	r18, r3
    1d0c:	20 64       	ori	r18, 0x40	; 64
    1d0e:	32 2e       	mov	r3, r18
    1d10:	19 c0       	rjmp	.+50     	; 0x1d44 <vfprintf+0xe6>
    1d12:	36 fe       	sbrs	r3, 6
    1d14:	06 c0       	rjmp	.+12     	; 0x1d22 <vfprintf+0xc4>
    1d16:	8a e0       	ldi	r24, 0x0A	; 10
    1d18:	98 9e       	mul	r9, r24
    1d1a:	20 0d       	add	r18, r0
    1d1c:	11 24       	eor	r1, r1
    1d1e:	92 2e       	mov	r9, r18
    1d20:	11 c0       	rjmp	.+34     	; 0x1d44 <vfprintf+0xe6>
    1d22:	ea e0       	ldi	r30, 0x0A	; 10
    1d24:	2e 9e       	mul	r2, r30
    1d26:	20 0d       	add	r18, r0
    1d28:	11 24       	eor	r1, r1
    1d2a:	22 2e       	mov	r2, r18
    1d2c:	f3 2d       	mov	r31, r3
    1d2e:	f0 62       	ori	r31, 0x20	; 32
    1d30:	3f 2e       	mov	r3, r31
    1d32:	08 c0       	rjmp	.+16     	; 0x1d44 <vfprintf+0xe6>
    1d34:	8c 36       	cpi	r24, 0x6C	; 108
    1d36:	21 f4       	brne	.+8      	; 0x1d40 <vfprintf+0xe2>
    1d38:	83 2d       	mov	r24, r3
    1d3a:	80 68       	ori	r24, 0x80	; 128
    1d3c:	38 2e       	mov	r3, r24
    1d3e:	02 c0       	rjmp	.+4      	; 0x1d44 <vfprintf+0xe6>
    1d40:	88 36       	cpi	r24, 0x68	; 104
    1d42:	41 f4       	brne	.+16     	; 0x1d54 <vfprintf+0xf6>
    1d44:	f7 01       	movw	r30, r14
    1d46:	93 fd       	sbrc	r25, 3
    1d48:	85 91       	lpm	r24, Z+
    1d4a:	93 ff       	sbrs	r25, 3
    1d4c:	81 91       	ld	r24, Z+
    1d4e:	7f 01       	movw	r14, r30
    1d50:	81 11       	cpse	r24, r1
    1d52:	b3 cf       	rjmp	.-154    	; 0x1cba <vfprintf+0x5c>
    1d54:	98 2f       	mov	r25, r24
    1d56:	9f 7d       	andi	r25, 0xDF	; 223
    1d58:	95 54       	subi	r25, 0x45	; 69
    1d5a:	93 30       	cpi	r25, 0x03	; 3
    1d5c:	28 f4       	brcc	.+10     	; 0x1d68 <vfprintf+0x10a>
    1d5e:	0c 5f       	subi	r16, 0xFC	; 252
    1d60:	1f 4f       	sbci	r17, 0xFF	; 255
    1d62:	9f e3       	ldi	r25, 0x3F	; 63
    1d64:	99 83       	std	Y+1, r25	; 0x01
    1d66:	0d c0       	rjmp	.+26     	; 0x1d82 <vfprintf+0x124>
    1d68:	83 36       	cpi	r24, 0x63	; 99
    1d6a:	31 f0       	breq	.+12     	; 0x1d78 <vfprintf+0x11a>
    1d6c:	83 37       	cpi	r24, 0x73	; 115
    1d6e:	71 f0       	breq	.+28     	; 0x1d8c <vfprintf+0x12e>
    1d70:	83 35       	cpi	r24, 0x53	; 83
    1d72:	09 f0       	breq	.+2      	; 0x1d76 <vfprintf+0x118>
    1d74:	59 c0       	rjmp	.+178    	; 0x1e28 <vfprintf+0x1ca>
    1d76:	21 c0       	rjmp	.+66     	; 0x1dba <vfprintf+0x15c>
    1d78:	f8 01       	movw	r30, r16
    1d7a:	80 81       	ld	r24, Z
    1d7c:	89 83       	std	Y+1, r24	; 0x01
    1d7e:	0e 5f       	subi	r16, 0xFE	; 254
    1d80:	1f 4f       	sbci	r17, 0xFF	; 255
    1d82:	88 24       	eor	r8, r8
    1d84:	83 94       	inc	r8
    1d86:	91 2c       	mov	r9, r1
    1d88:	53 01       	movw	r10, r6
    1d8a:	13 c0       	rjmp	.+38     	; 0x1db2 <vfprintf+0x154>
    1d8c:	28 01       	movw	r4, r16
    1d8e:	f2 e0       	ldi	r31, 0x02	; 2
    1d90:	4f 0e       	add	r4, r31
    1d92:	51 1c       	adc	r5, r1
    1d94:	f8 01       	movw	r30, r16
    1d96:	a0 80       	ld	r10, Z
    1d98:	b1 80       	ldd	r11, Z+1	; 0x01
    1d9a:	36 fe       	sbrs	r3, 6
    1d9c:	03 c0       	rjmp	.+6      	; 0x1da4 <vfprintf+0x146>
    1d9e:	69 2d       	mov	r22, r9
    1da0:	70 e0       	ldi	r23, 0x00	; 0
    1da2:	02 c0       	rjmp	.+4      	; 0x1da8 <vfprintf+0x14a>
    1da4:	6f ef       	ldi	r22, 0xFF	; 255
    1da6:	7f ef       	ldi	r23, 0xFF	; 255
    1da8:	c5 01       	movw	r24, r10
    1daa:	0e 94 1b 10 	call	0x2036	; 0x2036 <strnlen>
    1dae:	4c 01       	movw	r8, r24
    1db0:	82 01       	movw	r16, r4
    1db2:	f3 2d       	mov	r31, r3
    1db4:	ff 77       	andi	r31, 0x7F	; 127
    1db6:	3f 2e       	mov	r3, r31
    1db8:	16 c0       	rjmp	.+44     	; 0x1de6 <vfprintf+0x188>
    1dba:	28 01       	movw	r4, r16
    1dbc:	22 e0       	ldi	r18, 0x02	; 2
    1dbe:	42 0e       	add	r4, r18
    1dc0:	51 1c       	adc	r5, r1
    1dc2:	f8 01       	movw	r30, r16
    1dc4:	a0 80       	ld	r10, Z
    1dc6:	b1 80       	ldd	r11, Z+1	; 0x01
    1dc8:	36 fe       	sbrs	r3, 6
    1dca:	03 c0       	rjmp	.+6      	; 0x1dd2 <vfprintf+0x174>
    1dcc:	69 2d       	mov	r22, r9
    1dce:	70 e0       	ldi	r23, 0x00	; 0
    1dd0:	02 c0       	rjmp	.+4      	; 0x1dd6 <vfprintf+0x178>
    1dd2:	6f ef       	ldi	r22, 0xFF	; 255
    1dd4:	7f ef       	ldi	r23, 0xFF	; 255
    1dd6:	c5 01       	movw	r24, r10
    1dd8:	0e 94 10 10 	call	0x2020	; 0x2020 <strnlen_P>
    1ddc:	4c 01       	movw	r8, r24
    1dde:	f3 2d       	mov	r31, r3
    1de0:	f0 68       	ori	r31, 0x80	; 128
    1de2:	3f 2e       	mov	r3, r31
    1de4:	82 01       	movw	r16, r4
    1de6:	33 fc       	sbrc	r3, 3
    1de8:	1b c0       	rjmp	.+54     	; 0x1e20 <vfprintf+0x1c2>
    1dea:	82 2d       	mov	r24, r2
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	88 16       	cp	r8, r24
    1df0:	99 06       	cpc	r9, r25
    1df2:	b0 f4       	brcc	.+44     	; 0x1e20 <vfprintf+0x1c2>
    1df4:	b6 01       	movw	r22, r12
    1df6:	80 e2       	ldi	r24, 0x20	; 32
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1dfe:	2a 94       	dec	r2
    1e00:	f4 cf       	rjmp	.-24     	; 0x1dea <vfprintf+0x18c>
    1e02:	f5 01       	movw	r30, r10
    1e04:	37 fc       	sbrc	r3, 7
    1e06:	85 91       	lpm	r24, Z+
    1e08:	37 fe       	sbrs	r3, 7
    1e0a:	81 91       	ld	r24, Z+
    1e0c:	5f 01       	movw	r10, r30
    1e0e:	b6 01       	movw	r22, r12
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1e16:	21 10       	cpse	r2, r1
    1e18:	2a 94       	dec	r2
    1e1a:	21 e0       	ldi	r18, 0x01	; 1
    1e1c:	82 1a       	sub	r8, r18
    1e1e:	91 08       	sbc	r9, r1
    1e20:	81 14       	cp	r8, r1
    1e22:	91 04       	cpc	r9, r1
    1e24:	71 f7       	brne	.-36     	; 0x1e02 <vfprintf+0x1a4>
    1e26:	e8 c0       	rjmp	.+464    	; 0x1ff8 <vfprintf+0x39a>
    1e28:	84 36       	cpi	r24, 0x64	; 100
    1e2a:	11 f0       	breq	.+4      	; 0x1e30 <vfprintf+0x1d2>
    1e2c:	89 36       	cpi	r24, 0x69	; 105
    1e2e:	41 f5       	brne	.+80     	; 0x1e80 <vfprintf+0x222>
    1e30:	f8 01       	movw	r30, r16
    1e32:	37 fe       	sbrs	r3, 7
    1e34:	07 c0       	rjmp	.+14     	; 0x1e44 <vfprintf+0x1e6>
    1e36:	60 81       	ld	r22, Z
    1e38:	71 81       	ldd	r23, Z+1	; 0x01
    1e3a:	82 81       	ldd	r24, Z+2	; 0x02
    1e3c:	93 81       	ldd	r25, Z+3	; 0x03
    1e3e:	0c 5f       	subi	r16, 0xFC	; 252
    1e40:	1f 4f       	sbci	r17, 0xFF	; 255
    1e42:	08 c0       	rjmp	.+16     	; 0x1e54 <vfprintf+0x1f6>
    1e44:	60 81       	ld	r22, Z
    1e46:	71 81       	ldd	r23, Z+1	; 0x01
    1e48:	07 2e       	mov	r0, r23
    1e4a:	00 0c       	add	r0, r0
    1e4c:	88 0b       	sbc	r24, r24
    1e4e:	99 0b       	sbc	r25, r25
    1e50:	0e 5f       	subi	r16, 0xFE	; 254
    1e52:	1f 4f       	sbci	r17, 0xFF	; 255
    1e54:	f3 2d       	mov	r31, r3
    1e56:	ff 76       	andi	r31, 0x6F	; 111
    1e58:	3f 2e       	mov	r3, r31
    1e5a:	97 ff       	sbrs	r25, 7
    1e5c:	09 c0       	rjmp	.+18     	; 0x1e70 <vfprintf+0x212>
    1e5e:	90 95       	com	r25
    1e60:	80 95       	com	r24
    1e62:	70 95       	com	r23
    1e64:	61 95       	neg	r22
    1e66:	7f 4f       	sbci	r23, 0xFF	; 255
    1e68:	8f 4f       	sbci	r24, 0xFF	; 255
    1e6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e6c:	f0 68       	ori	r31, 0x80	; 128
    1e6e:	3f 2e       	mov	r3, r31
    1e70:	2a e0       	ldi	r18, 0x0A	; 10
    1e72:	30 e0       	ldi	r19, 0x00	; 0
    1e74:	a3 01       	movw	r20, r6
    1e76:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__ultoa_invert>
    1e7a:	88 2e       	mov	r8, r24
    1e7c:	86 18       	sub	r8, r6
    1e7e:	45 c0       	rjmp	.+138    	; 0x1f0a <vfprintf+0x2ac>
    1e80:	85 37       	cpi	r24, 0x75	; 117
    1e82:	31 f4       	brne	.+12     	; 0x1e90 <vfprintf+0x232>
    1e84:	23 2d       	mov	r18, r3
    1e86:	2f 7e       	andi	r18, 0xEF	; 239
    1e88:	b2 2e       	mov	r11, r18
    1e8a:	2a e0       	ldi	r18, 0x0A	; 10
    1e8c:	30 e0       	ldi	r19, 0x00	; 0
    1e8e:	25 c0       	rjmp	.+74     	; 0x1eda <vfprintf+0x27c>
    1e90:	93 2d       	mov	r25, r3
    1e92:	99 7f       	andi	r25, 0xF9	; 249
    1e94:	b9 2e       	mov	r11, r25
    1e96:	8f 36       	cpi	r24, 0x6F	; 111
    1e98:	c1 f0       	breq	.+48     	; 0x1eca <vfprintf+0x26c>
    1e9a:	18 f4       	brcc	.+6      	; 0x1ea2 <vfprintf+0x244>
    1e9c:	88 35       	cpi	r24, 0x58	; 88
    1e9e:	79 f0       	breq	.+30     	; 0x1ebe <vfprintf+0x260>
    1ea0:	b5 c0       	rjmp	.+362    	; 0x200c <vfprintf+0x3ae>
    1ea2:	80 37       	cpi	r24, 0x70	; 112
    1ea4:	19 f0       	breq	.+6      	; 0x1eac <vfprintf+0x24e>
    1ea6:	88 37       	cpi	r24, 0x78	; 120
    1ea8:	21 f0       	breq	.+8      	; 0x1eb2 <vfprintf+0x254>
    1eaa:	b0 c0       	rjmp	.+352    	; 0x200c <vfprintf+0x3ae>
    1eac:	e9 2f       	mov	r30, r25
    1eae:	e0 61       	ori	r30, 0x10	; 16
    1eb0:	be 2e       	mov	r11, r30
    1eb2:	b4 fe       	sbrs	r11, 4
    1eb4:	0d c0       	rjmp	.+26     	; 0x1ed0 <vfprintf+0x272>
    1eb6:	fb 2d       	mov	r31, r11
    1eb8:	f4 60       	ori	r31, 0x04	; 4
    1eba:	bf 2e       	mov	r11, r31
    1ebc:	09 c0       	rjmp	.+18     	; 0x1ed0 <vfprintf+0x272>
    1ebe:	34 fe       	sbrs	r3, 4
    1ec0:	0a c0       	rjmp	.+20     	; 0x1ed6 <vfprintf+0x278>
    1ec2:	29 2f       	mov	r18, r25
    1ec4:	26 60       	ori	r18, 0x06	; 6
    1ec6:	b2 2e       	mov	r11, r18
    1ec8:	06 c0       	rjmp	.+12     	; 0x1ed6 <vfprintf+0x278>
    1eca:	28 e0       	ldi	r18, 0x08	; 8
    1ecc:	30 e0       	ldi	r19, 0x00	; 0
    1ece:	05 c0       	rjmp	.+10     	; 0x1eda <vfprintf+0x27c>
    1ed0:	20 e1       	ldi	r18, 0x10	; 16
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <vfprintf+0x27c>
    1ed6:	20 e1       	ldi	r18, 0x10	; 16
    1ed8:	32 e0       	ldi	r19, 0x02	; 2
    1eda:	f8 01       	movw	r30, r16
    1edc:	b7 fe       	sbrs	r11, 7
    1ede:	07 c0       	rjmp	.+14     	; 0x1eee <vfprintf+0x290>
    1ee0:	60 81       	ld	r22, Z
    1ee2:	71 81       	ldd	r23, Z+1	; 0x01
    1ee4:	82 81       	ldd	r24, Z+2	; 0x02
    1ee6:	93 81       	ldd	r25, Z+3	; 0x03
    1ee8:	0c 5f       	subi	r16, 0xFC	; 252
    1eea:	1f 4f       	sbci	r17, 0xFF	; 255
    1eec:	06 c0       	rjmp	.+12     	; 0x1efa <vfprintf+0x29c>
    1eee:	60 81       	ld	r22, Z
    1ef0:	71 81       	ldd	r23, Z+1	; 0x01
    1ef2:	80 e0       	ldi	r24, 0x00	; 0
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	0e 5f       	subi	r16, 0xFE	; 254
    1ef8:	1f 4f       	sbci	r17, 0xFF	; 255
    1efa:	a3 01       	movw	r20, r6
    1efc:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__ultoa_invert>
    1f00:	88 2e       	mov	r8, r24
    1f02:	86 18       	sub	r8, r6
    1f04:	fb 2d       	mov	r31, r11
    1f06:	ff 77       	andi	r31, 0x7F	; 127
    1f08:	3f 2e       	mov	r3, r31
    1f0a:	36 fe       	sbrs	r3, 6
    1f0c:	0d c0       	rjmp	.+26     	; 0x1f28 <vfprintf+0x2ca>
    1f0e:	23 2d       	mov	r18, r3
    1f10:	2e 7f       	andi	r18, 0xFE	; 254
    1f12:	a2 2e       	mov	r10, r18
    1f14:	89 14       	cp	r8, r9
    1f16:	58 f4       	brcc	.+22     	; 0x1f2e <vfprintf+0x2d0>
    1f18:	34 fe       	sbrs	r3, 4
    1f1a:	0b c0       	rjmp	.+22     	; 0x1f32 <vfprintf+0x2d4>
    1f1c:	32 fc       	sbrc	r3, 2
    1f1e:	09 c0       	rjmp	.+18     	; 0x1f32 <vfprintf+0x2d4>
    1f20:	83 2d       	mov	r24, r3
    1f22:	8e 7e       	andi	r24, 0xEE	; 238
    1f24:	a8 2e       	mov	r10, r24
    1f26:	05 c0       	rjmp	.+10     	; 0x1f32 <vfprintf+0x2d4>
    1f28:	b8 2c       	mov	r11, r8
    1f2a:	a3 2c       	mov	r10, r3
    1f2c:	03 c0       	rjmp	.+6      	; 0x1f34 <vfprintf+0x2d6>
    1f2e:	b8 2c       	mov	r11, r8
    1f30:	01 c0       	rjmp	.+2      	; 0x1f34 <vfprintf+0x2d6>
    1f32:	b9 2c       	mov	r11, r9
    1f34:	a4 fe       	sbrs	r10, 4
    1f36:	0f c0       	rjmp	.+30     	; 0x1f56 <vfprintf+0x2f8>
    1f38:	fe 01       	movw	r30, r28
    1f3a:	e8 0d       	add	r30, r8
    1f3c:	f1 1d       	adc	r31, r1
    1f3e:	80 81       	ld	r24, Z
    1f40:	80 33       	cpi	r24, 0x30	; 48
    1f42:	21 f4       	brne	.+8      	; 0x1f4c <vfprintf+0x2ee>
    1f44:	9a 2d       	mov	r25, r10
    1f46:	99 7e       	andi	r25, 0xE9	; 233
    1f48:	a9 2e       	mov	r10, r25
    1f4a:	09 c0       	rjmp	.+18     	; 0x1f5e <vfprintf+0x300>
    1f4c:	a2 fe       	sbrs	r10, 2
    1f4e:	06 c0       	rjmp	.+12     	; 0x1f5c <vfprintf+0x2fe>
    1f50:	b3 94       	inc	r11
    1f52:	b3 94       	inc	r11
    1f54:	04 c0       	rjmp	.+8      	; 0x1f5e <vfprintf+0x300>
    1f56:	8a 2d       	mov	r24, r10
    1f58:	86 78       	andi	r24, 0x86	; 134
    1f5a:	09 f0       	breq	.+2      	; 0x1f5e <vfprintf+0x300>
    1f5c:	b3 94       	inc	r11
    1f5e:	a3 fc       	sbrc	r10, 3
    1f60:	11 c0       	rjmp	.+34     	; 0x1f84 <vfprintf+0x326>
    1f62:	a0 fe       	sbrs	r10, 0
    1f64:	06 c0       	rjmp	.+12     	; 0x1f72 <vfprintf+0x314>
    1f66:	b2 14       	cp	r11, r2
    1f68:	88 f4       	brcc	.+34     	; 0x1f8c <vfprintf+0x32e>
    1f6a:	28 0c       	add	r2, r8
    1f6c:	92 2c       	mov	r9, r2
    1f6e:	9b 18       	sub	r9, r11
    1f70:	0e c0       	rjmp	.+28     	; 0x1f8e <vfprintf+0x330>
    1f72:	b2 14       	cp	r11, r2
    1f74:	60 f4       	brcc	.+24     	; 0x1f8e <vfprintf+0x330>
    1f76:	b6 01       	movw	r22, r12
    1f78:	80 e2       	ldi	r24, 0x20	; 32
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1f80:	b3 94       	inc	r11
    1f82:	f7 cf       	rjmp	.-18     	; 0x1f72 <vfprintf+0x314>
    1f84:	b2 14       	cp	r11, r2
    1f86:	18 f4       	brcc	.+6      	; 0x1f8e <vfprintf+0x330>
    1f88:	2b 18       	sub	r2, r11
    1f8a:	02 c0       	rjmp	.+4      	; 0x1f90 <vfprintf+0x332>
    1f8c:	98 2c       	mov	r9, r8
    1f8e:	21 2c       	mov	r2, r1
    1f90:	a4 fe       	sbrs	r10, 4
    1f92:	10 c0       	rjmp	.+32     	; 0x1fb4 <vfprintf+0x356>
    1f94:	b6 01       	movw	r22, r12
    1f96:	80 e3       	ldi	r24, 0x30	; 48
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1f9e:	a2 fe       	sbrs	r10, 2
    1fa0:	17 c0       	rjmp	.+46     	; 0x1fd0 <vfprintf+0x372>
    1fa2:	a1 fc       	sbrc	r10, 1
    1fa4:	03 c0       	rjmp	.+6      	; 0x1fac <vfprintf+0x34e>
    1fa6:	88 e7       	ldi	r24, 0x78	; 120
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	02 c0       	rjmp	.+4      	; 0x1fb0 <vfprintf+0x352>
    1fac:	88 e5       	ldi	r24, 0x58	; 88
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	b6 01       	movw	r22, r12
    1fb2:	0c c0       	rjmp	.+24     	; 0x1fcc <vfprintf+0x36e>
    1fb4:	8a 2d       	mov	r24, r10
    1fb6:	86 78       	andi	r24, 0x86	; 134
    1fb8:	59 f0       	breq	.+22     	; 0x1fd0 <vfprintf+0x372>
    1fba:	a1 fe       	sbrs	r10, 1
    1fbc:	02 c0       	rjmp	.+4      	; 0x1fc2 <vfprintf+0x364>
    1fbe:	8b e2       	ldi	r24, 0x2B	; 43
    1fc0:	01 c0       	rjmp	.+2      	; 0x1fc4 <vfprintf+0x366>
    1fc2:	80 e2       	ldi	r24, 0x20	; 32
    1fc4:	a7 fc       	sbrc	r10, 7
    1fc6:	8d e2       	ldi	r24, 0x2D	; 45
    1fc8:	b6 01       	movw	r22, r12
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1fd0:	89 14       	cp	r8, r9
    1fd2:	38 f4       	brcc	.+14     	; 0x1fe2 <vfprintf+0x384>
    1fd4:	b6 01       	movw	r22, r12
    1fd6:	80 e3       	ldi	r24, 0x30	; 48
    1fd8:	90 e0       	ldi	r25, 0x00	; 0
    1fda:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1fde:	9a 94       	dec	r9
    1fe0:	f7 cf       	rjmp	.-18     	; 0x1fd0 <vfprintf+0x372>
    1fe2:	8a 94       	dec	r8
    1fe4:	f3 01       	movw	r30, r6
    1fe6:	e8 0d       	add	r30, r8
    1fe8:	f1 1d       	adc	r31, r1
    1fea:	80 81       	ld	r24, Z
    1fec:	b6 01       	movw	r22, r12
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    1ff4:	81 10       	cpse	r8, r1
    1ff6:	f5 cf       	rjmp	.-22     	; 0x1fe2 <vfprintf+0x384>
    1ff8:	22 20       	and	r2, r2
    1ffa:	09 f4       	brne	.+2      	; 0x1ffe <vfprintf+0x3a0>
    1ffc:	42 ce       	rjmp	.-892    	; 0x1c82 <vfprintf+0x24>
    1ffe:	b6 01       	movw	r22, r12
    2000:	80 e2       	ldi	r24, 0x20	; 32
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	0e 94 26 10 	call	0x204c	; 0x204c <fputc>
    2008:	2a 94       	dec	r2
    200a:	f6 cf       	rjmp	.-20     	; 0x1ff8 <vfprintf+0x39a>
    200c:	f6 01       	movw	r30, r12
    200e:	86 81       	ldd	r24, Z+6	; 0x06
    2010:	97 81       	ldd	r25, Z+7	; 0x07
    2012:	02 c0       	rjmp	.+4      	; 0x2018 <vfprintf+0x3ba>
    2014:	8f ef       	ldi	r24, 0xFF	; 255
    2016:	9f ef       	ldi	r25, 0xFF	; 255
    2018:	2b 96       	adiw	r28, 0x0b	; 11
    201a:	e2 e1       	ldi	r30, 0x12	; 18
    201c:	0c 94 dc 10 	jmp	0x21b8	; 0x21b8 <__epilogue_restores__>

00002020 <strnlen_P>:
    2020:	fc 01       	movw	r30, r24
    2022:	05 90       	lpm	r0, Z+
    2024:	61 50       	subi	r22, 0x01	; 1
    2026:	70 40       	sbci	r23, 0x00	; 0
    2028:	01 10       	cpse	r0, r1
    202a:	d8 f7       	brcc	.-10     	; 0x2022 <strnlen_P+0x2>
    202c:	80 95       	com	r24
    202e:	90 95       	com	r25
    2030:	8e 0f       	add	r24, r30
    2032:	9f 1f       	adc	r25, r31
    2034:	08 95       	ret

00002036 <strnlen>:
    2036:	fc 01       	movw	r30, r24
    2038:	61 50       	subi	r22, 0x01	; 1
    203a:	70 40       	sbci	r23, 0x00	; 0
    203c:	01 90       	ld	r0, Z+
    203e:	01 10       	cpse	r0, r1
    2040:	d8 f7       	brcc	.-10     	; 0x2038 <strnlen+0x2>
    2042:	80 95       	com	r24
    2044:	90 95       	com	r25
    2046:	8e 0f       	add	r24, r30
    2048:	9f 1f       	adc	r25, r31
    204a:	08 95       	ret

0000204c <fputc>:
    204c:	0f 93       	push	r16
    204e:	1f 93       	push	r17
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	fb 01       	movw	r30, r22
    2056:	23 81       	ldd	r18, Z+3	; 0x03
    2058:	21 fd       	sbrc	r18, 1
    205a:	03 c0       	rjmp	.+6      	; 0x2062 <fputc+0x16>
    205c:	8f ef       	ldi	r24, 0xFF	; 255
    205e:	9f ef       	ldi	r25, 0xFF	; 255
    2060:	2c c0       	rjmp	.+88     	; 0x20ba <fputc+0x6e>
    2062:	22 ff       	sbrs	r18, 2
    2064:	16 c0       	rjmp	.+44     	; 0x2092 <fputc+0x46>
    2066:	46 81       	ldd	r20, Z+6	; 0x06
    2068:	57 81       	ldd	r21, Z+7	; 0x07
    206a:	24 81       	ldd	r18, Z+4	; 0x04
    206c:	35 81       	ldd	r19, Z+5	; 0x05
    206e:	42 17       	cp	r20, r18
    2070:	53 07       	cpc	r21, r19
    2072:	44 f4       	brge	.+16     	; 0x2084 <fputc+0x38>
    2074:	a0 81       	ld	r26, Z
    2076:	b1 81       	ldd	r27, Z+1	; 0x01
    2078:	9d 01       	movw	r18, r26
    207a:	2f 5f       	subi	r18, 0xFF	; 255
    207c:	3f 4f       	sbci	r19, 0xFF	; 255
    207e:	31 83       	std	Z+1, r19	; 0x01
    2080:	20 83       	st	Z, r18
    2082:	8c 93       	st	X, r24
    2084:	26 81       	ldd	r18, Z+6	; 0x06
    2086:	37 81       	ldd	r19, Z+7	; 0x07
    2088:	2f 5f       	subi	r18, 0xFF	; 255
    208a:	3f 4f       	sbci	r19, 0xFF	; 255
    208c:	37 83       	std	Z+7, r19	; 0x07
    208e:	26 83       	std	Z+6, r18	; 0x06
    2090:	14 c0       	rjmp	.+40     	; 0x20ba <fputc+0x6e>
    2092:	8b 01       	movw	r16, r22
    2094:	ec 01       	movw	r28, r24
    2096:	fb 01       	movw	r30, r22
    2098:	00 84       	ldd	r0, Z+8	; 0x08
    209a:	f1 85       	ldd	r31, Z+9	; 0x09
    209c:	e0 2d       	mov	r30, r0
    209e:	09 95       	icall
    20a0:	89 2b       	or	r24, r25
    20a2:	e1 f6       	brne	.-72     	; 0x205c <fputc+0x10>
    20a4:	d8 01       	movw	r26, r16
    20a6:	16 96       	adiw	r26, 0x06	; 6
    20a8:	8d 91       	ld	r24, X+
    20aa:	9c 91       	ld	r25, X
    20ac:	17 97       	sbiw	r26, 0x07	; 7
    20ae:	01 96       	adiw	r24, 0x01	; 1
    20b0:	17 96       	adiw	r26, 0x07	; 7
    20b2:	9c 93       	st	X, r25
    20b4:	8e 93       	st	-X, r24
    20b6:	16 97       	sbiw	r26, 0x06	; 6
    20b8:	ce 01       	movw	r24, r28
    20ba:	df 91       	pop	r29
    20bc:	cf 91       	pop	r28
    20be:	1f 91       	pop	r17
    20c0:	0f 91       	pop	r16
    20c2:	08 95       	ret

000020c4 <__ultoa_invert>:
    20c4:	fa 01       	movw	r30, r20
    20c6:	aa 27       	eor	r26, r26
    20c8:	28 30       	cpi	r18, 0x08	; 8
    20ca:	51 f1       	breq	.+84     	; 0x2120 <__ultoa_invert+0x5c>
    20cc:	20 31       	cpi	r18, 0x10	; 16
    20ce:	81 f1       	breq	.+96     	; 0x2130 <__ultoa_invert+0x6c>
    20d0:	e8 94       	clt
    20d2:	6f 93       	push	r22
    20d4:	6e 7f       	andi	r22, 0xFE	; 254
    20d6:	6e 5f       	subi	r22, 0xFE	; 254
    20d8:	7f 4f       	sbci	r23, 0xFF	; 255
    20da:	8f 4f       	sbci	r24, 0xFF	; 255
    20dc:	9f 4f       	sbci	r25, 0xFF	; 255
    20de:	af 4f       	sbci	r26, 0xFF	; 255
    20e0:	b1 e0       	ldi	r27, 0x01	; 1
    20e2:	3e d0       	rcall	.+124    	; 0x2160 <__ultoa_invert+0x9c>
    20e4:	b4 e0       	ldi	r27, 0x04	; 4
    20e6:	3c d0       	rcall	.+120    	; 0x2160 <__ultoa_invert+0x9c>
    20e8:	67 0f       	add	r22, r23
    20ea:	78 1f       	adc	r23, r24
    20ec:	89 1f       	adc	r24, r25
    20ee:	9a 1f       	adc	r25, r26
    20f0:	a1 1d       	adc	r26, r1
    20f2:	68 0f       	add	r22, r24
    20f4:	79 1f       	adc	r23, r25
    20f6:	8a 1f       	adc	r24, r26
    20f8:	91 1d       	adc	r25, r1
    20fa:	a1 1d       	adc	r26, r1
    20fc:	6a 0f       	add	r22, r26
    20fe:	71 1d       	adc	r23, r1
    2100:	81 1d       	adc	r24, r1
    2102:	91 1d       	adc	r25, r1
    2104:	a1 1d       	adc	r26, r1
    2106:	20 d0       	rcall	.+64     	; 0x2148 <__ultoa_invert+0x84>
    2108:	09 f4       	brne	.+2      	; 0x210c <__ultoa_invert+0x48>
    210a:	68 94       	set
    210c:	3f 91       	pop	r19
    210e:	2a e0       	ldi	r18, 0x0A	; 10
    2110:	26 9f       	mul	r18, r22
    2112:	11 24       	eor	r1, r1
    2114:	30 19       	sub	r19, r0
    2116:	30 5d       	subi	r19, 0xD0	; 208
    2118:	31 93       	st	Z+, r19
    211a:	de f6       	brtc	.-74     	; 0x20d2 <__ultoa_invert+0xe>
    211c:	cf 01       	movw	r24, r30
    211e:	08 95       	ret
    2120:	46 2f       	mov	r20, r22
    2122:	47 70       	andi	r20, 0x07	; 7
    2124:	40 5d       	subi	r20, 0xD0	; 208
    2126:	41 93       	st	Z+, r20
    2128:	b3 e0       	ldi	r27, 0x03	; 3
    212a:	0f d0       	rcall	.+30     	; 0x214a <__ultoa_invert+0x86>
    212c:	c9 f7       	brne	.-14     	; 0x2120 <__ultoa_invert+0x5c>
    212e:	f6 cf       	rjmp	.-20     	; 0x211c <__ultoa_invert+0x58>
    2130:	46 2f       	mov	r20, r22
    2132:	4f 70       	andi	r20, 0x0F	; 15
    2134:	40 5d       	subi	r20, 0xD0	; 208
    2136:	4a 33       	cpi	r20, 0x3A	; 58
    2138:	18 f0       	brcs	.+6      	; 0x2140 <__ultoa_invert+0x7c>
    213a:	49 5d       	subi	r20, 0xD9	; 217
    213c:	31 fd       	sbrc	r19, 1
    213e:	40 52       	subi	r20, 0x20	; 32
    2140:	41 93       	st	Z+, r20
    2142:	02 d0       	rcall	.+4      	; 0x2148 <__ultoa_invert+0x84>
    2144:	a9 f7       	brne	.-22     	; 0x2130 <__ultoa_invert+0x6c>
    2146:	ea cf       	rjmp	.-44     	; 0x211c <__ultoa_invert+0x58>
    2148:	b4 e0       	ldi	r27, 0x04	; 4
    214a:	a6 95       	lsr	r26
    214c:	97 95       	ror	r25
    214e:	87 95       	ror	r24
    2150:	77 95       	ror	r23
    2152:	67 95       	ror	r22
    2154:	ba 95       	dec	r27
    2156:	c9 f7       	brne	.-14     	; 0x214a <__ultoa_invert+0x86>
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	61 05       	cpc	r22, r1
    215c:	71 05       	cpc	r23, r1
    215e:	08 95       	ret
    2160:	9b 01       	movw	r18, r22
    2162:	ac 01       	movw	r20, r24
    2164:	0a 2e       	mov	r0, r26
    2166:	06 94       	lsr	r0
    2168:	57 95       	ror	r21
    216a:	47 95       	ror	r20
    216c:	37 95       	ror	r19
    216e:	27 95       	ror	r18
    2170:	ba 95       	dec	r27
    2172:	c9 f7       	brne	.-14     	; 0x2166 <__ultoa_invert+0xa2>
    2174:	62 0f       	add	r22, r18
    2176:	73 1f       	adc	r23, r19
    2178:	84 1f       	adc	r24, r20
    217a:	95 1f       	adc	r25, r21
    217c:	a0 1d       	adc	r26, r0
    217e:	08 95       	ret

00002180 <__prologue_saves__>:
    2180:	2f 92       	push	r2
    2182:	3f 92       	push	r3
    2184:	4f 92       	push	r4
    2186:	5f 92       	push	r5
    2188:	6f 92       	push	r6
    218a:	7f 92       	push	r7
    218c:	8f 92       	push	r8
    218e:	9f 92       	push	r9
    2190:	af 92       	push	r10
    2192:	bf 92       	push	r11
    2194:	cf 92       	push	r12
    2196:	df 92       	push	r13
    2198:	ef 92       	push	r14
    219a:	ff 92       	push	r15
    219c:	0f 93       	push	r16
    219e:	1f 93       	push	r17
    21a0:	cf 93       	push	r28
    21a2:	df 93       	push	r29
    21a4:	cd b7       	in	r28, 0x3d	; 61
    21a6:	de b7       	in	r29, 0x3e	; 62
    21a8:	ca 1b       	sub	r28, r26
    21aa:	db 0b       	sbc	r29, r27
    21ac:	0f b6       	in	r0, 0x3f	; 63
    21ae:	f8 94       	cli
    21b0:	de bf       	out	0x3e, r29	; 62
    21b2:	0f be       	out	0x3f, r0	; 63
    21b4:	cd bf       	out	0x3d, r28	; 61
    21b6:	09 94       	ijmp

000021b8 <__epilogue_restores__>:
    21b8:	2a 88       	ldd	r2, Y+18	; 0x12
    21ba:	39 88       	ldd	r3, Y+17	; 0x11
    21bc:	48 88       	ldd	r4, Y+16	; 0x10
    21be:	5f 84       	ldd	r5, Y+15	; 0x0f
    21c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    21c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    21c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    21c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    21c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    21ca:	b9 84       	ldd	r11, Y+9	; 0x09
    21cc:	c8 84       	ldd	r12, Y+8	; 0x08
    21ce:	df 80       	ldd	r13, Y+7	; 0x07
    21d0:	ee 80       	ldd	r14, Y+6	; 0x06
    21d2:	fd 80       	ldd	r15, Y+5	; 0x05
    21d4:	0c 81       	ldd	r16, Y+4	; 0x04
    21d6:	1b 81       	ldd	r17, Y+3	; 0x03
    21d8:	aa 81       	ldd	r26, Y+2	; 0x02
    21da:	b9 81       	ldd	r27, Y+1	; 0x01
    21dc:	ce 0f       	add	r28, r30
    21de:	d1 1d       	adc	r29, r1
    21e0:	0f b6       	in	r0, 0x3f	; 63
    21e2:	f8 94       	cli
    21e4:	de bf       	out	0x3e, r29	; 62
    21e6:	0f be       	out	0x3f, r0	; 63
    21e8:	cd bf       	out	0x3d, r28	; 61
    21ea:	ed 01       	movw	r28, r26
    21ec:	08 95       	ret

000021ee <_exit>:
    21ee:	f8 94       	cli

000021f0 <__stop_program>:
    21f0:	ff cf       	rjmp	.-2      	; 0x21f0 <__stop_program>
