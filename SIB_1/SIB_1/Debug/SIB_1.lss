
SIB_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  0000209c  00002130  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000209c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000198  008001a0  008001a0  000021d0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000021d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000222c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  0000226c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c41  00000000  00000000  00002444  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf1  00000000  00000000  00005085  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019a3  00000000  00000000  00005d76  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000754  00000000  00000000  0000771c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e40  00000000  00000000  00007e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b52  00000000  00000000  00008cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000a802  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 10 04 	jmp	0x820	; 0x820 <__vector_1>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 07 	jmp	0xeee	; 0xeee <__vector_11>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 8b 03 	jmp	0x716	; 0x716 <__vector_21>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_24>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	11 e0       	ldi	r17, 0x01	; 1
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	ec e9       	ldi	r30, 0x9C	; 156
      c8:	f0 e2       	ldi	r31, 0x20	; 32
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a0 3a       	cpi	r26, 0xA0	; 160
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	23 e0       	ldi	r18, 0x03	; 3
      d8:	a0 ea       	ldi	r26, 0xA0	; 160
      da:	b1 e0       	ldi	r27, 0x01	; 1
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a8 33       	cpi	r26, 0x38	; 56
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <main>
      ea:	0c 94 4c 10 	jmp	0x2098	; 0x2098 <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <sys_config>:
		}//end ATOMIC_BLOCK
	}
}

void CAN_TX_INT(uint8_t cd,uint8_t cl,uint8_t cg)
{
      f2:	21 9a       	sbi	0x04, 1	; 4
      f4:	87 b1       	in	r24, 0x07	; 7
      f6:	87 b9       	out	0x07, r24	; 7
      f8:	87 b1       	in	r24, 0x07	; 7
      fa:	87 b9       	out	0x07, r24	; 7
      fc:	87 b1       	in	r24, 0x07	; 7
      fe:	87 b9       	out	0x07, r24	; 7
     100:	8a b1       	in	r24, 0x0a	; 10
     102:	8a b9       	out	0x0a, r24	; 10
     104:	51 9a       	sbi	0x0a, 1	; 10
     106:	8a b1       	in	r24, 0x0a	; 10
     108:	8a b9       	out	0x0a, r24	; 10
     10a:	8a b1       	in	r24, 0x0a	; 10
     10c:	8a b9       	out	0x0a, r24	; 10
     10e:	8a b1       	in	r24, 0x0a	; 10
     110:	8a b9       	out	0x0a, r24	; 10
     112:	8a b1       	in	r24, 0x0a	; 10
     114:	8a b9       	out	0x0a, r24	; 10
     116:	8a b1       	in	r24, 0x0a	; 10
     118:	8a b9       	out	0x0a, r24	; 10
     11a:	8a b1       	in	r24, 0x0a	; 10
     11c:	8a b9       	out	0x0a, r24	; 10
     11e:	84 b1       	in	r24, 0x04	; 4
     120:	84 b9       	out	0x04, r24	; 4
     122:	23 9a       	sbi	0x04, 3	; 4
     124:	2b 9a       	sbi	0x05, 3	; 5
     126:	3c 9a       	sbi	0x07, 4	; 7
     128:	44 9a       	sbi	0x08, 4	; 8
     12a:	08 95       	ret

0000012c <initUART>:
     12c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     130:	87 e6       	ldi	r24, 0x67	; 103
     132:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     136:	88 e0       	ldi	r24, 0x08	; 8
     138:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     13c:	86 e0       	ldi	r24, 0x06	; 6
     13e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     142:	08 95       	ret

00000144 <txUART>:
     144:	e0 ec       	ldi	r30, 0xC0	; 192
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	90 81       	ld	r25, Z
     14a:	95 ff       	sbrs	r25, 5
     14c:	fd cf       	rjmp	.-6      	; 0x148 <txUART+0x4>
     14e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     152:	08 95       	ret

00000154 <sendString>:
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	ec 01       	movw	r28, r24
     15a:	88 81       	ld	r24, Y
     15c:	88 23       	and	r24, r24
     15e:	31 f0       	breq	.+12     	; 0x16c <sendString+0x18>
     160:	21 96       	adiw	r28, 0x01	; 1
     162:	0e 94 a2 00 	call	0x144	; 0x144 <txUART>
     166:	89 91       	ld	r24, Y+
     168:	81 11       	cpse	r24, r1
     16a:	fb cf       	rjmp	.-10     	; 0x162 <sendString+0xe>
     16c:	df 91       	pop	r29
     16e:	cf 91       	pop	r28
     170:	08 95       	ret

00000172 <INTERRUPT_init>:
     172:	e8 9a       	sbi	0x1d, 0	; 29
     174:	e9 e6       	ldi	r30, 0x69	; 105
     176:	f0 e0       	ldi	r31, 0x00	; 0
     178:	80 81       	ld	r24, Z
     17a:	8c 7f       	andi	r24, 0xFC	; 252
     17c:	80 83       	st	Z, r24
     17e:	78 94       	sei
     180:	08 95       	ret

00000182 <SPI_masterInit>:
     182:	22 9a       	sbi	0x04, 2	; 4
     184:	23 9a       	sbi	0x04, 3	; 4
     186:	25 9a       	sbi	0x04, 5	; 4
     188:	2a 9a       	sbi	0x05, 2	; 5
     18a:	2b 98       	cbi	0x05, 3	; 5
     18c:	2d 98       	cbi	0x05, 5	; 5
     18e:	8c b5       	in	r24, 0x2c	; 44
     190:	80 65       	ori	r24, 0x50	; 80
     192:	8c bd       	out	0x2c, r24	; 44
     194:	8c b5       	in	r24, 0x2c	; 44
     196:	83 60       	ori	r24, 0x03	; 3
     198:	8c bd       	out	0x2c, r24	; 44
     19a:	08 95       	ret

0000019c <SPI_txrx>:
     19c:	8e bd       	out	0x2e, r24	; 46
     19e:	0d b4       	in	r0, 0x2d	; 45
     1a0:	07 fe       	sbrs	r0, 7
     1a2:	fd cf       	rjmp	.-6      	; 0x19e <SPI_txrx+0x2>
     1a4:	87 ec       	ldi	r24, 0xC7	; 199
     1a6:	90 e0       	ldi	r25, 0x00	; 0
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <SPI_txrx+0xc>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <SPI_txrx+0x12>
     1ae:	00 00       	nop
     1b0:	8e b5       	in	r24, 0x2e	; 46
     1b2:	08 95       	ret

000001b4 <mcp2515_write_register>:
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	d8 2f       	mov	r29, r24
     1ba:	c6 2f       	mov	r28, r22
     1bc:	2a 98       	cbi	0x05, 2	; 5
     1be:	82 e0       	ldi	r24, 0x02	; 2
     1c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1c4:	8d 2f       	mov	r24, r29
     1c6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1ca:	8c 2f       	mov	r24, r28
     1cc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1d0:	2a 9a       	sbi	0x05, 2	; 5
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	08 95       	ret

000001d8 <mcp2515_read_register>:
     1d8:	cf 93       	push	r28
     1da:	c8 2f       	mov	r28, r24
     1dc:	2a 98       	cbi	0x05, 2	; 5
     1de:	83 e0       	ldi	r24, 0x03	; 3
     1e0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1e4:	8c 2f       	mov	r24, r28
     1e6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1ea:	8f ef       	ldi	r24, 0xFF	; 255
     1ec:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     1f0:	2a 9a       	sbi	0x05, 2	; 5
     1f2:	cf 91       	pop	r28
     1f4:	08 95       	ret

000001f6 <mcp2515_bit_modify>:
     1f6:	1f 93       	push	r17
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	18 2f       	mov	r17, r24
     1fe:	d6 2f       	mov	r29, r22
     200:	c4 2f       	mov	r28, r20
     202:	2a 98       	cbi	0x05, 2	; 5
     204:	85 e0       	ldi	r24, 0x05	; 5
     206:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     20a:	81 2f       	mov	r24, r17
     20c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     210:	8d 2f       	mov	r24, r29
     212:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     216:	8c 2f       	mov	r24, r28
     218:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     21c:	2a 9a       	sbi	0x05, 2	; 5
     21e:	df 91       	pop	r29
     220:	cf 91       	pop	r28
     222:	1f 91       	pop	r17
     224:	08 95       	ret

00000226 <mcp2515_read_status>:
     226:	2a 98       	cbi	0x05, 2	; 5
     228:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     232:	2a 9a       	sbi	0x05, 2	; 5
     234:	08 95       	ret

00000236 <mcp2515_init>:
     236:	cf 93       	push	r28
     238:	c8 2f       	mov	r28, r24
     23a:	2a 98       	cbi	0x05, 2	; 5
     23c:	80 ec       	ldi	r24, 0xC0	; 192
     23e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     242:	2a 9a       	sbi	0x05, 2	; 5
     244:	8a e6       	ldi	r24, 0x6A	; 106
     246:	8a 95       	dec	r24
     248:	f1 f7       	brne	.-4      	; 0x246 <mcp2515_init+0x10>
     24a:	00 c0       	rjmp	.+0      	; 0x24c <mcp2515_init+0x16>
     24c:	2a 98       	cbi	0x05, 2	; 5
     24e:	82 e0       	ldi	r24, 0x02	; 2
     250:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     254:	88 e2       	ldi	r24, 0x28	; 40
     256:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     25a:	82 e0       	ldi	r24, 0x02	; 2
     25c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     260:	80 e9       	ldi	r24, 0x90	; 144
     262:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     266:	8c 2f       	mov	r24, r28
     268:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     26c:	83 e0       	ldi	r24, 0x03	; 3
     26e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     272:	2a 9a       	sbi	0x05, 2	; 5
     274:	8a e2       	ldi	r24, 0x2A	; 42
     276:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <mcp2515_read_register>
     27a:	c8 13       	cpse	r28, r24
     27c:	7e c0       	rjmp	.+252    	; 0x37a <mcp2515_init+0x144>
     27e:	60 e0       	ldi	r22, 0x00	; 0
     280:	8c e0       	ldi	r24, 0x0C	; 12
     282:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     286:	60 e0       	ldi	r22, 0x00	; 0
     288:	8d e0       	ldi	r24, 0x0D	; 13
     28a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     28e:	2a 98       	cbi	0x05, 2	; 5
     290:	82 e0       	ldi	r24, 0x02	; 2
     292:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     296:	80 e2       	ldi	r24, 0x20	; 32
     298:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     29c:	80 e0       	ldi	r24, 0x00	; 0
     29e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2a2:	80 ee       	ldi	r24, 0xE0	; 224
     2a4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2a8:	2a 9a       	sbi	0x05, 2	; 5
     2aa:	2a 98       	cbi	0x05, 2	; 5
     2ac:	82 e0       	ldi	r24, 0x02	; 2
     2ae:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2b2:	84 e2       	ldi	r24, 0x24	; 36
     2b4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2b8:	80 e0       	ldi	r24, 0x00	; 0
     2ba:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2be:	80 ee       	ldi	r24, 0xE0	; 224
     2c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2c4:	2a 9a       	sbi	0x05, 2	; 5
     2c6:	2a 98       	cbi	0x05, 2	; 5
     2c8:	82 e0       	ldi	r24, 0x02	; 2
     2ca:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2d4:	80 e0       	ldi	r24, 0x00	; 0
     2d6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2da:	80 e0       	ldi	r24, 0x00	; 0
     2dc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2e0:	2a 9a       	sbi	0x05, 2	; 5
     2e2:	2a 98       	cbi	0x05, 2	; 5
     2e4:	82 e0       	ldi	r24, 0x02	; 2
     2e6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2ea:	84 e0       	ldi	r24, 0x04	; 4
     2ec:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     2fc:	2a 9a       	sbi	0x05, 2	; 5
     2fe:	2a 98       	cbi	0x05, 2	; 5
     300:	82 e0       	ldi	r24, 0x02	; 2
     302:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     306:	88 e0       	ldi	r24, 0x08	; 8
     308:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     312:	80 e2       	ldi	r24, 0x20	; 32
     314:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	2a 98       	cbi	0x05, 2	; 5
     31c:	82 e0       	ldi	r24, 0x02	; 2
     31e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     322:	80 e1       	ldi	r24, 0x10	; 16
     324:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     334:	2a 9a       	sbi	0x05, 2	; 5
     336:	2a 98       	cbi	0x05, 2	; 5
     338:	82 e0       	ldi	r24, 0x02	; 2
     33a:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     33e:	84 e1       	ldi	r24, 0x14	; 20
     340:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     34a:	80 e2       	ldi	r24, 0x20	; 32
     34c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     350:	2a 9a       	sbi	0x05, 2	; 5
     352:	2a 98       	cbi	0x05, 2	; 5
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     35a:	88 e1       	ldi	r24, 0x18	; 24
     35c:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     366:	80 e2       	ldi	r24, 0x20	; 32
     368:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     36c:	2a 9a       	sbi	0x05, 2	; 5
     36e:	60 e0       	ldi	r22, 0x00	; 0
     370:	8f e0       	ldi	r24, 0x0F	; 15
     372:	0e 94 da 00 	call	0x1b4	; 0x1b4 <mcp2515_write_register>
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	01 c0       	rjmp	.+2      	; 0x37c <mcp2515_init+0x146>
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <mcp2515_get_message>:
     380:	cf 92       	push	r12
     382:	df 92       	push	r13
     384:	ef 92       	push	r14
     386:	ff 92       	push	r15
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	1f 92       	push	r1
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	6c 01       	movw	r12, r24
     398:	80 eb       	ldi	r24, 0xB0	; 176
     39a:	0e 94 13 01 	call	0x226	; 0x226 <mcp2515_read_status>
     39e:	89 83       	std	Y+1, r24	; 0x01
     3a0:	99 81       	ldd	r25, Y+1	; 0x01
     3a2:	89 2f       	mov	r24, r25
     3a4:	80 74       	andi	r24, 0x40	; 64
     3a6:	96 fd       	sbrc	r25, 6
     3a8:	06 c0       	rjmp	.+12     	; 0x3b6 <mcp2515_get_message+0x36>
     3aa:	99 81       	ldd	r25, Y+1	; 0x01
     3ac:	99 23       	and	r25, r25
     3ae:	0c f0       	brlt	.+2      	; 0x3b2 <mcp2515_get_message+0x32>
     3b0:	5d c0       	rjmp	.+186    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     3b2:	84 e9       	ldi	r24, 0x94	; 148
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <mcp2515_get_message+0x38>
     3b6:	80 e9       	ldi	r24, 0x90	; 144
     3b8:	2a 98       	cbi	0x05, 2	; 5
     3ba:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3be:	8f ef       	ldi	r24, 0xFF	; 255
     3c0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3c4:	28 e0       	ldi	r18, 0x08	; 8
     3c6:	82 9f       	mul	r24, r18
     3c8:	c0 01       	movw	r24, r0
     3ca:	11 24       	eor	r1, r1
     3cc:	f6 01       	movw	r30, r12
     3ce:	91 83       	std	Z+1, r25	; 0x01
     3d0:	80 83       	st	Z, r24
     3d2:	8f ef       	ldi	r24, 0xFF	; 255
     3d4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3d8:	28 2f       	mov	r18, r24
     3da:	22 95       	swap	r18
     3dc:	26 95       	lsr	r18
     3de:	27 70       	andi	r18, 0x07	; 7
     3e0:	f6 01       	movw	r30, r12
     3e2:	80 81       	ld	r24, Z
     3e4:	91 81       	ldd	r25, Z+1	; 0x01
     3e6:	82 2b       	or	r24, r18
     3e8:	91 83       	std	Z+1, r25	; 0x01
     3ea:	80 83       	st	Z, r24
     3ec:	8f ef       	ldi	r24, 0xFF	; 255
     3ee:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3f2:	8f ef       	ldi	r24, 0xFF	; 255
     3f4:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3f8:	8f ef       	ldi	r24, 0xFF	; 255
     3fa:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     3fe:	8f 70       	andi	r24, 0x0F	; 15
     400:	28 2f       	mov	r18, r24
     402:	22 0f       	add	r18, r18
     404:	f6 01       	movw	r30, r12
     406:	92 81       	ldd	r25, Z+2	; 0x02
     408:	91 7e       	andi	r25, 0xE1	; 225
     40a:	92 2b       	or	r25, r18
     40c:	92 83       	std	Z+2, r25	; 0x02
     40e:	29 81       	ldd	r18, Y+1	; 0x01
     410:	23 fb       	bst	r18, 3
     412:	22 27       	eor	r18, r18
     414:	20 f9       	bld	r18, 0
     416:	20 fb       	bst	r18, 0
     418:	90 f9       	bld	r25, 0
     41a:	92 83       	std	Z+2, r25	; 0x02
     41c:	88 23       	and	r24, r24
     41e:	a1 f0       	breq	.+40     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     420:	86 01       	movw	r16, r12
     422:	0d 5f       	subi	r16, 0xFD	; 253
     424:	1f 4f       	sbci	r17, 0xFF	; 255
     426:	81 50       	subi	r24, 0x01	; 1
     428:	e8 2e       	mov	r14, r24
     42a:	f1 2c       	mov	r15, r1
     42c:	f4 e0       	ldi	r31, 0x04	; 4
     42e:	ef 0e       	add	r14, r31
     430:	f1 1c       	adc	r15, r1
     432:	ec 0c       	add	r14, r12
     434:	fd 1c       	adc	r15, r13
     436:	8f ef       	ldi	r24, 0xFF	; 255
     438:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     43c:	f8 01       	movw	r30, r16
     43e:	81 93       	st	Z+, r24
     440:	8f 01       	movw	r16, r30
     442:	ee 15       	cp	r30, r14
     444:	ff 05       	cpc	r31, r15
     446:	b9 f7       	brne	.-18     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     448:	2a 9a       	sbi	0x05, 2	; 5
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	86 ff       	sbrs	r24, 6
     44e:	06 c0       	rjmp	.+12     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	8c e2       	ldi	r24, 0x2C	; 44
     456:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <mcp2515_bit_modify>
     45a:	05 c0       	rjmp	.+10     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     45c:	40 e0       	ldi	r20, 0x00	; 0
     45e:	62 e0       	ldi	r22, 0x02	; 2
     460:	8c e2       	ldi	r24, 0x2C	; 44
     462:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <mcp2515_bit_modify>
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	87 70       	andi	r24, 0x07	; 7
     46a:	8f 5f       	subi	r24, 0xFF	; 255
     46c:	0f 90       	pop	r0
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	ff 90       	pop	r15
     478:	ef 90       	pop	r14
     47a:	df 90       	pop	r13
     47c:	cf 90       	pop	r12
     47e:	08 95       	ret

00000480 <mcp2515_send_message>:
     480:	bf 92       	push	r11
     482:	cf 92       	push	r12
     484:	df 92       	push	r13
     486:	ef 92       	push	r14
     488:	ff 92       	push	r15
     48a:	0f 93       	push	r16
     48c:	1f 93       	push	r17
     48e:	cf 93       	push	r28
     490:	df 93       	push	r29
     492:	1f 92       	push	r1
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	6c 01       	movw	r12, r24
     49a:	80 ea       	ldi	r24, 0xA0	; 160
     49c:	0e 94 13 01 	call	0x226	; 0x226 <mcp2515_read_status>
     4a0:	89 83       	std	Y+1, r24	; 0x01
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	82 ff       	sbrs	r24, 2
     4a6:	0a c0       	rjmp	.+20     	; 0x4bc <mcp2515_send_message+0x3c>
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	84 ff       	sbrs	r24, 4
     4ac:	09 c0       	rjmp	.+18     	; 0x4c0 <mcp2515_send_message+0x40>
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	86 fd       	sbrc	r24, 6
     4b2:	5d c0       	rjmp	.+186    	; 0x56e <mcp2515_send_message+0xee>
     4b4:	68 94       	set
     4b6:	bb 24       	eor	r11, r11
     4b8:	b2 f8       	bld	r11, 2
     4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <mcp2515_send_message+0x46>
     4bc:	b1 2c       	mov	r11, r1
     4be:	03 c0       	rjmp	.+6      	; 0x4c6 <mcp2515_send_message+0x46>
     4c0:	68 94       	set
     4c2:	bb 24       	eor	r11, r11
     4c4:	b1 f8       	bld	r11, 1
     4c6:	2a 98       	cbi	0x05, 2	; 5
     4c8:	8b 2d       	mov	r24, r11
     4ca:	80 64       	ori	r24, 0x40	; 64
     4cc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4d0:	f6 01       	movw	r30, r12
     4d2:	80 81       	ld	r24, Z
     4d4:	91 81       	ldd	r25, Z+1	; 0x01
     4d6:	96 95       	lsr	r25
     4d8:	87 95       	ror	r24
     4da:	96 95       	lsr	r25
     4dc:	87 95       	ror	r24
     4de:	96 95       	lsr	r25
     4e0:	87 95       	ror	r24
     4e2:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4e6:	f6 01       	movw	r30, r12
     4e8:	80 81       	ld	r24, Z
     4ea:	82 95       	swap	r24
     4ec:	88 0f       	add	r24, r24
     4ee:	80 7e       	andi	r24, 0xE0	; 224
     4f0:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4f4:	80 e0       	ldi	r24, 0x00	; 0
     4f6:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     500:	f6 01       	movw	r30, r12
     502:	82 81       	ldd	r24, Z+2	; 0x02
     504:	f8 2e       	mov	r15, r24
     506:	f6 94       	lsr	r15
     508:	ff 2d       	mov	r31, r15
     50a:	ff 70       	andi	r31, 0x0F	; 15
     50c:	ff 2e       	mov	r15, r31
     50e:	80 ff       	sbrs	r24, 0
     510:	05 c0       	rjmp	.+10     	; 0x51c <mcp2515_send_message+0x9c>
     512:	8f 2f       	mov	r24, r31
     514:	80 64       	ori	r24, 0x40	; 64
     516:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     51a:	18 c0       	rjmp	.+48     	; 0x54c <mcp2515_send_message+0xcc>
     51c:	8f 2f       	mov	r24, r31
     51e:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     522:	ff 20       	and	r15, r15
     524:	99 f0       	breq	.+38     	; 0x54c <mcp2515_send_message+0xcc>
     526:	86 01       	movw	r16, r12
     528:	0d 5f       	subi	r16, 0xFD	; 253
     52a:	1f 4f       	sbci	r17, 0xFF	; 255
     52c:	fa 94       	dec	r15
     52e:	ef 2c       	mov	r14, r15
     530:	f1 2c       	mov	r15, r1
     532:	84 e0       	ldi	r24, 0x04	; 4
     534:	e8 0e       	add	r14, r24
     536:	f1 1c       	adc	r15, r1
     538:	ec 0c       	add	r14, r12
     53a:	fd 1c       	adc	r15, r13
     53c:	f8 01       	movw	r30, r16
     53e:	81 91       	ld	r24, Z+
     540:	8f 01       	movw	r16, r30
     542:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     546:	0e 15       	cp	r16, r14
     548:	1f 05       	cpc	r17, r15
     54a:	c1 f7       	brne	.-16     	; 0x53c <mcp2515_send_message+0xbc>
     54c:	2a 9a       	sbi	0x05, 2	; 5
     54e:	f5 e0       	ldi	r31, 0x05	; 5
     550:	fa 95       	dec	r31
     552:	f1 f7       	brne	.-4      	; 0x550 <mcp2515_send_message+0xd0>
     554:	00 00       	nop
     556:	2a 98       	cbi	0x05, 2	; 5
     558:	b1 10       	cpse	r11, r1
     55a:	02 c0       	rjmp	.+4      	; 0x560 <mcp2515_send_message+0xe0>
     55c:	bb 24       	eor	r11, r11
     55e:	b3 94       	inc	r11
     560:	8b 2d       	mov	r24, r11
     562:	80 68       	ori	r24, 0x80	; 128
     564:	0e 94 ce 00 	call	0x19c	; 0x19c <SPI_txrx>
     568:	2a 9a       	sbi	0x05, 2	; 5
     56a:	8b 2d       	mov	r24, r11
     56c:	01 c0       	rjmp	.+2      	; 0x570 <mcp2515_send_message+0xf0>
     56e:	80 e0       	ldi	r24, 0x00	; 0
     570:	0f 90       	pop	r0
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	ff 90       	pop	r15
     57c:	ef 90       	pop	r14
     57e:	df 90       	pop	r13
     580:	cf 90       	pop	r12
     582:	bf 90       	pop	r11
     584:	08 95       	ret

00000586 <USART_Init>:
     586:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     58a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     58e:	e1 ec       	ldi	r30, 0xC1	; 193
     590:	f0 e0       	ldi	r31, 0x00	; 0
     592:	80 81       	ld	r24, Z
     594:	88 69       	ori	r24, 0x98	; 152
     596:	80 83       	st	Z, r24
     598:	e2 ec       	ldi	r30, 0xC2	; 194
     59a:	f0 e0       	ldi	r31, 0x00	; 0
     59c:	80 81       	ld	r24, Z
     59e:	86 60       	ori	r24, 0x06	; 6
     5a0:	80 83       	st	Z, r24
     5a2:	08 95       	ret

000005a4 <USART_Transmit>:
     5a4:	e0 ec       	ldi	r30, 0xC0	; 192
     5a6:	f0 e0       	ldi	r31, 0x00	; 0
     5a8:	90 81       	ld	r25, Z
     5aa:	95 ff       	sbrs	r25, 5
     5ac:	fd cf       	rjmp	.-6      	; 0x5a8 <USART_Transmit+0x4>
     5ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     5b2:	08 95       	ret

000005b4 <USART_Transmit_TX>:
     5b4:	ef 92       	push	r14
     5b6:	ff 92       	push	r15
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	fc 01       	movw	r30, r24
     5c2:	01 90       	ld	r0, Z+
     5c4:	00 20       	and	r0, r0
     5c6:	e9 f7       	brne	.-6      	; 0x5c2 <USART_Transmit_TX+0xe>
     5c8:	31 97       	sbiw	r30, 0x01	; 1
     5ca:	7f 01       	movw	r14, r30
     5cc:	e8 1a       	sub	r14, r24
     5ce:	f9 0a       	sbc	r15, r25
     5d0:	61 f0       	breq	.+24     	; 0x5ea <USART_Transmit_TX+0x36>
     5d2:	8c 01       	movw	r16, r24
     5d4:	c0 e0       	ldi	r28, 0x00	; 0
     5d6:	d0 e0       	ldi	r29, 0x00	; 0
     5d8:	f8 01       	movw	r30, r16
     5da:	81 91       	ld	r24, Z+
     5dc:	8f 01       	movw	r16, r30
     5de:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     5e2:	21 96       	adiw	r28, 0x01	; 1
     5e4:	ec 16       	cp	r14, r28
     5e6:	fd 06       	cpc	r15, r29
     5e8:	b9 f7       	brne	.-18     	; 0x5d8 <USART_Transmit_TX+0x24>
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	ff 90       	pop	r15
     5f4:	ef 90       	pop	r14
     5f6:	08 95       	ret

000005f8 <USART_CAN_TX>:
     5f8:	cf 92       	push	r12
     5fa:	df 92       	push	r13
     5fc:	ef 92       	push	r14
     5fe:	ff 92       	push	r15
     600:	0f 93       	push	r16
     602:	1f 93       	push	r17
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	cd b7       	in	r28, 0x3d	; 61
     60a:	de b7       	in	r29, 0x3e	; 62
     60c:	2b 97       	sbiw	r28, 0x0b	; 11
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	e9 82       	std	Y+1, r14	; 0x01
     61a:	fa 82       	std	Y+2, r15	; 0x02
     61c:	0b 83       	std	Y+3, r16	; 0x03
     61e:	1c 83       	std	Y+4, r17	; 0x04
     620:	2d 83       	std	Y+5, r18	; 0x05
     622:	3e 83       	std	Y+6, r19	; 0x06
     624:	4f 83       	std	Y+7, r20	; 0x07
     626:	58 87       	std	Y+8, r21	; 0x08
     628:	69 87       	std	Y+9, r22	; 0x09
     62a:	7a 87       	std	Y+10, r23	; 0x0a
     62c:	8b 87       	std	Y+11, r24	; 0x0b
     62e:	c9 80       	ldd	r12, Y+1	; 0x01
     630:	da 80       	ldd	r13, Y+2	; 0x02
     632:	06 95       	lsr	r16
     634:	0f 70       	andi	r16, 0x0F	; 15
     636:	8e ee       	ldi	r24, 0xEE	; 238
     638:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     63c:	c6 01       	movw	r24, r12
     63e:	96 95       	lsr	r25
     640:	87 95       	ror	r24
     642:	96 95       	lsr	r25
     644:	87 95       	ror	r24
     646:	96 95       	lsr	r25
     648:	87 95       	ror	r24
     64a:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     64e:	9b 81       	ldd	r25, Y+3	; 0x03
     650:	97 95       	ror	r25
     652:	99 27       	eor	r25, r25
     654:	97 95       	ror	r25
     656:	99 0f       	add	r25, r25
     658:	99 0b       	sbc	r25, r25
     65a:	92 95       	swap	r25
     65c:	90 7f       	andi	r25, 0xF0	; 240
     65e:	8c 2d       	mov	r24, r12
     660:	82 95       	swap	r24
     662:	88 0f       	add	r24, r24
     664:	80 7e       	andi	r24, 0xE0	; 224
     666:	89 2b       	or	r24, r25
     668:	80 2b       	or	r24, r16
     66a:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     66e:	8b 81       	ldd	r24, Y+3	; 0x03
     670:	80 fd       	sbrc	r24, 0
     672:	17 c0       	rjmp	.+46     	; 0x6a2 <USART_CAN_TX+0xaa>
     674:	e0 2e       	mov	r14, r16
     676:	f1 2c       	mov	r15, r1
     678:	1e 14       	cp	r1, r14
     67a:	1f 04       	cpc	r1, r15
     67c:	94 f4       	brge	.+36     	; 0x6a2 <USART_CAN_TX+0xaa>
     67e:	80 e0       	ldi	r24, 0x00	; 0
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	10 e0       	ldi	r17, 0x00	; 0
     684:	e4 e0       	ldi	r30, 0x04	; 4
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	ec 0f       	add	r30, r28
     68a:	fd 1f       	adc	r31, r29
     68c:	e8 0f       	add	r30, r24
     68e:	f9 1f       	adc	r31, r25
     690:	80 81       	ld	r24, Z
     692:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <USART_Transmit>
     696:	1f 5f       	subi	r17, 0xFF	; 255
     698:	81 2f       	mov	r24, r17
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	8e 15       	cp	r24, r14
     69e:	9f 05       	cpc	r25, r15
     6a0:	8c f3       	brlt	.-30     	; 0x684 <USART_CAN_TX+0x8c>
     6a2:	2b 96       	adiw	r28, 0x0b	; 11
     6a4:	0f b6       	in	r0, 0x3f	; 63
     6a6:	f8 94       	cli
     6a8:	de bf       	out	0x3e, r29	; 62
     6aa:	0f be       	out	0x3f, r0	; 63
     6ac:	cd bf       	out	0x3d, r28	; 61
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	1f 91       	pop	r17
     6b4:	0f 91       	pop	r16
     6b6:	ff 90       	pop	r15
     6b8:	ef 90       	pop	r14
     6ba:	df 90       	pop	r13
     6bc:	cf 90       	pop	r12
     6be:	08 95       	ret

000006c0 <init_ADC>:
     6c0:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     6c4:	8e ec       	ldi	r24, 0xCE	; 206
     6c6:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     6ca:	81 ec       	ldi	r24, 0xC1	; 193
     6cc:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
     6d0:	08 95       	ret

000006d2 <init_ADC_timer>:
     6d2:	8d e4       	ldi	r24, 0x4D	; 77
     6d4:	87 bd       	out	0x27, r24	; 39
     6d6:	84 b5       	in	r24, 0x24	; 36
     6d8:	82 60       	ori	r24, 0x02	; 2
     6da:	84 bd       	out	0x24, r24	; 36
     6dc:	84 e0       	ldi	r24, 0x04	; 4
     6de:	85 bd       	out	0x25, r24	; 37
     6e0:	ee e6       	ldi	r30, 0x6E	; 110
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 81       	ld	r24, Z
     6e6:	82 60       	ori	r24, 0x02	; 2
     6e8:	80 83       	st	Z, r24
     6ea:	08 95       	ret

000006ec <__vector_14>:
     6ec:	1f 92       	push	r1
     6ee:	0f 92       	push	r0
     6f0:	0f b6       	in	r0, 0x3f	; 63
     6f2:	0f 92       	push	r0
     6f4:	11 24       	eor	r1, r1
     6f6:	8f 93       	push	r24
     6f8:	ef 93       	push	r30
     6fa:	ff 93       	push	r31
     6fc:	ea e7       	ldi	r30, 0x7A	; 122
     6fe:	f0 e0       	ldi	r31, 0x00	; 0
     700:	80 81       	ld	r24, Z
     702:	80 64       	ori	r24, 0x40	; 64
     704:	80 83       	st	Z, r24
     706:	ff 91       	pop	r31
     708:	ef 91       	pop	r30
     70a:	8f 91       	pop	r24
     70c:	0f 90       	pop	r0
     70e:	0f be       	out	0x3f, r0	; 63
     710:	0f 90       	pop	r0
     712:	1f 90       	pop	r1
     714:	18 95       	reti

00000716 <__vector_21>:
     716:	1f 92       	push	r1
     718:	0f 92       	push	r0
     71a:	0f b6       	in	r0, 0x3f	; 63
     71c:	0f 92       	push	r0
     71e:	11 24       	eor	r1, r1
     720:	2f 93       	push	r18
     722:	8f 93       	push	r24
     724:	9f 93       	push	r25
     726:	ef 93       	push	r30
     728:	ff 93       	push	r31
     72a:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     72e:	85 30       	cpi	r24, 0x05	; 5
     730:	31 f0       	breq	.+12     	; 0x73e <__vector_21+0x28>
     732:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     736:	8f 5f       	subi	r24, 0xFF	; 255
     738:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <adCount>
     73c:	02 c0       	rjmp	.+4      	; 0x742 <__vector_21+0x2c>
     73e:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <adCount>
     742:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     746:	80 ff       	sbrs	r24, 0
     748:	61 c0       	rjmp	.+194    	; 0x80c <__vector_21+0xf6>
     74a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <adResult+0x1>
     754:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <adResult>
     758:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     75c:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <adResult>
     760:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <adResult+0x1>
     764:	92 2b       	or	r25, r18
     766:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <adResult+0x1>
     76a:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <adResult>
     76e:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     772:	85 30       	cpi	r24, 0x05	; 5
     774:	a8 f5       	brcc	.+106    	; 0x7e0 <__vector_21+0xca>
     776:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     77a:	81 30       	cpi	r24, 0x01	; 1
     77c:	e9 f4       	brne	.+58     	; 0x7b8 <__vector_21+0xa2>
     77e:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <ep_history>
     782:	89 30       	cpi	r24, 0x09	; 9
     784:	30 f4       	brcc	.+12     	; 0x792 <__vector_21+0x7c>
     786:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <ep_history>
     78a:	8f 5f       	subi	r24, 0xFF	; 255
     78c:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <ep_history>
     790:	03 c0       	rjmp	.+6      	; 0x798 <__vector_21+0x82>
     792:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <ep_history>
     796:	19 9a       	sbi	0x03, 1	; 3
     798:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <ep_history>
     79c:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <adResult>
     7a0:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <adResult+0x1>
     7a4:	f0 e0       	ldi	r31, 0x00	; 0
     7a6:	ee 0f       	add	r30, r30
     7a8:	ff 1f       	adc	r31, r31
     7aa:	ed 5a       	subi	r30, 0xAD	; 173
     7ac:	fd 4f       	sbci	r31, 0xFD	; 253
     7ae:	91 83       	std	Z+1, r25	; 0x01
     7b0:	80 83       	st	Z, r24
     7b2:	86 e0       	ldi	r24, 0x06	; 6
     7b4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     7b8:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     7bc:	83 30       	cpi	r24, 0x03	; 3
     7be:	81 f4       	brne	.+32     	; 0x7e0 <__vector_21+0xca>
     7c0:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <ep_history>
     7c4:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <adResult>
     7c8:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <adResult+0x1>
     7cc:	f0 e0       	ldi	r31, 0x00	; 0
     7ce:	ee 0f       	add	r30, r30
     7d0:	ff 1f       	adc	r31, r31
     7d2:	e1 5c       	subi	r30, 0xC1	; 193
     7d4:	fd 4f       	sbci	r31, 0xFD	; 253
     7d6:	91 83       	std	Z+1, r25	; 0x01
     7d8:	80 83       	st	Z, r24
     7da:	87 e0       	ldi	r24, 0x07	; 7
     7dc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     7e0:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <adCount>
     7e4:	85 30       	cpi	r24, 0x05	; 5
     7e6:	91 f4       	brne	.+36     	; 0x80c <__vector_21+0xf6>
     7e8:	e0 91 ad 01 	lds	r30, 0x01AD	; 0x8001ad <ep_history>
     7ec:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <adResult>
     7f0:	90 91 ac 01 	lds	r25, 0x01AC	; 0x8001ac <adResult+0x1>
     7f4:	f0 e0       	ldi	r31, 0x00	; 0
     7f6:	ee 0f       	add	r30, r30
     7f8:	ff 1f       	adc	r31, r31
     7fa:	e8 50       	subi	r30, 0x08	; 8
     7fc:	fe 4f       	sbci	r31, 0xFE	; 254
     7fe:	91 83       	std	Z+1, r25	; 0x01
     800:	80 83       	st	Z, r24
     802:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <adc_Cycle_Done>
     80c:	ff 91       	pop	r31
     80e:	ef 91       	pop	r30
     810:	9f 91       	pop	r25
     812:	8f 91       	pop	r24
     814:	2f 91       	pop	r18
     816:	0f 90       	pop	r0
     818:	0f be       	out	0x3f, r0	; 63
     81a:	0f 90       	pop	r0
     81c:	1f 90       	pop	r1
     81e:	18 95       	reti

00000820 <__vector_1>:
     820:	1f 92       	push	r1
     822:	0f 92       	push	r0
     824:	0f b6       	in	r0, 0x3f	; 63
     826:	0f 92       	push	r0
     828:	11 24       	eor	r1, r1
     82a:	2f 93       	push	r18
     82c:	3f 93       	push	r19
     82e:	4f 93       	push	r20
     830:	5f 93       	push	r21
     832:	6f 93       	push	r22
     834:	7f 93       	push	r23
     836:	8f 93       	push	r24
     838:	9f 93       	push	r25
     83a:	af 93       	push	r26
     83c:	bf 93       	push	r27
     83e:	ef 93       	push	r30
     840:	ff 93       	push	r31
     842:	8c e0       	ldi	r24, 0x0C	; 12
     844:	92 e0       	ldi	r25, 0x02	; 2
     846:	0e 94 c0 01 	call	0x380	; 0x380 <mcp2515_get_message>
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <rx_flag>
     850:	ff 91       	pop	r31
     852:	ef 91       	pop	r30
     854:	bf 91       	pop	r27
     856:	af 91       	pop	r26
     858:	9f 91       	pop	r25
     85a:	8f 91       	pop	r24
     85c:	7f 91       	pop	r23
     85e:	6f 91       	pop	r22
     860:	5f 91       	pop	r21
     862:	4f 91       	pop	r20
     864:	3f 91       	pop	r19
     866:	2f 91       	pop	r18
     868:	0f 90       	pop	r0
     86a:	0f be       	out	0x3f, r0	; 63
     86c:	0f 90       	pop	r0
     86e:	1f 90       	pop	r1
     870:	18 95       	reti

00000872 <__vector_24>:
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	0f b6       	in	r0, 0x3f	; 63
     878:	0f 92       	push	r0
     87a:	11 24       	eor	r1, r1
     87c:	8f 93       	push	r24
     87e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     882:	8c 7f       	andi	r24, 0xFC	; 252
     884:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <i2c_status>
     888:	8f 91       	pop	r24
     88a:	0f 90       	pop	r0
     88c:	0f be       	out	0x3f, r0	; 63
     88e:	0f 90       	pop	r0
     890:	1f 90       	pop	r1
     892:	18 95       	reti

00000894 <init_state_timer>:
     894:	85 e0       	ldi	r24, 0x05	; 5
     896:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     89a:	86 e1       	ldi	r24, 0x16	; 22
     89c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     8a0:	8d e0       	ldi	r24, 0x0D	; 13
     8a2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     8a6:	82 e0       	ldi	r24, 0x02	; 2
     8a8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     8ac:	08 95       	ret

000008ae <load_i2c_data>:
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     8b6:	83 30       	cpi	r24, 0x03	; 3
     8b8:	09 f4       	brne	.+2      	; 0x8bc <load_i2c_data+0xe>
     8ba:	6b c1       	rjmp	.+726    	; 0xb92 <__stack+0x293>
     8bc:	38 f4       	brcc	.+14     	; 0x8cc <load_i2c_data+0x1e>
     8be:	81 30       	cpi	r24, 0x01	; 1
     8c0:	09 f4       	brne	.+2      	; 0x8c4 <load_i2c_data+0x16>
     8c2:	c3 c0       	rjmp	.+390    	; 0xa4a <__stack+0x14b>
     8c4:	82 30       	cpi	r24, 0x02	; 2
     8c6:	09 f4       	brne	.+2      	; 0x8ca <load_i2c_data+0x1c>
     8c8:	18 c1       	rjmp	.+560    	; 0xafa <__stack+0x1fb>
     8ca:	ae c1       	rjmp	.+860    	; 0xc28 <__stack+0x329>
     8cc:	85 30       	cpi	r24, 0x05	; 5
     8ce:	09 f4       	brne	.+2      	; 0x8d2 <load_i2c_data+0x24>
     8d0:	42 c0       	rjmp	.+132    	; 0x956 <__stack+0x57>
     8d2:	20 f0       	brcs	.+8      	; 0x8dc <load_i2c_data+0x2e>
     8d4:	86 30       	cpi	r24, 0x06	; 6
     8d6:	09 f4       	brne	.+2      	; 0x8da <load_i2c_data+0x2c>
     8d8:	7b c0       	rjmp	.+246    	; 0x9d0 <__stack+0xd1>
     8da:	a6 c1       	rjmp	.+844    	; 0xc28 <__stack+0x329>
     8dc:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     8e0:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     8e4:	97 e0       	ldi	r25, 0x07	; 7
     8e6:	e9 9f       	mul	r30, r25
     8e8:	f0 01       	movw	r30, r0
     8ea:	11 24       	eor	r1, r1
     8ec:	ee 50       	subi	r30, 0x0E	; 14
     8ee:	fd 4f       	sbci	r31, 0xFD	; 253
     8f0:	e8 0f       	add	r30, r24
     8f2:	f1 1d       	adc	r31, r1
     8f4:	80 81       	ld	r24, Z
     8f6:	88 23       	and	r24, r24
     8f8:	61 f0       	breq	.+24     	; 0x912 <__stack+0x13>
     8fa:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     8fe:	f0 e0       	ldi	r31, 0x00	; 0
     900:	ee 0f       	add	r30, r30
     902:	ff 1f       	adc	r31, r31
     904:	e9 59       	subi	r30, 0x99	; 153
     906:	fd 4f       	sbci	r31, 0xFD	; 253
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	9f ef       	ldi	r25, 0xFF	; 255
     90c:	91 83       	std	Z+1, r25	; 0x01
     90e:	80 83       	st	Z, r24
     910:	8b c1       	rjmp	.+790    	; 0xc28 <__stack+0x329>
     912:	ea ee       	ldi	r30, 0xEA	; 234
     914:	f2 e0       	ldi	r31, 0x02	; 2
     916:	80 81       	ld	r24, Z
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	98 2f       	mov	r25, r24
     91c:	88 27       	eor	r24, r24
     91e:	21 81       	ldd	r18, Z+1	; 0x01
     920:	82 2b       	or	r24, r18
     922:	87 ff       	sbrs	r24, 7
     924:	08 c0       	rjmp	.+16     	; 0x936 <__stack+0x37>
     926:	96 95       	lsr	r25
     928:	87 95       	ror	r24
     92a:	96 95       	lsr	r25
     92c:	87 95       	ror	r24
     92e:	96 95       	lsr	r25
     930:	87 95       	ror	r24
     932:	80 6e       	ori	r24, 0xE0	; 224
     934:	06 c0       	rjmp	.+12     	; 0x942 <__stack+0x43>
     936:	96 95       	lsr	r25
     938:	87 95       	ror	r24
     93a:	96 95       	lsr	r25
     93c:	87 95       	ror	r24
     93e:	96 95       	lsr	r25
     940:	87 95       	ror	r24
     942:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     946:	f0 e0       	ldi	r31, 0x00	; 0
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	e9 59       	subi	r30, 0x99	; 153
     94e:	fd 4f       	sbci	r31, 0xFD	; 253
     950:	91 83       	std	Z+1, r25	; 0x01
     952:	80 83       	st	Z, r24
     954:	69 c1       	rjmp	.+722    	; 0xc28 <__stack+0x329>
     956:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     95a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     95e:	97 e0       	ldi	r25, 0x07	; 7
     960:	e9 9f       	mul	r30, r25
     962:	f0 01       	movw	r30, r0
     964:	11 24       	eor	r1, r1
     966:	ee 50       	subi	r30, 0x0E	; 14
     968:	fd 4f       	sbci	r31, 0xFD	; 253
     96a:	e8 0f       	add	r30, r24
     96c:	f1 1d       	adc	r31, r1
     96e:	80 81       	ld	r24, Z
     970:	88 23       	and	r24, r24
     972:	61 f0       	breq	.+24     	; 0x98c <__stack+0x8d>
     974:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     978:	f0 e0       	ldi	r31, 0x00	; 0
     97a:	ee 0f       	add	r30, r30
     97c:	ff 1f       	adc	r31, r31
     97e:	ea 57       	subi	r30, 0x7A	; 122
     980:	fd 4f       	sbci	r31, 0xFD	; 253
     982:	8f ef       	ldi	r24, 0xFF	; 255
     984:	9f ef       	ldi	r25, 0xFF	; 255
     986:	91 83       	std	Z+1, r25	; 0x01
     988:	80 83       	st	Z, r24
     98a:	4e c1       	rjmp	.+668    	; 0xc28 <__stack+0x329>
     98c:	ea ee       	ldi	r30, 0xEA	; 234
     98e:	f2 e0       	ldi	r31, 0x02	; 2
     990:	80 81       	ld	r24, Z
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	98 2f       	mov	r25, r24
     996:	88 27       	eor	r24, r24
     998:	21 81       	ldd	r18, Z+1	; 0x01
     99a:	82 2b       	or	r24, r18
     99c:	87 ff       	sbrs	r24, 7
     99e:	08 c0       	rjmp	.+16     	; 0x9b0 <__stack+0xb1>
     9a0:	96 95       	lsr	r25
     9a2:	87 95       	ror	r24
     9a4:	96 95       	lsr	r25
     9a6:	87 95       	ror	r24
     9a8:	96 95       	lsr	r25
     9aa:	87 95       	ror	r24
     9ac:	80 6e       	ori	r24, 0xE0	; 224
     9ae:	06 c0       	rjmp	.+12     	; 0x9bc <__stack+0xbd>
     9b0:	96 95       	lsr	r25
     9b2:	87 95       	ror	r24
     9b4:	96 95       	lsr	r25
     9b6:	87 95       	ror	r24
     9b8:	96 95       	lsr	r25
     9ba:	87 95       	ror	r24
     9bc:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     9c0:	f0 e0       	ldi	r31, 0x00	; 0
     9c2:	ee 0f       	add	r30, r30
     9c4:	ff 1f       	adc	r31, r31
     9c6:	ea 57       	subi	r30, 0x7A	; 122
     9c8:	fd 4f       	sbci	r31, 0xFD	; 253
     9ca:	91 83       	std	Z+1, r25	; 0x01
     9cc:	80 83       	st	Z, r24
     9ce:	2c c1       	rjmp	.+600    	; 0xc28 <__stack+0x329>
     9d0:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     9d4:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     9d8:	97 e0       	ldi	r25, 0x07	; 7
     9da:	e9 9f       	mul	r30, r25
     9dc:	f0 01       	movw	r30, r0
     9de:	11 24       	eor	r1, r1
     9e0:	ee 50       	subi	r30, 0x0E	; 14
     9e2:	fd 4f       	sbci	r31, 0xFD	; 253
     9e4:	e8 0f       	add	r30, r24
     9e6:	f1 1d       	adc	r31, r1
     9e8:	80 81       	ld	r24, Z
     9ea:	88 23       	and	r24, r24
     9ec:	61 f0       	breq	.+24     	; 0xa06 <__stack+0x107>
     9ee:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     9f2:	f0 e0       	ldi	r31, 0x00	; 0
     9f4:	ee 0f       	add	r30, r30
     9f6:	ff 1f       	adc	r31, r31
     9f8:	ec 51       	subi	r30, 0x1C	; 28
     9fa:	fe 4f       	sbci	r31, 0xFE	; 254
     9fc:	8f ef       	ldi	r24, 0xFF	; 255
     9fe:	9f ef       	ldi	r25, 0xFF	; 255
     a00:	91 83       	std	Z+1, r25	; 0x01
     a02:	80 83       	st	Z, r24
     a04:	11 c1       	rjmp	.+546    	; 0xc28 <__stack+0x329>
     a06:	ea ee       	ldi	r30, 0xEA	; 234
     a08:	f2 e0       	ldi	r31, 0x02	; 2
     a0a:	80 81       	ld	r24, Z
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	98 2f       	mov	r25, r24
     a10:	88 27       	eor	r24, r24
     a12:	21 81       	ldd	r18, Z+1	; 0x01
     a14:	82 2b       	or	r24, r18
     a16:	87 ff       	sbrs	r24, 7
     a18:	08 c0       	rjmp	.+16     	; 0xa2a <__stack+0x12b>
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	96 95       	lsr	r25
     a20:	87 95       	ror	r24
     a22:	96 95       	lsr	r25
     a24:	87 95       	ror	r24
     a26:	80 6e       	ori	r24, 0xE0	; 224
     a28:	06 c0       	rjmp	.+12     	; 0xa36 <__stack+0x137>
     a2a:	96 95       	lsr	r25
     a2c:	87 95       	ror	r24
     a2e:	96 95       	lsr	r25
     a30:	87 95       	ror	r24
     a32:	96 95       	lsr	r25
     a34:	87 95       	ror	r24
     a36:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	ee 0f       	add	r30, r30
     a3e:	ff 1f       	adc	r31, r31
     a40:	ec 51       	subi	r30, 0x1C	; 28
     a42:	fe 4f       	sbci	r31, 0xFE	; 254
     a44:	91 83       	std	Z+1, r25	; 0x01
     a46:	80 83       	st	Z, r24
     a48:	ef c0       	rjmp	.+478    	; 0xc28 <__stack+0x329>
     a4a:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     a4e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     a52:	97 e0       	ldi	r25, 0x07	; 7
     a54:	e9 9f       	mul	r30, r25
     a56:	f0 01       	movw	r30, r0
     a58:	11 24       	eor	r1, r1
     a5a:	ee 50       	subi	r30, 0x0E	; 14
     a5c:	fd 4f       	sbci	r31, 0xFD	; 253
     a5e:	e8 0f       	add	r30, r24
     a60:	f1 1d       	adc	r31, r1
     a62:	80 81       	ld	r24, Z
     a64:	88 23       	and	r24, r24
     a66:	89 f0       	breq	.+34     	; 0xa8a <__stack+0x18b>
     a68:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     a6c:	f0 e0       	ldi	r31, 0x00	; 0
     a6e:	ee 0f       	add	r30, r30
     a70:	ff 1f       	adc	r31, r31
     a72:	ee 0f       	add	r30, r30
     a74:	ff 1f       	adc	r31, r31
     a76:	e9 5e       	subi	r30, 0xE9	; 233
     a78:	fd 4f       	sbci	r31, 0xFD	; 253
     a7a:	8f ef       	ldi	r24, 0xFF	; 255
     a7c:	9f ef       	ldi	r25, 0xFF	; 255
     a7e:	dc 01       	movw	r26, r24
     a80:	80 83       	st	Z, r24
     a82:	91 83       	std	Z+1, r25	; 0x01
     a84:	a2 83       	std	Z+2, r26	; 0x02
     a86:	b3 83       	std	Z+3, r27	; 0x03
     a88:	cf c0       	rjmp	.+414    	; 0xc28 <__stack+0x329>
     a8a:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <history>
     a8e:	89 30       	cpi	r24, 0x09	; 9
     a90:	19 f4       	brne	.+6      	; 0xa98 <__stack+0x199>
     a92:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <history>
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <__stack+0x1a3>
     a98:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <history>
     a9c:	8f 5f       	subi	r24, 0xFF	; 255
     a9e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <history>
     aa2:	ea ee       	ldi	r30, 0xEA	; 234
     aa4:	f2 e0       	ldi	r31, 0x02	; 2
     aa6:	80 81       	ld	r24, Z
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	a0 e0       	ldi	r26, 0x00	; 0
     aac:	b0 e0       	ldi	r27, 0x00	; 0
     aae:	ba 2f       	mov	r27, r26
     ab0:	a9 2f       	mov	r26, r25
     ab2:	98 2f       	mov	r25, r24
     ab4:	88 27       	eor	r24, r24
     ab6:	21 81       	ldd	r18, Z+1	; 0x01
     ab8:	82 2b       	or	r24, r18
     aba:	88 0f       	add	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	aa 1f       	adc	r26, r26
     ac0:	bb 1f       	adc	r27, r27
     ac2:	88 0f       	add	r24, r24
     ac4:	99 1f       	adc	r25, r25
     ac6:	aa 1f       	adc	r26, r26
     ac8:	bb 1f       	adc	r27, r27
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	aa 1f       	adc	r26, r26
     ad0:	bb 1f       	adc	r27, r27
     ad2:	88 0f       	add	r24, r24
     ad4:	99 1f       	adc	r25, r25
     ad6:	aa 1f       	adc	r26, r26
     ad8:	bb 1f       	adc	r27, r27
     ada:	c0 91 ae 01 	lds	r28, 0x01AE	; 0x8001ae <history>
     ade:	d0 e0       	ldi	r29, 0x00	; 0
     ae0:	cc 0f       	add	r28, r28
     ae2:	dd 1f       	adc	r29, r29
     ae4:	cc 0f       	add	r28, r28
     ae6:	dd 1f       	adc	r29, r29
     ae8:	c9 5e       	subi	r28, 0xE9	; 233
     aea:	dd 4f       	sbci	r29, 0xFD	; 253
     aec:	22 81       	ldd	r18, Z+2	; 0x02
     aee:	82 2b       	or	r24, r18
     af0:	88 83       	st	Y, r24
     af2:	99 83       	std	Y+1, r25	; 0x01
     af4:	aa 83       	std	Y+2, r26	; 0x02
     af6:	bb 83       	std	Y+3, r27	; 0x03
     af8:	97 c0       	rjmp	.+302    	; 0xc28 <__stack+0x329>
     afa:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     afe:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     b02:	97 e0       	ldi	r25, 0x07	; 7
     b04:	e9 9f       	mul	r30, r25
     b06:	f0 01       	movw	r30, r0
     b08:	11 24       	eor	r1, r1
     b0a:	ee 50       	subi	r30, 0x0E	; 14
     b0c:	fd 4f       	sbci	r31, 0xFD	; 253
     b0e:	e8 0f       	add	r30, r24
     b10:	f1 1d       	adc	r31, r1
     b12:	80 81       	ld	r24, Z
     b14:	88 23       	and	r24, r24
     b16:	89 f0       	breq	.+34     	; 0xb3a <__stack+0x23b>
     b18:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	ee 0f       	add	r30, r30
     b20:	ff 1f       	adc	r31, r31
     b22:	ee 0f       	add	r30, r30
     b24:	ff 1f       	adc	r31, r31
     b26:	e6 56       	subi	r30, 0x66	; 102
     b28:	fd 4f       	sbci	r31, 0xFD	; 253
     b2a:	8f ef       	ldi	r24, 0xFF	; 255
     b2c:	9f ef       	ldi	r25, 0xFF	; 255
     b2e:	dc 01       	movw	r26, r24
     b30:	80 83       	st	Z, r24
     b32:	91 83       	std	Z+1, r25	; 0x01
     b34:	a2 83       	std	Z+2, r26	; 0x02
     b36:	b3 83       	std	Z+3, r27	; 0x03
     b38:	77 c0       	rjmp	.+238    	; 0xc28 <__stack+0x329>
     b3a:	ea ee       	ldi	r30, 0xEA	; 234
     b3c:	f2 e0       	ldi	r31, 0x02	; 2
     b3e:	80 81       	ld	r24, Z
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e0       	ldi	r26, 0x00	; 0
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	ba 2f       	mov	r27, r26
     b48:	a9 2f       	mov	r26, r25
     b4a:	98 2f       	mov	r25, r24
     b4c:	88 27       	eor	r24, r24
     b4e:	21 81       	ldd	r18, Z+1	; 0x01
     b50:	82 2b       	or	r24, r18
     b52:	88 0f       	add	r24, r24
     b54:	99 1f       	adc	r25, r25
     b56:	aa 1f       	adc	r26, r26
     b58:	bb 1f       	adc	r27, r27
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	aa 1f       	adc	r26, r26
     b60:	bb 1f       	adc	r27, r27
     b62:	88 0f       	add	r24, r24
     b64:	99 1f       	adc	r25, r25
     b66:	aa 1f       	adc	r26, r26
     b68:	bb 1f       	adc	r27, r27
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	aa 1f       	adc	r26, r26
     b70:	bb 1f       	adc	r27, r27
     b72:	c0 91 ae 01 	lds	r28, 0x01AE	; 0x8001ae <history>
     b76:	d0 e0       	ldi	r29, 0x00	; 0
     b78:	cc 0f       	add	r28, r28
     b7a:	dd 1f       	adc	r29, r29
     b7c:	cc 0f       	add	r28, r28
     b7e:	dd 1f       	adc	r29, r29
     b80:	c6 56       	subi	r28, 0x66	; 102
     b82:	dd 4f       	sbci	r29, 0xFD	; 253
     b84:	22 81       	ldd	r18, Z+2	; 0x02
     b86:	82 2b       	or	r24, r18
     b88:	88 83       	st	Y, r24
     b8a:	99 83       	std	Y+1, r25	; 0x01
     b8c:	aa 83       	std	Y+2, r26	; 0x02
     b8e:	bb 83       	std	Y+3, r27	; 0x03
     b90:	4b c0       	rjmp	.+150    	; 0xc28 <__stack+0x329>
     b92:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     b96:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     b9a:	97 e0       	ldi	r25, 0x07	; 7
     b9c:	e9 9f       	mul	r30, r25
     b9e:	f0 01       	movw	r30, r0
     ba0:	11 24       	eor	r1, r1
     ba2:	ee 50       	subi	r30, 0x0E	; 14
     ba4:	fd 4f       	sbci	r31, 0xFD	; 253
     ba6:	e8 0f       	add	r30, r24
     ba8:	f1 1d       	adc	r31, r1
     baa:	80 81       	ld	r24, Z
     bac:	88 23       	and	r24, r24
     bae:	89 f0       	breq	.+34     	; 0xbd2 <__stack+0x2d3>
     bb0:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	ee 0f       	add	r30, r30
     bb8:	ff 1f       	adc	r31, r31
     bba:	ee 0f       	add	r30, r30
     bbc:	ff 1f       	adc	r31, r31
     bbe:	ee 53       	subi	r30, 0x3E	; 62
     bc0:	fd 4f       	sbci	r31, 0xFD	; 253
     bc2:	8f ef       	ldi	r24, 0xFF	; 255
     bc4:	9f ef       	ldi	r25, 0xFF	; 255
     bc6:	dc 01       	movw	r26, r24
     bc8:	80 83       	st	Z, r24
     bca:	91 83       	std	Z+1, r25	; 0x01
     bcc:	a2 83       	std	Z+2, r26	; 0x02
     bce:	b3 83       	std	Z+3, r27	; 0x03
     bd0:	2b c0       	rjmp	.+86     	; 0xc28 <__stack+0x329>
     bd2:	ea ee       	ldi	r30, 0xEA	; 234
     bd4:	f2 e0       	ldi	r31, 0x02	; 2
     bd6:	80 81       	ld	r24, Z
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	a0 e0       	ldi	r26, 0x00	; 0
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	ba 2f       	mov	r27, r26
     be0:	a9 2f       	mov	r26, r25
     be2:	98 2f       	mov	r25, r24
     be4:	88 27       	eor	r24, r24
     be6:	21 81       	ldd	r18, Z+1	; 0x01
     be8:	82 2b       	or	r24, r18
     bea:	88 0f       	add	r24, r24
     bec:	99 1f       	adc	r25, r25
     bee:	aa 1f       	adc	r26, r26
     bf0:	bb 1f       	adc	r27, r27
     bf2:	88 0f       	add	r24, r24
     bf4:	99 1f       	adc	r25, r25
     bf6:	aa 1f       	adc	r26, r26
     bf8:	bb 1f       	adc	r27, r27
     bfa:	88 0f       	add	r24, r24
     bfc:	99 1f       	adc	r25, r25
     bfe:	aa 1f       	adc	r26, r26
     c00:	bb 1f       	adc	r27, r27
     c02:	88 0f       	add	r24, r24
     c04:	99 1f       	adc	r25, r25
     c06:	aa 1f       	adc	r26, r26
     c08:	bb 1f       	adc	r27, r27
     c0a:	c0 91 ae 01 	lds	r28, 0x01AE	; 0x8001ae <history>
     c0e:	d0 e0       	ldi	r29, 0x00	; 0
     c10:	cc 0f       	add	r28, r28
     c12:	dd 1f       	adc	r29, r29
     c14:	cc 0f       	add	r28, r28
     c16:	dd 1f       	adc	r29, r29
     c18:	ce 53       	subi	r28, 0x3E	; 62
     c1a:	dd 4f       	sbci	r29, 0xFD	; 253
     c1c:	22 81       	ldd	r18, Z+2	; 0x02
     c1e:	82 2b       	or	r24, r18
     c20:	88 83       	st	Y, r24
     c22:	99 83       	std	Y+1, r25	; 0x01
     c24:	aa 83       	std	Y+2, r26	; 0x02
     c26:	bb 83       	std	Y+3, r27	; 0x03
     c28:	df 91       	pop	r29
     c2a:	cf 91       	pop	r28
     c2c:	08 95       	ret

00000c2e <i2c_write>:
     c2e:	cf 93       	push	r28
     c30:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c34:	c9 2f       	mov	r28, r25
     c36:	c4 70       	andi	r28, 0x04	; 4
     c38:	92 ff       	sbrs	r25, 2
     c3a:	c5 c0       	rjmp	.+394    	; 0xdc6 <i2c_write+0x198>
     c3c:	c0 91 a8 01 	lds	r28, 0x01A8	; 0x8001a8 <i2c_status>
     c40:	c8 31       	cpi	r28, 0x18	; 24
     c42:	09 f1       	breq	.+66     	; 0xc86 <i2c_write+0x58>
     c44:	28 f4       	brcc	.+10     	; 0xc50 <i2c_write+0x22>
     c46:	c8 30       	cpi	r28, 0x08	; 8
     c48:	61 f0       	breq	.+24     	; 0xc62 <i2c_write+0x34>
     c4a:	c0 31       	cpi	r28, 0x10	; 16
     c4c:	99 f0       	breq	.+38     	; 0xc74 <i2c_write+0x46>
     c4e:	ba c0       	rjmp	.+372    	; 0xdc4 <i2c_write+0x196>
     c50:	c8 32       	cpi	r28, 0x28	; 40
     c52:	e9 f1       	breq	.+122    	; 0xcce <i2c_write+0xa0>
     c54:	c0 33       	cpi	r28, 0x30	; 48
     c56:	09 f4       	brne	.+2      	; 0xc5a <i2c_write+0x2c>
     c58:	82 c0       	rjmp	.+260    	; 0xd5e <i2c_write+0x130>
     c5a:	c0 32       	cpi	r28, 0x20	; 32
     c5c:	09 f0       	breq	.+2      	; 0xc60 <i2c_write+0x32>
     c5e:	b2 c0       	rjmp	.+356    	; 0xdc4 <i2c_write+0x196>
     c60:	21 c0       	rjmp	.+66     	; 0xca4 <i2c_write+0x76>
     c62:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     c66:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c6a:	85 e8       	ldi	r24, 0x85	; 133
     c6c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c70:	c0 e0       	ldi	r28, 0x00	; 0
     c72:	a9 c0       	rjmp	.+338    	; 0xdc6 <i2c_write+0x198>
     c74:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     c78:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c7c:	85 e8       	ldi	r24, 0x85	; 133
     c7e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     c82:	c0 e0       	ldi	r28, 0x00	; 0
     c84:	a0 c0       	rjmp	.+320    	; 0xdc6 <i2c_write+0x198>
     c86:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <nack_count>
     c8a:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <__data_end>
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	e6 51       	subi	r30, 0x16	; 22
     c92:	fd 4f       	sbci	r31, 0xFD	; 253
     c94:	80 81       	ld	r24, Z
     c96:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     c9a:	85 e8       	ldi	r24, 0x85	; 133
     c9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     ca0:	c0 e0       	ldi	r28, 0x00	; 0
     ca2:	91 c0       	rjmp	.+290    	; 0xdc6 <i2c_write+0x198>
     ca4:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <nack_count>
     ca8:	9f 5f       	subi	r25, 0xFF	; 255
     caa:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <nack_count>
     cae:	9b 30       	cpi	r25, 0x0B	; 11
     cb0:	38 f0       	brcs	.+14     	; 0xcc0 <i2c_write+0x92>
     cb2:	82 e0       	ldi	r24, 0x02	; 2
     cb4:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <write_done>
     cb8:	85 e9       	ldi	r24, 0x95	; 149
     cba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cbe:	83 c0       	rjmp	.+262    	; 0xdc6 <i2c_write+0x198>
     cc0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     cc4:	85 e8       	ldi	r24, 0x85	; 133
     cc6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cca:	c0 e0       	ldi	r28, 0x00	; 0
     ccc:	7c c0       	rjmp	.+248    	; 0xdc6 <i2c_write+0x198>
     cce:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <nack_count>
     cd2:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <__data_end>
     cd6:	2e 2f       	mov	r18, r30
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	2f 5f       	subi	r18, 0xFF	; 255
     cdc:	3f 4f       	sbci	r19, 0xFF	; 255
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	26 17       	cp	r18, r22
     ce2:	37 07       	cpc	r19, r23
     ce4:	74 f4       	brge	.+28     	; 0xd02 <i2c_write+0xd4>
     ce6:	ef 5f       	subi	r30, 0xFF	; 255
     ce8:	e0 93 a0 01 	sts	0x01A0, r30	; 0x8001a0 <__data_end>
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	e6 51       	subi	r30, 0x16	; 22
     cf0:	fd 4f       	sbci	r31, 0xFD	; 253
     cf2:	80 81       	ld	r24, Z
     cf4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     cf8:	85 e8       	ldi	r24, 0x85	; 133
     cfa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     cfe:	c0 e0       	ldi	r28, 0x00	; 0
     d00:	62 c0       	rjmp	.+196    	; 0xdc6 <i2c_write+0x198>
     d02:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     d06:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <state>
     d0a:	94 30       	cpi	r25, 0x04	; 4
     d0c:	00 f5       	brcc	.+64     	; 0xd4e <i2c_write+0x120>
     d0e:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <state>
     d12:	99 23       	and	r25, r25
     d14:	e1 f0       	breq	.+56     	; 0xd4e <i2c_write+0x120>
     d16:	80 3e       	cpi	r24, 0xE0	; 224
     d18:	71 f4       	brne	.+28     	; 0xd36 <i2c_write+0x108>
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <MPL_WRITE>
     d20:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <MPL_READ>
     d24:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <TCA_WRITE>
     d28:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <write_done>
     d2c:	85 e9       	ldi	r24, 0x95	; 149
     d2e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d32:	c0 e0       	ldi	r28, 0x00	; 0
     d34:	48 c0       	rjmp	.+144    	; 0xdc6 <i2c_write+0x198>
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <MPL_READ>
     d3c:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <MPL_WRITE>
     d40:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <write_done>
     d44:	85 ea       	ldi	r24, 0xA5	; 165
     d46:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d4a:	c0 e0       	ldi	r28, 0x00	; 0
     d4c:	3c c0       	rjmp	.+120    	; 0xdc6 <i2c_write+0x198>
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <write_done>
     d54:	85 e9       	ldi	r24, 0x95	; 149
     d56:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d5a:	c0 e0       	ldi	r28, 0x00	; 0
     d5c:	34 c0       	rjmp	.+104    	; 0xdc6 <i2c_write+0x198>
     d5e:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <nack_count>
     d62:	8f 5f       	subi	r24, 0xFF	; 255
     d64:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <nack_count>
     d68:	8b 30       	cpi	r24, 0x0B	; 11
     d6a:	f8 f0       	brcs	.+62     	; 0xdaa <i2c_write+0x17c>
     d6c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     d70:	1f 92       	push	r1
     d72:	8f 93       	push	r24
     d74:	87 e1       	ldi	r24, 0x17	; 23
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	9f 93       	push	r25
     d7a:	8f 93       	push	r24
     d7c:	82 eb       	ldi	r24, 0xB2	; 178
     d7e:	91 e0       	ldi	r25, 0x01	; 1
     d80:	9f 93       	push	r25
     d82:	8f 93       	push	r24
     d84:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
     d88:	82 eb       	ldi	r24, 0xB2	; 178
     d8a:	91 e0       	ldi	r25, 0x01	; 1
     d8c:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
     d90:	82 e0       	ldi	r24, 0x02	; 2
     d92:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <write_done>
     d96:	85 e9       	ldi	r24, 0x95	; 149
     d98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d9c:	0f 90       	pop	r0
     d9e:	0f 90       	pop	r0
     da0:	0f 90       	pop	r0
     da2:	0f 90       	pop	r0
     da4:	0f 90       	pop	r0
     da6:	0f 90       	pop	r0
     da8:	0e c0       	rjmp	.+28     	; 0xdc6 <i2c_write+0x198>
     daa:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <__data_end>
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	e6 51       	subi	r30, 0x16	; 22
     db2:	fd 4f       	sbci	r31, 0xFD	; 253
     db4:	80 81       	ld	r24, Z
     db6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     dba:	85 e8       	ldi	r24, 0x85	; 133
     dbc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dc0:	c0 e0       	ldi	r28, 0x00	; 0
     dc2:	01 c0       	rjmp	.+2      	; 0xdc6 <i2c_write+0x198>
     dc4:	c0 e0       	ldi	r28, 0x00	; 0
     dc6:	8c 2f       	mov	r24, r28
     dc8:	cf 91       	pop	r28
     dca:	08 95       	ret

00000dcc <i2c_read>:
     dcc:	28 2f       	mov	r18, r24
     dce:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dd2:	89 2f       	mov	r24, r25
     dd4:	84 70       	andi	r24, 0x04	; 4
     dd6:	92 ff       	sbrs	r25, 2
     dd8:	7d c0       	rjmp	.+250    	; 0xed4 <i2c_read+0x108>
     dda:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <i2c_status>
     dde:	90 34       	cpi	r25, 0x40	; 64
     de0:	09 f1       	breq	.+66     	; 0xe24 <i2c_read+0x58>
     de2:	28 f4       	brcc	.+10     	; 0xdee <i2c_read+0x22>
     de4:	98 30       	cpi	r25, 0x08	; 8
     de6:	61 f0       	breq	.+24     	; 0xe00 <i2c_read+0x34>
     de8:	90 31       	cpi	r25, 0x10	; 16
     dea:	99 f0       	breq	.+38     	; 0xe12 <i2c_read+0x46>
     dec:	72 c0       	rjmp	.+228    	; 0xed2 <i2c_read+0x106>
     dee:	90 35       	cpi	r25, 0x50	; 80
     df0:	e1 f1       	breq	.+120    	; 0xe6a <i2c_read+0x9e>
     df2:	98 35       	cpi	r25, 0x58	; 88
     df4:	09 f4       	brne	.+2      	; 0xdf8 <i2c_read+0x2c>
     df6:	5f c0       	rjmp	.+190    	; 0xeb6 <i2c_read+0xea>
     df8:	98 34       	cpi	r25, 0x48	; 72
     dfa:	09 f0       	breq	.+2      	; 0xdfe <i2c_read+0x32>
     dfc:	6a c0       	rjmp	.+212    	; 0xed2 <i2c_read+0x106>
     dfe:	21 c0       	rjmp	.+66     	; 0xe42 <i2c_read+0x76>
     e00:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     e04:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e08:	85 e8       	ldi	r24, 0x85	; 133
     e0a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	08 95       	ret
     e12:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     e16:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e1a:	85 e8       	ldi	r24, 0x85	; 133
     e1c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e20:	80 e0       	ldi	r24, 0x00	; 0
     e22:	08 95       	ret
     e24:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <nack_count>
     e28:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <busy>
     e2c:	88 23       	and	r24, r24
     e2e:	29 f0       	breq	.+10     	; 0xe3a <i2c_read+0x6e>
     e30:	85 e8       	ldi	r24, 0x85	; 133
     e32:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	08 95       	ret
     e3a:	95 ec       	ldi	r25, 0xC5	; 197
     e3c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e40:	08 95       	ret
     e42:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <nack_count>
     e46:	8f 5f       	subi	r24, 0xFF	; 255
     e48:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <nack_count>
     e4c:	8b 30       	cpi	r24, 0x0B	; 11
     e4e:	40 f0       	brcs	.+16     	; 0xe60 <i2c_read+0x94>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <read_done>
     e56:	85 e9       	ldi	r24, 0x95	; 149
     e58:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e5c:	80 e4       	ldi	r24, 0x40	; 64
     e5e:	08 95       	ret
     e60:	85 ea       	ldi	r24, 0xA5	; 165
     e62:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	08 95       	ret
     e6a:	20 91 a0 01 	lds	r18, 0x01A0	; 0x8001a0 <__data_end>
     e6e:	82 2f       	mov	r24, r18
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	ac 01       	movw	r20, r24
     e74:	4f 5f       	subi	r20, 0xFF	; 255
     e76:	5f 4f       	sbci	r21, 0xFF	; 255
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	46 17       	cp	r20, r22
     e7c:	57 07       	cpc	r21, r23
     e7e:	74 f4       	brge	.+28     	; 0xe9c <i2c_read+0xd0>
     e80:	30 91 bb 00 	lds	r19, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     e84:	fc 01       	movw	r30, r24
     e86:	e6 51       	subi	r30, 0x16	; 22
     e88:	fd 4f       	sbci	r31, 0xFD	; 253
     e8a:	30 83       	st	Z, r19
     e8c:	2f 5f       	subi	r18, 0xFF	; 255
     e8e:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <__data_end>
     e92:	85 ec       	ldi	r24, 0xC5	; 197
     e94:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	08 95       	ret
     e9c:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     ea0:	fc 01       	movw	r30, r24
     ea2:	e6 51       	subi	r30, 0x16	; 22
     ea4:	fd 4f       	sbci	r31, 0xFD	; 253
     ea6:	20 83       	st	Z, r18
     ea8:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     eac:	85 e8       	ldi	r24, 0x85	; 133
     eae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	08 95       	ret
     eb6:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <__data_end>
     eba:	f8 94       	cli
     ebc:	0e 94 57 04 	call	0x8ae	; 0x8ae <load_i2c_data>
     ec0:	78 94       	sei
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <read_done>
     ec8:	85 e9       	ldi	r24, 0x95	; 149
     eca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     ece:	80 e0       	ldi	r24, 0x00	; 0
     ed0:	08 95       	ret
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	08 95       	ret

00000ed6 <init_i2c>:
     ed6:	e9 eb       	ldi	r30, 0xB9	; 185
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	80 81       	ld	r24, Z
     edc:	81 60       	ori	r24, 0x01	; 1
     ede:	80 83       	st	Z, r24
     ee0:	83 e0       	ldi	r24, 0x03	; 3
     ee2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     ee6:	85 ea       	ldi	r24, 0xA5	; 165
     ee8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     eec:	08 95       	ret

00000eee <__vector_11>:
     eee:	1f 92       	push	r1
     ef0:	0f 92       	push	r0
     ef2:	0f b6       	in	r0, 0x3f	; 63
     ef4:	0f 92       	push	r0
     ef6:	11 24       	eor	r1, r1
     ef8:	2f 93       	push	r18
     efa:	3f 93       	push	r19
     efc:	4f 93       	push	r20
     efe:	5f 93       	push	r21
     f00:	6f 93       	push	r22
     f02:	7f 93       	push	r23
     f04:	8f 93       	push	r24
     f06:	9f 93       	push	r25
     f08:	af 93       	push	r26
     f0a:	bf 93       	push	r27
     f0c:	ef 93       	push	r30
     f0e:	ff 93       	push	r31
     f10:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <end_state>
     f14:	88 23       	and	r24, r24
     f16:	09 f4       	brne	.+2      	; 0xf1a <__vector_11+0x2c>
     f18:	55 c0       	rjmp	.+170    	; 0xfc4 <__vector_11+0xd6>
     f1a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     f1e:	1f 92       	push	r1
     f20:	8f 93       	push	r24
     f22:	85 e2       	ldi	r24, 0x25	; 37
     f24:	91 e0       	ldi	r25, 0x01	; 1
     f26:	9f 93       	push	r25
     f28:	8f 93       	push	r24
     f2a:	82 eb       	ldi	r24, 0xB2	; 178
     f2c:	91 e0       	ldi	r25, 0x01	; 1
     f2e:	9f 93       	push	r25
     f30:	8f 93       	push	r24
     f32:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
     f36:	82 eb       	ldi	r24, 0xB2	; 178
     f38:	91 e0       	ldi	r25, 0x01	; 1
     f3a:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
     f3e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     f42:	0f 90       	pop	r0
     f44:	0f 90       	pop	r0
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	86 30       	cpi	r24, 0x06	; 6
     f50:	e0 f4       	brcc	.+56     	; 0xf8a <__vector_11+0x9c>
     f52:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     f56:	8f 5f       	subi	r24, 0xFF	; 255
     f58:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <state>
     f5c:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <MPL_READ>
     f60:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <MPL_WRITE>
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <TCA_WRITE>
     f6a:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     f6e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     f72:	97 e0       	ldi	r25, 0x07	; 7
     f74:	e9 9f       	mul	r30, r25
     f76:	f0 01       	movw	r30, r0
     f78:	11 24       	eor	r1, r1
     f7a:	ee 50       	subi	r30, 0x0E	; 14
     f7c:	fd 4f       	sbci	r31, 0xFD	; 253
     f7e:	e8 0f       	add	r30, r24
     f80:	f1 1d       	adc	r31, r1
     f82:	10 82       	st	Z, r1
     f84:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     f88:	18 c0       	rjmp	.+48     	; 0xfba <__vector_11+0xcc>
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <state>
     f90:	10 92 af 01 	sts	0x01AF, r1	; 0x8001af <MPL_READ>
     f94:	10 92 b0 01 	sts	0x01B0, r1	; 0x8001b0 <MPL_WRITE>
     f98:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <TCA_WRITE>
     f9c:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
     fa0:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
     fa4:	97 e0       	ldi	r25, 0x07	; 7
     fa6:	e9 9f       	mul	r30, r25
     fa8:	f0 01       	movw	r30, r0
     faa:	11 24       	eor	r1, r1
     fac:	ee 50       	subi	r30, 0x0E	; 14
     fae:	fd 4f       	sbci	r31, 0xFD	; 253
     fb0:	e8 0f       	add	r30, r24
     fb2:	f1 1d       	adc	r31, r1
     fb4:	10 82       	st	Z, r1
     fb6:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     fba:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <end_state>
     fbe:	81 e0       	ldi	r24, 0x01	; 1
     fc0:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state_ready>
     fc4:	ff 91       	pop	r31
     fc6:	ef 91       	pop	r30
     fc8:	bf 91       	pop	r27
     fca:	af 91       	pop	r26
     fcc:	9f 91       	pop	r25
     fce:	8f 91       	pop	r24
     fd0:	7f 91       	pop	r23
     fd2:	6f 91       	pop	r22
     fd4:	5f 91       	pop	r21
     fd6:	4f 91       	pop	r20
     fd8:	3f 91       	pop	r19
     fda:	2f 91       	pop	r18
     fdc:	0f 90       	pop	r0
     fde:	0f be       	out	0x3f, r0	; 63
     fe0:	0f 90       	pop	r0
     fe2:	1f 90       	pop	r1
     fe4:	18 95       	reti

00000fe6 <init_int_press>:
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
     fee:	84 e0       	ldi	r24, 0x04	; 4
     ff0:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
     ff4:	cc eb       	ldi	r28, 0xBC	; 188
     ff6:	d0 e0       	ldi	r29, 0x00	; 0
     ff8:	07 c0       	rjmp	.+14     	; 0x1008 <init_int_press+0x22>
     ffa:	88 81       	ld	r24, Y
     ffc:	88 23       	and	r24, r24
     ffe:	34 f4       	brge	.+12     	; 0x100c <init_int_press+0x26>
    1000:	61 e0       	ldi	r22, 0x01	; 1
    1002:	80 ee       	ldi	r24, 0xE0	; 224
    1004:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    1008:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    100c:	91 30       	cpi	r25, 0x01	; 1
    100e:	a9 f7       	brne	.-22     	; 0xffa <init_int_press+0x14>
    1010:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    1014:	1f 92       	push	r1
    1016:	8f 93       	push	r24
    1018:	84 e3       	ldi	r24, 0x34	; 52
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	9f 93       	push	r25
    101e:	8f 93       	push	r24
    1020:	82 eb       	ldi	r24, 0xB2	; 178
    1022:	91 e0       	ldi	r25, 0x01	; 1
    1024:	9f 93       	push	r25
    1026:	8f 93       	push	r24
    1028:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    102c:	82 eb       	ldi	r24, 0xB2	; 178
    102e:	91 e0       	ldi	r25, 0x01	; 1
    1030:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    1034:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    1038:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    103c:	ea ee       	ldi	r30, 0xEA	; 234
    103e:	f2 e0       	ldi	r31, 0x02	; 2
    1040:	86 e2       	ldi	r24, 0x26	; 38
    1042:	80 83       	st	Z, r24
    1044:	89 e3       	ldi	r24, 0x39	; 57
    1046:	81 83       	std	Z+1, r24	; 0x01
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	0f 90       	pop	r0
    1052:	0f 90       	pop	r0
    1054:	cc eb       	ldi	r28, 0xBC	; 188
    1056:	d0 e0       	ldi	r29, 0x00	; 0
    1058:	07 c0       	rjmp	.+14     	; 0x1068 <init_int_press+0x82>
    105a:	88 81       	ld	r24, Y
    105c:	88 23       	and	r24, r24
    105e:	34 f4       	brge	.+12     	; 0x106c <init_int_press+0x86>
    1060:	62 e0       	ldi	r22, 0x02	; 2
    1062:	80 ec       	ldi	r24, 0xC0	; 192
    1064:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    1068:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    106c:	91 30       	cpi	r25, 0x01	; 1
    106e:	a9 f7       	brne	.-22     	; 0x105a <init_int_press+0x74>
    1070:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    1074:	1f 92       	push	r1
    1076:	8f 93       	push	r24
    1078:	88 e4       	ldi	r24, 0x48	; 72
    107a:	91 e0       	ldi	r25, 0x01	; 1
    107c:	9f 93       	push	r25
    107e:	8f 93       	push	r24
    1080:	82 eb       	ldi	r24, 0xB2	; 178
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	9f 93       	push	r25
    1086:	8f 93       	push	r24
    1088:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    108c:	82 eb       	ldi	r24, 0xB2	; 178
    108e:	91 e0       	ldi	r25, 0x01	; 1
    1090:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    1094:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    1098:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    109c:	85 e0       	ldi	r24, 0x05	; 5
    109e:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	cc eb       	ldi	r28, 0xBC	; 188
    10b0:	d0 e0       	ldi	r29, 0x00	; 0
    10b2:	07 c0       	rjmp	.+14     	; 0x10c2 <init_int_press+0xdc>
    10b4:	88 81       	ld	r24, Y
    10b6:	88 23       	and	r24, r24
    10b8:	34 f4       	brge	.+12     	; 0x10c6 <init_int_press+0xe0>
    10ba:	61 e0       	ldi	r22, 0x01	; 1
    10bc:	80 ee       	ldi	r24, 0xE0	; 224
    10be:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    10c2:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    10c6:	91 30       	cpi	r25, 0x01	; 1
    10c8:	a9 f7       	brne	.-22     	; 0x10b4 <init_int_press+0xce>
    10ca:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    10ce:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    10d2:	1f 92       	push	r1
    10d4:	8f 93       	push	r24
    10d6:	84 e3       	ldi	r24, 0x34	; 52
    10d8:	91 e0       	ldi	r25, 0x01	; 1
    10da:	9f 93       	push	r25
    10dc:	8f 93       	push	r24
    10de:	82 eb       	ldi	r24, 0xB2	; 178
    10e0:	91 e0       	ldi	r25, 0x01	; 1
    10e2:	9f 93       	push	r25
    10e4:	8f 93       	push	r24
    10e6:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    10ea:	82 eb       	ldi	r24, 0xB2	; 178
    10ec:	91 e0       	ldi	r25, 0x01	; 1
    10ee:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    10f2:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    10f6:	ea ee       	ldi	r30, 0xEA	; 234
    10f8:	f2 e0       	ldi	r31, 0x02	; 2
    10fa:	86 e2       	ldi	r24, 0x26	; 38
    10fc:	80 83       	st	Z, r24
    10fe:	89 e3       	ldi	r24, 0x39	; 57
    1100:	81 83       	std	Z+1, r24	; 0x01
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	cc eb       	ldi	r28, 0xBC	; 188
    1110:	d0 e0       	ldi	r29, 0x00	; 0
    1112:	07 c0       	rjmp	.+14     	; 0x1122 <init_int_press+0x13c>
    1114:	88 81       	ld	r24, Y
    1116:	88 23       	and	r24, r24
    1118:	34 f4       	brge	.+12     	; 0x1126 <init_int_press+0x140>
    111a:	62 e0       	ldi	r22, 0x02	; 2
    111c:	80 ec       	ldi	r24, 0xC0	; 192
    111e:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    1122:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    1126:	91 30       	cpi	r25, 0x01	; 1
    1128:	a9 f7       	brne	.-22     	; 0x1114 <init_int_press+0x12e>
    112a:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    112e:	1f 92       	push	r1
    1130:	8f 93       	push	r24
    1132:	88 e4       	ldi	r24, 0x48	; 72
    1134:	91 e0       	ldi	r25, 0x01	; 1
    1136:	9f 93       	push	r25
    1138:	8f 93       	push	r24
    113a:	82 eb       	ldi	r24, 0xB2	; 178
    113c:	91 e0       	ldi	r25, 0x01	; 1
    113e:	9f 93       	push	r25
    1140:	8f 93       	push	r24
    1142:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    1146:	82 eb       	ldi	r24, 0xB2	; 178
    1148:	91 e0       	ldi	r25, 0x01	; 1
    114a:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    114e:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    1152:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    1156:	86 e0       	ldi	r24, 0x06	; 6
    1158:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
    115c:	0f 90       	pop	r0
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	0f 90       	pop	r0
    1166:	0f 90       	pop	r0
    1168:	cc eb       	ldi	r28, 0xBC	; 188
    116a:	d0 e0       	ldi	r29, 0x00	; 0
    116c:	07 c0       	rjmp	.+14     	; 0x117c <init_int_press+0x196>
    116e:	88 81       	ld	r24, Y
    1170:	88 23       	and	r24, r24
    1172:	34 f4       	brge	.+12     	; 0x1180 <init_int_press+0x19a>
    1174:	61 e0       	ldi	r22, 0x01	; 1
    1176:	80 ee       	ldi	r24, 0xE0	; 224
    1178:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    117c:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    1180:	91 30       	cpi	r25, 0x01	; 1
    1182:	a9 f7       	brne	.-22     	; 0x116e <init_int_press+0x188>
    1184:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    1188:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    118c:	1f 92       	push	r1
    118e:	8f 93       	push	r24
    1190:	8c e5       	ldi	r24, 0x5C	; 92
    1192:	91 e0       	ldi	r25, 0x01	; 1
    1194:	9f 93       	push	r25
    1196:	8f 93       	push	r24
    1198:	82 eb       	ldi	r24, 0xB2	; 178
    119a:	91 e0       	ldi	r25, 0x01	; 1
    119c:	9f 93       	push	r25
    119e:	8f 93       	push	r24
    11a0:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    11a4:	82 eb       	ldi	r24, 0xB2	; 178
    11a6:	91 e0       	ldi	r25, 0x01	; 1
    11a8:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    11ac:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    11b0:	ea ee       	ldi	r30, 0xEA	; 234
    11b2:	f2 e0       	ldi	r31, 0x02	; 2
    11b4:	86 e2       	ldi	r24, 0x26	; 38
    11b6:	80 83       	st	Z, r24
    11b8:	89 e3       	ldi	r24, 0x39	; 57
    11ba:	81 83       	std	Z+1, r24	; 0x01
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	0f 90       	pop	r0
    11c6:	0f 90       	pop	r0
    11c8:	cc eb       	ldi	r28, 0xBC	; 188
    11ca:	d0 e0       	ldi	r29, 0x00	; 0
    11cc:	07 c0       	rjmp	.+14     	; 0x11dc <init_int_press+0x1f6>
    11ce:	88 81       	ld	r24, Y
    11d0:	88 23       	and	r24, r24
    11d2:	34 f4       	brge	.+12     	; 0x11e0 <init_int_press+0x1fa>
    11d4:	62 e0       	ldi	r22, 0x02	; 2
    11d6:	80 ec       	ldi	r24, 0xC0	; 192
    11d8:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
    11dc:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <write_done>
    11e0:	91 30       	cpi	r25, 0x01	; 1
    11e2:	a9 f7       	brne	.-22     	; 0x11ce <init_int_press+0x1e8>
    11e4:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <i2c_status>
    11e8:	1f 92       	push	r1
    11ea:	8f 93       	push	r24
    11ec:	88 e4       	ldi	r24, 0x48	; 72
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	9f 93       	push	r25
    11f2:	8f 93       	push	r24
    11f4:	82 eb       	ldi	r24, 0xB2	; 178
    11f6:	91 e0       	ldi	r25, 0x01	; 1
    11f8:	9f 93       	push	r25
    11fa:	8f 93       	push	r24
    11fc:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    1200:	82 eb       	ldi	r24, 0xB2	; 178
    1202:	91 e0       	ldi	r25, 0x01	; 1
    1204:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    1208:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
    120c:	0f 90       	pop	r0
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0
    1212:	0f 90       	pop	r0
    1214:	0f 90       	pop	r0
    1216:	0f 90       	pop	r0
    1218:	df 91       	pop	r29
    121a:	cf 91       	pop	r28
    121c:	08 95       	ret

0000121e <ip_CAN>:
    121e:	cf 93       	push	r28
    1220:	df 93       	push	r29
    1222:	f8 94       	cli
    1224:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1228:	cc e0       	ldi	r28, 0x0C	; 12
    122a:	d1 e0       	ldi	r29, 0x01	; 1
    122c:	f0 e0       	ldi	r31, 0x00	; 0
    122e:	ee 0f       	add	r30, r30
    1230:	ff 1f       	adc	r31, r31
    1232:	ee 0f       	add	r30, r30
    1234:	ff 1f       	adc	r31, r31
    1236:	e9 5e       	subi	r30, 0xE9	; 233
    1238:	fd 4f       	sbci	r31, 0xFD	; 253
    123a:	80 81       	ld	r24, Z
    123c:	8f 83       	std	Y+7, r24	; 0x07
    123e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	ee 0f       	add	r30, r30
    1246:	ff 1f       	adc	r31, r31
    1248:	ee 0f       	add	r30, r30
    124a:	ff 1f       	adc	r31, r31
    124c:	e9 5e       	subi	r30, 0xE9	; 233
    124e:	fd 4f       	sbci	r31, 0xFD	; 253
    1250:	81 81       	ldd	r24, Z+1	; 0x01
    1252:	88 87       	std	Y+8, r24	; 0x08
    1254:	a0 91 ae 01 	lds	r26, 0x01AE	; 0x8001ae <history>
    1258:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	aa 0f       	add	r26, r26
    1260:	bb 1f       	adc	r27, r27
    1262:	aa 0f       	add	r26, r26
    1264:	bb 1f       	adc	r27, r27
    1266:	a9 5e       	subi	r26, 0xE9	; 233
    1268:	bd 4f       	sbci	r27, 0xFD	; 253
    126a:	12 96       	adiw	r26, 0x02	; 2
    126c:	9c 91       	ld	r25, X
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	ee 0f       	add	r30, r30
    1272:	ff 1f       	adc	r31, r31
    1274:	ee 0f       	add	r30, r30
    1276:	ff 1f       	adc	r31, r31
    1278:	e6 56       	subi	r30, 0x66	; 102
    127a:	fd 4f       	sbci	r31, 0xFD	; 253
    127c:	80 81       	ld	r24, Z
    127e:	82 95       	swap	r24
    1280:	80 7f       	andi	r24, 0xF0	; 240
    1282:	89 2b       	or	r24, r25
    1284:	89 87       	std	Y+9, r24	; 0x09
    1286:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	ee 0f       	add	r30, r30
    128e:	ff 1f       	adc	r31, r31
    1290:	ee 0f       	add	r30, r30
    1292:	ff 1f       	adc	r31, r31
    1294:	e6 56       	subi	r30, 0x66	; 102
    1296:	fd 4f       	sbci	r31, 0xFD	; 253
    1298:	80 81       	ld	r24, Z
    129a:	91 81       	ldd	r25, Z+1	; 0x01
    129c:	a2 81       	ldd	r26, Z+2	; 0x02
    129e:	b3 81       	ldd	r27, Z+3	; 0x03
    12a0:	68 94       	set
    12a2:	13 f8       	bld	r1, 3
    12a4:	b6 95       	lsr	r27
    12a6:	a7 95       	ror	r26
    12a8:	97 95       	ror	r25
    12aa:	87 95       	ror	r24
    12ac:	16 94       	lsr	r1
    12ae:	d1 f7       	brne	.-12     	; 0x12a4 <ip_CAN+0x86>
    12b0:	8a 87       	std	Y+10, r24	; 0x0a
    12b2:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	ee 0f       	add	r30, r30
    12ba:	ff 1f       	adc	r31, r31
    12bc:	ee 0f       	add	r30, r30
    12be:	ff 1f       	adc	r31, r31
    12c0:	e6 56       	subi	r30, 0x66	; 102
    12c2:	fd 4f       	sbci	r31, 0xFD	; 253
    12c4:	80 81       	ld	r24, Z
    12c6:	91 81       	ldd	r25, Z+1	; 0x01
    12c8:	a2 81       	ldd	r26, Z+2	; 0x02
    12ca:	b3 81       	ldd	r27, Z+3	; 0x03
    12cc:	07 2e       	mov	r0, r23
    12ce:	7c e0       	ldi	r23, 0x0C	; 12
    12d0:	b6 95       	lsr	r27
    12d2:	a7 95       	ror	r26
    12d4:	97 95       	ror	r25
    12d6:	87 95       	ror	r24
    12d8:	7a 95       	dec	r23
    12da:	d1 f7       	brne	.-12     	; 0x12d0 <ip_CAN+0xb2>
    12dc:	70 2d       	mov	r23, r0
    12de:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <Request_Response_SIB_Temp+0x3>
    12e2:	78 94       	sei
    12e4:	df 91       	pop	r29
    12e6:	cf 91       	pop	r28
    12e8:	08 95       	ret

000012ea <it_CAN>:
    12ea:	cf 93       	push	r28
    12ec:	df 93       	push	r29
    12ee:	f8 94       	cli
    12f0:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    12f4:	a1 e0       	ldi	r26, 0x01	; 1
    12f6:	b1 e0       	ldi	r27, 0x01	; 1
    12f8:	f0 e0       	ldi	r31, 0x00	; 0
    12fa:	ee 0f       	add	r30, r30
    12fc:	ff 1f       	adc	r31, r31
    12fe:	e9 59       	subi	r30, 0x99	; 153
    1300:	fd 4f       	sbci	r31, 0xFD	; 253
    1302:	80 81       	ld	r24, Z
    1304:	14 96       	adiw	r26, 0x04	; 4
    1306:	8c 93       	st	X, r24
    1308:	14 97       	sbiw	r26, 0x04	; 4
    130a:	c0 91 ae 01 	lds	r28, 0x01AE	; 0x8001ae <history>
    130e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1312:	d0 e0       	ldi	r29, 0x00	; 0
    1314:	cc 0f       	add	r28, r28
    1316:	dd 1f       	adc	r29, r29
    1318:	c9 59       	subi	r28, 0x99	; 153
    131a:	dd 4f       	sbci	r29, 0xFD	; 253
    131c:	29 81       	ldd	r18, Y+1	; 0x01
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	ee 0f       	add	r30, r30
    1322:	ff 1f       	adc	r31, r31
    1324:	ea 57       	subi	r30, 0x7A	; 122
    1326:	fd 4f       	sbci	r31, 0xFD	; 253
    1328:	80 81       	ld	r24, Z
    132a:	91 81       	ldd	r25, Z+1	; 0x01
    132c:	82 95       	swap	r24
    132e:	92 95       	swap	r25
    1330:	90 7f       	andi	r25, 0xF0	; 240
    1332:	98 27       	eor	r25, r24
    1334:	80 7f       	andi	r24, 0xF0	; 240
    1336:	98 27       	eor	r25, r24
    1338:	82 2b       	or	r24, r18
    133a:	15 96       	adiw	r26, 0x05	; 5
    133c:	8c 93       	st	X, r24
    133e:	15 97       	sbiw	r26, 0x05	; 5
    1340:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	ee 0f       	add	r30, r30
    1348:	ff 1f       	adc	r31, r31
    134a:	ea 57       	subi	r30, 0x7A	; 122
    134c:	fd 4f       	sbci	r31, 0xFD	; 253
    134e:	80 81       	ld	r24, Z
    1350:	82 95       	swap	r24
    1352:	80 7f       	andi	r24, 0xF0	; 240
    1354:	16 96       	adiw	r26, 0x06	; 6
    1356:	8c 93       	st	X, r24
    1358:	16 97       	sbiw	r26, 0x06	; 6
    135a:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	ee 0f       	add	r30, r30
    1362:	ff 1f       	adc	r31, r31
    1364:	ec 51       	subi	r30, 0x1C	; 28
    1366:	fe 4f       	sbci	r31, 0xFE	; 254
    1368:	80 81       	ld	r24, Z
    136a:	17 96       	adiw	r26, 0x07	; 7
    136c:	8c 93       	st	X, r24
    136e:	17 97       	sbiw	r26, 0x07	; 7
    1370:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	ee 0f       	add	r30, r30
    1378:	ff 1f       	adc	r31, r31
    137a:	ec 51       	subi	r30, 0x1C	; 28
    137c:	fe 4f       	sbci	r31, 0xFE	; 254
    137e:	81 81       	ldd	r24, Z+1	; 0x01
    1380:	18 96       	adiw	r26, 0x08	; 8
    1382:	8c 93       	st	X, r24
    1384:	78 94       	sei
    1386:	df 91       	pop	r29
    1388:	cf 91       	pop	r28
    138a:	08 95       	ret

0000138c <update_ep>:
    138c:	0f 93       	push	r16
    138e:	1f 93       	push	r17
    1390:	cf 93       	push	r28
    1392:	df 93       	push	r29
    1394:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <adc_Cycle_Done>
    1398:	88 23       	and	r24, r24
    139a:	09 f4       	brne	.+2      	; 0x139e <update_ep+0x12>
    139c:	4a c0       	rjmp	.+148    	; 0x1432 <update_ep+0xa6>
    139e:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	ee 0f       	add	r30, r30
    13a6:	ff 1f       	adc	r31, r31
    13a8:	ed 5a       	subi	r30, 0xAD	; 173
    13aa:	fd 4f       	sbci	r31, 0xFD	; 253
    13ac:	81 81       	ldd	r24, Z+1	; 0x01
    13ae:	8f 93       	push	r24
    13b0:	80 81       	ld	r24, Z
    13b2:	8f 93       	push	r24
    13b4:	02 e7       	ldi	r16, 0x72	; 114
    13b6:	11 e0       	ldi	r17, 0x01	; 1
    13b8:	1f 93       	push	r17
    13ba:	0f 93       	push	r16
    13bc:	c2 eb       	ldi	r28, 0xB2	; 178
    13be:	d1 e0       	ldi	r29, 0x01	; 1
    13c0:	df 93       	push	r29
    13c2:	cf 93       	push	r28
    13c4:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    13c8:	ce 01       	movw	r24, r28
    13ca:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    13ce:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    13d2:	f0 e0       	ldi	r31, 0x00	; 0
    13d4:	ee 0f       	add	r30, r30
    13d6:	ff 1f       	adc	r31, r31
    13d8:	ed 5a       	subi	r30, 0xAD	; 173
    13da:	fd 4f       	sbci	r31, 0xFD	; 253
    13dc:	81 81       	ldd	r24, Z+1	; 0x01
    13de:	8f 93       	push	r24
    13e0:	80 81       	ld	r24, Z
    13e2:	8f 93       	push	r24
    13e4:	1f 93       	push	r17
    13e6:	0f 93       	push	r16
    13e8:	df 93       	push	r29
    13ea:	cf 93       	push	r28
    13ec:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    13f0:	ce 01       	movw	r24, r28
    13f2:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    13f6:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	ee 0f       	add	r30, r30
    13fe:	ff 1f       	adc	r31, r31
    1400:	ed 5a       	subi	r30, 0xAD	; 173
    1402:	fd 4f       	sbci	r31, 0xFD	; 253
    1404:	81 81       	ldd	r24, Z+1	; 0x01
    1406:	8f 93       	push	r24
    1408:	80 81       	ld	r24, Z
    140a:	8f 93       	push	r24
    140c:	1f 93       	push	r17
    140e:	0f 93       	push	r16
    1410:	df 93       	push	r29
    1412:	cf 93       	push	r28
    1414:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <sprintf>
    1418:	ce 01       	movw	r24, r28
    141a:	0e 94 aa 00 	call	0x154	; 0x154 <sendString>
    141e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <adc_Cycle_Done>
    1422:	8d b7       	in	r24, 0x3d	; 61
    1424:	9e b7       	in	r25, 0x3e	; 62
    1426:	42 96       	adiw	r24, 0x12	; 18
    1428:	0f b6       	in	r0, 0x3f	; 63
    142a:	f8 94       	cli
    142c:	9e bf       	out	0x3e, r25	; 62
    142e:	0f be       	out	0x3f, r0	; 63
    1430:	8d bf       	out	0x3d, r24	; 61
    1432:	df 91       	pop	r29
    1434:	cf 91       	pop	r28
    1436:	1f 91       	pop	r17
    1438:	0f 91       	pop	r16
    143a:	08 95       	ret

0000143c <CAN_HANDLE>:
    143c:	ef 92       	push	r14
    143e:	ff 92       	push	r15
    1440:	0f 93       	push	r16
    1442:	1f 93       	push	r17
    1444:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <rx_flag>
    1448:	88 23       	and	r24, r24
    144a:	09 f4       	brne	.+2      	; 0x144e <CAN_HANDLE+0x12>
    144c:	61 c0       	rjmp	.+194    	; 0x1510 <CAN_HANDLE+0xd4>
    144e:	f8 94       	cli
    1450:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <CANRX_buffer>
    1454:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <CANRX_buffer+0x1>
    1458:	00 91 0e 02 	lds	r16, 0x020E	; 0x80020e <CANRX_buffer+0x2>
    145c:	10 91 0f 02 	lds	r17, 0x020F	; 0x80020f <CANRX_buffer+0x3>
    1460:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <CANRX_buffer+0x4>
    1464:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <CANRX_buffer+0x5>
    1468:	40 91 12 02 	lds	r20, 0x0212	; 0x800212 <CANRX_buffer+0x6>
    146c:	50 91 13 02 	lds	r21, 0x0213	; 0x800213 <CANRX_buffer+0x7>
    1470:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <CANRX_buffer+0x8>
    1474:	70 91 15 02 	lds	r23, 0x0215	; 0x800215 <CANRX_buffer+0x9>
    1478:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <CANRX_buffer+0xa>
    147c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    1480:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <CANRX_buffer>
    1484:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <CANRX_buffer+0x1>
    1488:	8b 3f       	cpi	r24, 0xFB	; 251
    148a:	21 e0       	ldi	r18, 0x01	; 1
    148c:	92 07       	cpc	r25, r18
    148e:	21 f0       	breq	.+8      	; 0x1498 <CAN_HANDLE+0x5c>
    1490:	83 30       	cpi	r24, 0x03	; 3
    1492:	92 40       	sbci	r25, 0x02	; 2
    1494:	f1 f0       	breq	.+60     	; 0x14d2 <CAN_HANDLE+0x96>
    1496:	39 c0       	rjmp	.+114    	; 0x150a <CAN_HANDLE+0xce>
    1498:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <Request_Response_SIB_Pressure>
    149c:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <Request_Response_SIB_Pressure+0x1>
    14a0:	00 91 0e 01 	lds	r16, 0x010E	; 0x80010e <Request_Response_SIB_Pressure+0x2>
    14a4:	10 91 0f 01 	lds	r17, 0x010F	; 0x80010f <Request_Response_SIB_Pressure+0x3>
    14a8:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <Request_Response_SIB_Pressure+0x4>
    14ac:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <Request_Response_SIB_Pressure+0x5>
    14b0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <Request_Response_SIB_Pressure+0x6>
    14b4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <Request_Response_SIB_Pressure+0x7>
    14b8:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <Request_Response_SIB_Pressure+0x8>
    14bc:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <Request_Response_SIB_Pressure+0x9>
    14c0:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <Request_Response_SIB_Pressure+0xa>
    14c4:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    14c8:	8c e0       	ldi	r24, 0x0C	; 12
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
    14d0:	1c c0       	rjmp	.+56     	; 0x150a <CAN_HANDLE+0xce>
    14d2:	e0 90 01 01 	lds	r14, 0x0101	; 0x800101 <Request_Response_SIB_Temp>
    14d6:	f0 90 02 01 	lds	r15, 0x0102	; 0x800102 <Request_Response_SIB_Temp+0x1>
    14da:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <Request_Response_SIB_Temp+0x2>
    14de:	10 91 04 01 	lds	r17, 0x0104	; 0x800104 <Request_Response_SIB_Temp+0x3>
    14e2:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <Request_Response_SIB_Temp+0x4>
    14e6:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <Request_Response_SIB_Temp+0x5>
    14ea:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <Request_Response_SIB_Temp+0x6>
    14ee:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <Request_Response_SIB_Temp+0x7>
    14f2:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <Request_Response_SIB_Temp+0x8>
    14f6:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <Request_Response_SIB_Temp+0x9>
    14fa:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Request_Response_SIB_Temp+0xa>
    14fe:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	91 e0       	ldi	r25, 0x01	; 1
    1506:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
    150a:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <rx_flag>
    150e:	78 94       	sei
    1510:	1f 91       	pop	r17
    1512:	0f 91       	pop	r16
    1514:	ff 90       	pop	r15
    1516:	ef 90       	pop	r14
    1518:	08 95       	ret

0000151a <debug_can_tx>:
			}
		}*/
}

void debug_can_tx(void)
{
    151a:	ef 92       	push	r14
    151c:	ff 92       	push	r15
    151e:	0f 93       	push	r16
    1520:	1f 93       	push	r17
    1522:	cf 93       	push	r28
	ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
    1524:	cf b7       	in	r28, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1526:	f8 94       	cli
		/*CI_SIB_General.data[1] = t1_raw[history];
		CI_SIB_General.data[2] = (t1_raw[history]>>8) | (t2_raw[history]<<4);
		CI_SIB_General.data[3] = (t2_raw[history]>>4);
		CI_SIB_General.data[4] = (t3_raw[history]);
		CI_SIB_General.data[5] = (t3_raw[history]>>8);*/
		USART_CAN_TX(Request_Response_SIB_Temp);
    1528:	e0 90 01 01 	lds	r14, 0x0101	; 0x800101 <Request_Response_SIB_Temp>
    152c:	f0 90 02 01 	lds	r15, 0x0102	; 0x800102 <Request_Response_SIB_Temp+0x1>
    1530:	00 91 03 01 	lds	r16, 0x0103	; 0x800103 <Request_Response_SIB_Temp+0x2>
    1534:	10 91 04 01 	lds	r17, 0x0104	; 0x800104 <Request_Response_SIB_Temp+0x3>
    1538:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <Request_Response_SIB_Temp+0x4>
    153c:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <Request_Response_SIB_Temp+0x5>
    1540:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <Request_Response_SIB_Temp+0x6>
    1544:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <Request_Response_SIB_Temp+0x7>
    1548:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <Request_Response_SIB_Temp+0x8>
    154c:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <Request_Response_SIB_Temp+0x9>
    1550:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Request_Response_SIB_Temp+0xa>
    1554:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
		mcp2515_send_message(&Request_Response_SIB_Temp);
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	91 e0       	ldi	r25, 0x01	; 1
    155c:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
		mcp2515_send_message(&Request_Response_SIB_Pressure);
    1560:	8c e0       	ldi	r24, 0x0C	; 12
    1562:	91 e0       	ldi	r25, 0x01	; 1
    1564:	0e 94 40 02 	call	0x480	; 0x480 <mcp2515_send_message>
		USART_CAN_TX(Request_Response_SIB_Pressure);
    1568:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <Request_Response_SIB_Pressure>
    156c:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <Request_Response_SIB_Pressure+0x1>
    1570:	00 91 0e 01 	lds	r16, 0x010E	; 0x80010e <Request_Response_SIB_Pressure+0x2>
    1574:	10 91 0f 01 	lds	r17, 0x010F	; 0x80010f <Request_Response_SIB_Pressure+0x3>
    1578:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <Request_Response_SIB_Pressure+0x4>
    157c:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <Request_Response_SIB_Pressure+0x5>
    1580:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <Request_Response_SIB_Pressure+0x6>
    1584:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <Request_Response_SIB_Pressure+0x7>
    1588:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <Request_Response_SIB_Pressure+0x8>
    158c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <Request_Response_SIB_Pressure+0x9>
    1590:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <Request_Response_SIB_Pressure+0xa>
    1594:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <USART_CAN_TX>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1598:	cf bf       	out	0x3f, r28	; 63
		//mcp2515_send_message(&CI_ESC1);
		//mcp2515_send_message(&CI_Kill_Switch);
		//USART_CAN_TX(Request_Response_SIB_Temp);
	}
}
    159a:	cf 91       	pop	r28
    159c:	1f 91       	pop	r17
    159e:	0f 91       	pop	r16
    15a0:	ff 90       	pop	r15
    15a2:	ef 90       	pop	r14
    15a4:	08 95       	ret

000015a6 <error_TCA>:

void error_TCA(uint8_t type)
{
	switch(type)
    15a6:	80 32       	cpi	r24, 0x20	; 32
    15a8:	19 f0       	breq	.+6      	; 0x15b0 <error_TCA+0xa>
    15aa:	80 33       	cpi	r24, 0x30	; 48
    15ac:	a1 f0       	breq	.+40     	; 0x15d6 <error_TCA+0x30>
    15ae:	08 95       	ret
	{
		case T_ADD_NACK:
			i2c_errors[history][state] |= (1<<7) | (1<<2);
    15b0:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    15b4:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    15b8:	97 e0       	ldi	r25, 0x07	; 7
    15ba:	e9 9f       	mul	r30, r25
    15bc:	f0 01       	movw	r30, r0
    15be:	11 24       	eor	r1, r1
    15c0:	ee 50       	subi	r30, 0x0E	; 14
    15c2:	fd 4f       	sbci	r31, 0xFD	; 253
    15c4:	e8 0f       	add	r30, r24
    15c6:	f1 1d       	adc	r31, r1
    15c8:	80 81       	ld	r24, Z
    15ca:	84 68       	ori	r24, 0x84	; 132
    15cc:	80 83       	st	Z, r24
			end_state = 1;
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
			break;
    15d4:	08 95       	ret
		case T_NACK:
			i2c_errors[history][state] |= (1<<6) | (1<<2);
    15d6:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    15da:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    15de:	97 e0       	ldi	r25, 0x07	; 7
    15e0:	e9 9f       	mul	r30, r25
    15e2:	f0 01       	movw	r30, r0
    15e4:	11 24       	eor	r1, r1
    15e6:	ee 50       	subi	r30, 0x0E	; 14
    15e8:	fd 4f       	sbci	r31, 0xFD	; 253
    15ea:	e8 0f       	add	r30, r24
    15ec:	f1 1d       	adc	r31, r1
    15ee:	80 81       	ld	r24, Z
    15f0:	84 64       	ori	r24, 0x44	; 68
    15f2:	80 83       	st	Z, r24
			end_state = 1;
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    15fa:	08 95       	ret

000015fc <error_MPLW>:
	}
}

void error_MPLW(uint8_t type)
{
	switch(type)
    15fc:	80 32       	cpi	r24, 0x20	; 32
    15fe:	19 f0       	breq	.+6      	; 0x1606 <error_MPLW+0xa>
    1600:	80 33       	cpi	r24, 0x30	; 48
    1602:	a1 f0       	breq	.+40     	; 0x162c <error_MPLW+0x30>
    1604:	08 95       	ret
	{
		case T_ADD_NACK:
			i2c_errors[history][state] |= (1<<7) | (1<<3);
    1606:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    160a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    160e:	97 e0       	ldi	r25, 0x07	; 7
    1610:	e9 9f       	mul	r30, r25
    1612:	f0 01       	movw	r30, r0
    1614:	11 24       	eor	r1, r1
    1616:	ee 50       	subi	r30, 0x0E	; 14
    1618:	fd 4f       	sbci	r31, 0xFD	; 253
    161a:	e8 0f       	add	r30, r24
    161c:	f1 1d       	adc	r31, r1
    161e:	80 81       	ld	r24, Z
    1620:	88 68       	ori	r24, 0x88	; 136
    1622:	80 83       	st	Z, r24
			end_state = 1;
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
			break;
    162a:	08 95       	ret
		case T_NACK:
			i2c_errors[history][state] |= (1<<6) | (1<<3);
    162c:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1630:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1634:	97 e0       	ldi	r25, 0x07	; 7
    1636:	e9 9f       	mul	r30, r25
    1638:	f0 01       	movw	r30, r0
    163a:	11 24       	eor	r1, r1
    163c:	ee 50       	subi	r30, 0x0E	; 14
    163e:	fd 4f       	sbci	r31, 0xFD	; 253
    1640:	e8 0f       	add	r30, r24
    1642:	f1 1d       	adc	r31, r1
    1644:	80 81       	ld	r24, Z
    1646:	88 64       	ori	r24, 0x48	; 72
    1648:	80 83       	st	Z, r24
			end_state = 1;
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    1650:	08 95       	ret

00001652 <error_MPLR>:
	}
}

void error_MPLR(uint8_t type)
{
	switch(type)
    1652:	88 34       	cpi	r24, 0x48	; 72
    1654:	19 f0       	breq	.+6      	; 0x165c <error_MPLR+0xa>
    1656:	88 35       	cpi	r24, 0x58	; 88
    1658:	99 f0       	breq	.+38     	; 0x1680 <error_MPLR+0x2e>
    165a:	08 95       	ret
	{
		case R_ADD_NACK:
			i2c_errors[history][state] = (1<<5) | (1<<3);
    165c:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1660:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1664:	97 e0       	ldi	r25, 0x07	; 7
    1666:	e9 9f       	mul	r30, r25
    1668:	f0 01       	movw	r30, r0
    166a:	11 24       	eor	r1, r1
    166c:	ee 50       	subi	r30, 0x0E	; 14
    166e:	fd 4f       	sbci	r31, 0xFD	; 253
    1670:	e8 0f       	add	r30, r24
    1672:	f1 1d       	adc	r31, r1
    1674:	88 e2       	ldi	r24, 0x28	; 40
    1676:	80 83       	st	Z, r24
			end_state =1;
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
			break;
    167e:	08 95       	ret
		case R_NACK:
			i2c_errors[history][state] = (1<<4) | (1<<3);
    1680:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    1684:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1688:	97 e0       	ldi	r25, 0x07	; 7
    168a:	e9 9f       	mul	r30, r25
    168c:	f0 01       	movw	r30, r0
    168e:	11 24       	eor	r1, r1
    1690:	ee 50       	subi	r30, 0x0E	; 14
    1692:	fd 4f       	sbci	r31, 0xFD	; 253
    1694:	e8 0f       	add	r30, r24
    1696:	f1 1d       	adc	r31, r1
    1698:	88 e1       	ldi	r24, 0x18	; 24
    169a:	80 83       	st	Z, r24
			end_state = 1;
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    16a2:	08 95       	ret

000016a4 <error_LM92>:
	}
}

void error_LM92(uint8_t type)
{
	switch(type)
    16a4:	88 34       	cpi	r24, 0x48	; 72
    16a6:	19 f0       	breq	.+6      	; 0x16ae <error_LM92+0xa>
    16a8:	88 35       	cpi	r24, 0x58	; 88
    16aa:	a1 f0       	breq	.+40     	; 0x16d4 <error_LM92+0x30>
    16ac:	08 95       	ret
	{
		case R_ADD_NACK:
			i2c_errors[history][state] |= (1<<5) | (1<<1);
    16ae:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    16b2:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    16b6:	97 e0       	ldi	r25, 0x07	; 7
    16b8:	e9 9f       	mul	r30, r25
    16ba:	f0 01       	movw	r30, r0
    16bc:	11 24       	eor	r1, r1
    16be:	ee 50       	subi	r30, 0x0E	; 14
    16c0:	fd 4f       	sbci	r31, 0xFD	; 253
    16c2:	e8 0f       	add	r30, r24
    16c4:	f1 1d       	adc	r31, r1
    16c6:	80 81       	ld	r24, Z
    16c8:	82 62       	ori	r24, 0x22	; 34
    16ca:	80 83       	st	Z, r24
			end_state = 1;
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
			break;
    16d2:	08 95       	ret
		case R_NACK:
			i2c_errors[history][state] |= (1<<4) | (1<<1);
    16d4:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <history>
    16d8:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    16dc:	97 e0       	ldi	r25, 0x07	; 7
    16de:	e9 9f       	mul	r30, r25
    16e0:	f0 01       	movw	r30, r0
    16e2:	11 24       	eor	r1, r1
    16e4:	ee 50       	subi	r30, 0x0E	; 14
    16e6:	fd 4f       	sbci	r31, 0xFD	; 253
    16e8:	e8 0f       	add	r30, r24
    16ea:	f1 1d       	adc	r31, r1
    16ec:	80 81       	ld	r24, Z
    16ee:	82 61       	ori	r24, 0x12	; 18
    16f0:	80 83       	st	Z, r24
			end_state = 1;
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    16f8:	08 95       	ret

000016fa <i2c_FSM>:
	uint8_t t_address;		//i2c address of device to be written depending on state
	uint8_t readCycle;		//number of data bytes to read [not including address]
	uint8_t writeCycle;		//number of data bytes to write [not including address]
	uint8_t error;
	
	if(TWCR0 & 0b10000000)	//if TWINT high 
    16fa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    16fe:	88 23       	and	r24, r24
    1700:	0c f0       	brlt	.+2      	; 0x1704 <i2c_FSM+0xa>
    1702:	17 c1       	rjmp	.+558    	; 0x1932 <i2c_FSM+0x238>
	{
		switch(state)
    1704:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1708:	83 30       	cpi	r24, 0x03	; 3
    170a:	09 f4       	brne	.+2      	; 0x170e <i2c_FSM+0x14>
    170c:	90 c0       	rjmp	.+288    	; 0x182e <i2c_FSM+0x134>
    170e:	30 f4       	brcc	.+12     	; 0x171c <i2c_FSM+0x22>
    1710:	81 30       	cpi	r24, 0x01	; 1
    1712:	69 f0       	breq	.+26     	; 0x172e <i2c_FSM+0x34>
    1714:	82 30       	cpi	r24, 0x02	; 2
    1716:	09 f4       	brne	.+2      	; 0x171a <i2c_FSM+0x20>
    1718:	4a c0       	rjmp	.+148    	; 0x17ae <i2c_FSM+0xb4>
    171a:	08 95       	ret
    171c:	85 30       	cpi	r24, 0x05	; 5
    171e:	09 f4       	brne	.+2      	; 0x1722 <i2c_FSM+0x28>
    1720:	dd c0       	rjmp	.+442    	; 0x18dc <i2c_FSM+0x1e2>
    1722:	08 f4       	brcc	.+2      	; 0x1726 <i2c_FSM+0x2c>
    1724:	c6 c0       	rjmp	.+396    	; 0x18b2 <i2c_FSM+0x1b8>
    1726:	86 30       	cpi	r24, 0x06	; 6
    1728:	09 f4       	brne	.+2      	; 0x172c <i2c_FSM+0x32>
    172a:	ed c0       	rjmp	.+474    	; 0x1906 <i2c_FSM+0x20c>
    172c:	08 95       	ret
		{
			case IP1: 
					if(TCA_WRITE)
    172e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    1732:	88 23       	and	r24, r24
    1734:	99 f0       	breq	.+38     	; 0x175c <i2c_FSM+0x62>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 0
						i2c_temp[0] = 0b00000100; //Channel 2 select: 0b00000110;
    1736:	84 e0       	ldi	r24, 0x04	; 4
    1738:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    173c:	61 e0       	ldi	r22, 0x01	; 1
    173e:	80 ee       	ldi	r24, 0xE0	; 224
    1740:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    1744:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <error_TCA>
						if(write_done==1)
    1748:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <write_done>
    174c:	81 30       	cpi	r24, 0x01	; 1
    174e:	09 f0       	breq	.+2      	; 0x1752 <i2c_FSM+0x58>
    1750:	f0 c0       	rjmp	.+480    	; 0x1932 <i2c_FSM+0x238>
						{
							write_done = 0;
    1752:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
							init_i2c();
    1756:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    175a:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    175c:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <MPL_WRITE>
    1760:	88 23       	and	r24, r24
    1762:	51 f0       	breq	.+20     	; 0x1778 <i2c_FSM+0x7e>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;							
    1764:	81 e0       	ldi	r24, 0x01	; 1
    1766:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    176a:	61 e0       	ldi	r22, 0x01	; 1
    176c:	80 ec       	ldi	r24, 0xC0	; 192
    176e:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    1772:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <error_MPLW>
    1776:	08 95       	ret
					}
					else if (MPL_READ)
    1778:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <MPL_READ>
    177c:	88 23       	and	r24, r24
    177e:	09 f4       	brne	.+2      	; 0x1782 <i2c_FSM+0x88>
    1780:	d8 c0       	rjmp	.+432    	; 0x1932 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001; 
						error = i2c_read(r_address, readCycle);
    1782:	63 e0       	ldi	r22, 0x03	; 3
    1784:	81 ec       	ldi	r24, 0xC1	; 193
    1786:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    178a:	0e 94 29 0b 	call	0x1652	; 0x1652 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done == 1)
    178e:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    1792:	81 30       	cpi	r24, 0x01	; 1
    1794:	09 f0       	breq	.+2      	; 0x1798 <i2c_FSM+0x9e>
    1796:	cd c0       	rjmp	.+410    	; 0x1932 <i2c_FSM+0x238>
						{
							read_done = 0;
    1798:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
							debug_state();
							CLEAR_TWEN;
    179c:	ec eb       	ldi	r30, 0xBC	; 188
    179e:	f0 e0       	ldi	r31, 0x00	; 0
    17a0:	80 81       	ld	r24, Z
    17a2:	8b 7f       	andi	r24, 0xFB	; 251
    17a4:	80 83       	st	Z, r24
							end_state = 1;
    17a6:	81 e0       	ldi	r24, 0x01	; 1
    17a8:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    17ac:	08 95       	ret
					break;


			//Internal Pressure 2
			case IP2:
					if(TCA_WRITE)
    17ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    17b2:	88 23       	and	r24, r24
    17b4:	99 f0       	breq	.+38     	; 0x17dc <i2c_FSM+0xe2>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 1
						i2c_temp[0] = 0b00000101;
    17b6:	85 e0       	ldi	r24, 0x05	; 5
    17b8:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    17bc:	61 e0       	ldi	r22, 0x01	; 1
    17be:	80 ee       	ldi	r24, 0xE0	; 224
    17c0:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    17c4:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <error_TCA>
						if(write_done==1)
    17c8:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <write_done>
    17cc:	81 30       	cpi	r24, 0x01	; 1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <i2c_FSM+0xd8>
    17d0:	b0 c0       	rjmp	.+352    	; 0x1932 <i2c_FSM+0x238>
						{
							write_done = 0;
    17d2:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
							init_i2c();
    17d6:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    17da:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    17dc:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <MPL_WRITE>
    17e0:	88 23       	and	r24, r24
    17e2:	51 f0       	breq	.+20     	; 0x17f8 <i2c_FSM+0xfe>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;
    17e4:	81 e0       	ldi	r24, 0x01	; 1
    17e6:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    17ea:	61 e0       	ldi	r22, 0x01	; 1
    17ec:	80 ec       	ldi	r24, 0xC0	; 192
    17ee:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    17f2:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <error_MPLW>
    17f6:	08 95       	ret
					}
					else if (MPL_READ)
    17f8:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <MPL_READ>
    17fc:	88 23       	and	r24, r24
    17fe:	09 f4       	brne	.+2      	; 0x1802 <i2c_FSM+0x108>
    1800:	98 c0       	rjmp	.+304    	; 0x1932 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001;
						error = i2c_read(r_address, readCycle);
    1802:	63 e0       	ldi	r22, 0x03	; 3
    1804:	81 ec       	ldi	r24, 0xC1	; 193
    1806:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    180a:	0e 94 29 0b 	call	0x1652	; 0x1652 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done==1)
    180e:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    1812:	81 30       	cpi	r24, 0x01	; 1
    1814:	09 f0       	breq	.+2      	; 0x1818 <i2c_FSM+0x11e>
    1816:	8d c0       	rjmp	.+282    	; 0x1932 <i2c_FSM+0x238>
						{
							read_done = 0;
    1818:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
							debug_state();
							CLEAR_TWEN;
    181c:	ec eb       	ldi	r30, 0xBC	; 188
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	80 81       	ld	r24, Z
    1822:	8b 7f       	andi	r24, 0xFB	; 251
    1824:	80 83       	st	Z, r24
							end_state = 1;
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    182c:	08 95       	ret
					break;


			//Internal Pressure 3
			case IP3:
					if(TCA_WRITE)
    182e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <TCA_WRITE>
    1832:	88 23       	and	r24, r24
    1834:	99 f0       	breq	.+38     	; 0x185c <i2c_FSM+0x162>
						t_address = 0b11100000;
						writeCycle = 1;

						//set control register config as data to send
						//Select TCA Channel 2
						i2c_temp[0] = 0b00000110;
    1836:	86 e0       	ldi	r24, 0x06	; 6
    1838:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    183c:	61 e0       	ldi	r22, 0x01	; 1
    183e:	80 ee       	ldi	r24, 0xE0	; 224
    1840:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_TCA(error);
    1844:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <error_TCA>
						if(write_done==1)
    1848:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <write_done>
    184c:	81 30       	cpi	r24, 0x01	; 1
    184e:	09 f0       	breq	.+2      	; 0x1852 <i2c_FSM+0x158>
    1850:	70 c0       	rjmp	.+224    	; 0x1932 <i2c_FSM+0x238>
						{
							write_done = 0;
    1852:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <write_done>
							init_i2c();
    1856:	0e 94 6b 07 	call	0xed6	; 0xed6 <init_i2c>
    185a:	08 95       	ret
						}
					}
					else if(MPL_WRITE)
    185c:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <MPL_WRITE>
    1860:	88 23       	and	r24, r24
    1862:	51 f0       	breq	.+20     	; 0x1878 <i2c_FSM+0x17e>
						//Internal Pressure 1
						t_address = 0b11000000;
						writeCycle = 1;

						//Set pressure data register 1 address as byte to send
						i2c_temp[0] = 0x01;
    1864:	81 e0       	ldi	r24, 0x01	; 1
    1866:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <i2c_temp>
						error = i2c_write(t_address, writeCycle);
    186a:	61 e0       	ldi	r22, 0x01	; 1
    186c:	80 ec       	ldi	r24, 0xC0	; 192
    186e:	0e 94 17 06 	call	0xc2e	; 0xc2e <i2c_write>
						error_MPLW(error);
    1872:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <error_MPLW>
    1876:	08 95       	ret
					}
					else if (MPL_READ)
    1878:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <MPL_READ>
    187c:	88 23       	and	r24, r24
    187e:	09 f4       	brne	.+2      	; 0x1882 <i2c_FSM+0x188>
    1880:	58 c0       	rjmp	.+176    	; 0x1932 <i2c_FSM+0x238>
					{
						//Read pressure data, 3 bytes
						readCycle = 3;
						r_address = 0b11000001;
						error = i2c_read(r_address, readCycle);
    1882:	63 e0       	ldi	r22, 0x03	; 3
    1884:	81 ec       	ldi	r24, 0xC1	; 193
    1886:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
						error_MPLR(error);
    188a:	0e 94 29 0b 	call	0x1652	; 0x1652 <error_MPLR>
						
						//TWI must be disabled after stop condition here if stop generated
						//disabling TWI will trigger next state
						if(read_done ==1)
    188e:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    1892:	81 30       	cpi	r24, 0x01	; 1
    1894:	09 f0       	breq	.+2      	; 0x1898 <i2c_FSM+0x19e>
    1896:	4d c0       	rjmp	.+154    	; 0x1932 <i2c_FSM+0x238>
						{
							read_done =0;
    1898:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
							ip_CAN();
    189c:	0e 94 0f 09 	call	0x121e	; 0x121e <ip_CAN>
							debug_state();
							CLEAR_TWEN;
    18a0:	ec eb       	ldi	r30, 0xBC	; 188
    18a2:	f0 e0       	ldi	r31, 0x00	; 0
    18a4:	80 81       	ld	r24, Z
    18a6:	8b 7f       	andi	r24, 0xFB	; 251
    18a8:	80 83       	st	Z, r24
							end_state = 1;
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    18b0:	08 95       	ret
			//Temperature 1, U8
			case T1: r_address = 0b10010001;
					t_address = 0b10010000;
					readCycle = 2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    18b2:	62 e0       	ldi	r22, 0x02	; 2
    18b4:	81 e9       	ldi	r24, 0x91	; 145
    18b6:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    18ba:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <error_LM92>
					if(read_done ==1)
    18be:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    18c2:	81 30       	cpi	r24, 0x01	; 1
    18c4:	b1 f5       	brne	.+108    	; 0x1932 <i2c_FSM+0x238>
					{
						read_done = 0;
    18c6:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
						debug_state();
						CLEAR_TWEN;
    18ca:	ec eb       	ldi	r30, 0xBC	; 188
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	80 81       	ld	r24, Z
    18d0:	8b 7f       	andi	r24, 0xFB	; 251
    18d2:	80 83       	st	Z, r24
						end_state = 1;
    18d4:	81 e0       	ldi	r24, 0x01	; 1
    18d6:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    18da:	08 95       	ret
			//Temperature 2, U9
			case T2: r_address = 0b10010011;
					//t_address = ;
					readCycle =2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    18dc:	62 e0       	ldi	r22, 0x02	; 2
    18de:	83 e9       	ldi	r24, 0x93	; 147
    18e0:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    18e4:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <error_LM92>
					if(read_done ==1)
    18e8:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    18ec:	81 30       	cpi	r24, 0x01	; 1
    18ee:	09 f5       	brne	.+66     	; 0x1932 <i2c_FSM+0x238>
					{
						read_done = 0;
    18f0:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
						debug_state();
						CLEAR_TWEN;
    18f4:	ec eb       	ldi	r30, 0xBC	; 188
    18f6:	f0 e0       	ldi	r31, 0x00	; 0
    18f8:	80 81       	ld	r24, Z
    18fa:	8b 7f       	andi	r24, 0xFB	; 251
    18fc:	80 83       	st	Z, r24
						end_state = 1;
    18fe:	81 e0       	ldi	r24, 0x01	; 1
    1900:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
    1904:	08 95       	ret
			//Temperature 3, U10
			case T3: r_address = 0b10010101;
					//taddress = ;
					readCycle =2;
					//writeCycle =
					error = i2c_read(r_address,readCycle);
    1906:	62 e0       	ldi	r22, 0x02	; 2
    1908:	85 e9       	ldi	r24, 0x95	; 149
    190a:	0e 94 e6 06 	call	0xdcc	; 0xdcc <i2c_read>
					error_LM92(error);
    190e:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <error_LM92>
					if(read_done == 1)
    1912:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <read_done>
    1916:	81 30       	cpi	r24, 0x01	; 1
    1918:	61 f4       	brne	.+24     	; 0x1932 <i2c_FSM+0x238>
					{
						read_done =0;
    191a:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <read_done>
						debug_state();
						CLEAR_TWEN;
    191e:	ec eb       	ldi	r30, 0xBC	; 188
    1920:	f0 e0       	ldi	r31, 0x00	; 0
    1922:	80 81       	ld	r24, Z
    1924:	8b 7f       	andi	r24, 0xFB	; 251
    1926:	80 83       	st	Z, r24
						end_state = 1;
    1928:	81 e0       	ldi	r24, 0x01	; 1
    192a:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>
						it_CAN();
    192e:	0e 94 75 09 	call	0x12ea	; 0x12ea <it_CAN>
    1932:	08 95       	ret

00001934 <int_p1>:
	}*/
}

void int_p1(void)
{
		if(state_ready && (state == IP1))
    1934:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    1938:	88 23       	and	r24, r24
    193a:	81 f0       	breq	.+32     	; 0x195c <int_p1+0x28>
    193c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1940:	81 30       	cpi	r24, 0x01	; 1
    1942:	61 f4       	brne	.+24     	; 0x195c <int_p1+0x28>
		{
			state_ready = 0;
    1944:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == IP1)
    1948:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    194c:	81 30       	cpi	r24, 0x01	; 1
    194e:	31 f4       	brne	.+12     	; 0x195c <int_p1+0x28>
			{
				i2c_FSM();
    1950:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_p1(void)
{
		if(state_ready && (state == IP1))
		{
			state_ready = 0;
			while (state == IP1)
    1954:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1958:	81 30       	cpi	r24, 0x01	; 1
    195a:	d1 f3       	breq	.-12     	; 0x1950 <int_p1+0x1c>
    195c:	08 95       	ret

0000195e <int_p2>:
		}	
}

void int_p2(void)
{
		if(state_ready && state == IP2)
    195e:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    1962:	88 23       	and	r24, r24
    1964:	81 f0       	breq	.+32     	; 0x1986 <int_p2+0x28>
    1966:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    196a:	82 30       	cpi	r24, 0x02	; 2
    196c:	61 f4       	brne	.+24     	; 0x1986 <int_p2+0x28>
		{
			state_ready = 0;
    196e:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == IP2)
    1972:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1976:	82 30       	cpi	r24, 0x02	; 2
    1978:	31 f4       	brne	.+12     	; 0x1986 <int_p2+0x28>
			{
				i2c_FSM();
    197a:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_p2(void)
{
		if(state_ready && state == IP2)
		{
			state_ready = 0;
			while (state == IP2)
    197e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1982:	82 30       	cpi	r24, 0x02	; 2
    1984:	d1 f3       	breq	.-12     	; 0x197a <int_p2+0x1c>
    1986:	08 95       	ret

00001988 <int_p3>:
		}
}

void int_p3(void)
{
		if(state_ready && state == IP3)
    1988:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    198c:	88 23       	and	r24, r24
    198e:	81 f0       	breq	.+32     	; 0x19b0 <int_p3+0x28>
    1990:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1994:	83 30       	cpi	r24, 0x03	; 3
    1996:	61 f4       	brne	.+24     	; 0x19b0 <int_p3+0x28>
		{
			state_ready = 0;
    1998:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == IP3)
    199c:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19a0:	83 30       	cpi	r24, 0x03	; 3
    19a2:	31 f4       	brne	.+12     	; 0x19b0 <int_p3+0x28>
			{
				i2c_FSM();
    19a4:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_p3(void)
{
		if(state_ready && state == IP3)
		{
			state_ready = 0;
			while (state == IP3)
    19a8:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19ac:	83 30       	cpi	r24, 0x03	; 3
    19ae:	d1 f3       	breq	.-12     	; 0x19a4 <int_p3+0x1c>
    19b0:	08 95       	ret

000019b2 <int_t1>:
		}
}

void int_t1(void)
{
		if(state_ready && state == T1)
    19b2:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    19b6:	88 23       	and	r24, r24
    19b8:	81 f0       	breq	.+32     	; 0x19da <int_t1+0x28>
    19ba:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19be:	84 30       	cpi	r24, 0x04	; 4
    19c0:	61 f4       	brne	.+24     	; 0x19da <int_t1+0x28>
		{
			state_ready = 0;
    19c2:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == T1)
    19c6:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19ca:	84 30       	cpi	r24, 0x04	; 4
    19cc:	31 f4       	brne	.+12     	; 0x19da <int_t1+0x28>
			{
				i2c_FSM();
    19ce:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_t1(void)
{
		if(state_ready && state == T1)
		{
			state_ready = 0;
			while (state == T1)
    19d2:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19d6:	84 30       	cpi	r24, 0x04	; 4
    19d8:	d1 f3       	breq	.-12     	; 0x19ce <int_t1+0x1c>
    19da:	08 95       	ret

000019dc <int_t2>:
		}
}

void int_t2(void)
{
		if(state_ready && state == T2)
    19dc:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    19e0:	88 23       	and	r24, r24
    19e2:	81 f0       	breq	.+32     	; 0x1a04 <int_t2+0x28>
    19e4:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19e8:	85 30       	cpi	r24, 0x05	; 5
    19ea:	61 f4       	brne	.+24     	; 0x1a04 <int_t2+0x28>
		{
			state_ready = 0;
    19ec:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == T2)
    19f0:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    19f4:	85 30       	cpi	r24, 0x05	; 5
    19f6:	31 f4       	brne	.+12     	; 0x1a04 <int_t2+0x28>
			{
				i2c_FSM();
    19f8:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_t2(void)
{
		if(state_ready && state == T2)
		{
			state_ready = 0;
			while (state == T2)
    19fc:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1a00:	85 30       	cpi	r24, 0x05	; 5
    1a02:	d1 f3       	breq	.-12     	; 0x19f8 <int_t2+0x1c>
    1a04:	08 95       	ret

00001a06 <int_t3>:
		}
}

void int_t3(void)
{
		if(state_ready && state == T3)
    1a06:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state_ready>
    1a0a:	88 23       	and	r24, r24
    1a0c:	81 f0       	breq	.+32     	; 0x1a2e <int_t3+0x28>
    1a0e:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1a12:	86 30       	cpi	r24, 0x06	; 6
    1a14:	61 f4       	brne	.+24     	; 0x1a2e <int_t3+0x28>
		{
			state_ready = 0;
    1a16:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state_ready>
			while (state == T3)
    1a1a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1a1e:	86 30       	cpi	r24, 0x06	; 6
    1a20:	31 f4       	brne	.+12     	; 0x1a2e <int_t3+0x28>
			{
				i2c_FSM();
    1a22:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <i2c_FSM>
void int_t3(void)
{
		if(state_ready && state == T3)
		{
			state_ready = 0;
			while (state == T3)
    1a26:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <state>
    1a2a:	86 30       	cpi	r24, 0x06	; 6
    1a2c:	d1 f3       	breq	.-12     	; 0x1a22 <int_t3+0x1c>
    1a2e:	08 95       	ret

00001a30 <main>:

//STATE is incremented when the ~17ms timer triggers, iff state_end = 1

int main(void)
{
	sys_config();
    1a30:	0e 94 79 00 	call	0xf2	; 0xf2 <sys_config>
	
	init_ADC_timer();
    1a34:	0e 94 69 03 	call	0x6d2	; 0x6d2 <init_ADC_timer>
	init_ADC();
    1a38:	0e 94 60 03 	call	0x6c0	; 0x6c0 <init_ADC>
	initUART();
    1a3c:	0e 94 96 00 	call	0x12c	; 0x12c <initUART>
	INTERRUPT_init();
    1a40:	0e 94 b9 00 	call	0x172	; 0x172 <INTERRUPT_init>
	USART_Init(103);	//103 sets baud rate at 9600
    1a44:	87 e6       	ldi	r24, 0x67	; 103
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	0e 94 c3 02 	call	0x586	; 0x586 <USART_Init>
	SPI_masterInit();
    1a4c:	0e 94 c1 00 	call	0x182	; 0x182 <SPI_masterInit>
	init_int_press();	//blocking code - i2c transmit only, disables TWI
    1a50:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <init_int_press>

	init_state_timer(); //will increment state iff i2c disabled
    1a54:	0e 94 4a 04 	call	0x894	; 0x894 <init_state_timer>
	state_ready = 1;
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state_ready>
	end_state = 1;
    1a5e:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <end_state>

	//MCP2515 initialization
	if(mcp2515_init(CANSPEED_500))
    1a62:	0e 94 1b 01 	call	0x236	; 0x236 <mcp2515_init>
    1a66:	88 23       	and	r24, r24
    1a68:	29 f0       	breq	.+10     	; 0x1a74 <main+0x44>
	{//[TODO]these need to be updated to RAW serial messages
		USART_Transmit_TX("Can Init SUCCESS!");
    1a6a:	8c e7       	ldi	r24, 0x7C	; 124
    1a6c:	91 e0       	ldi	r25, 0x01	; 1
    1a6e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <USART_Transmit_TX>
    1a72:	04 c0       	rjmp	.+8      	; 0x1a7c <main+0x4c>
	}else
	{
		USART_Transmit_TX("Can Init FAILURE!");
    1a74:	8e e8       	ldi	r24, 0x8E	; 142
    1a76:	91 e0       	ldi	r25, 0x01	; 1
    1a78:	0e 94 da 02 	call	0x5b4	; 0x5b4 <USART_Transmit_TX>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a7c:	2f ef       	ldi	r18, 0xFF	; 255
    1a7e:	81 ee       	ldi	r24, 0xE1	; 225
    1a80:	94 e0       	ldi	r25, 0x04	; 4
    1a82:	21 50       	subi	r18, 0x01	; 1
    1a84:	80 40       	sbci	r24, 0x00	; 0
    1a86:	90 40       	sbci	r25, 0x00	; 0
    1a88:	e1 f7       	brne	.-8      	; 0x1a82 <main+0x52>
    1a8a:	00 c0       	rjmp	.+0      	; 0x1a8c <main+0x5c>
    1a8c:	00 00       	nop
	}
	_delay_ms(100);

	while (1) 
    {
		int_p1();
    1a8e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <int_p1>
		int_p2();
    1a92:	0e 94 af 0c 	call	0x195e	; 0x195e <int_p2>
		update_ep();
    1a96:	0e 94 c6 09 	call	0x138c	; 0x138c <update_ep>
		CAN_HANDLE();
    1a9a:	0e 94 1e 0a 	call	0x143c	; 0x143c <CAN_HANDLE>
		int_p3();
    1a9e:	0e 94 c4 0c 	call	0x1988	; 0x1988 <int_p3>
		int_t1();
    1aa2:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <int_t1>
		update_ep();
    1aa6:	0e 94 c6 09 	call	0x138c	; 0x138c <update_ep>
		CAN_HANDLE();
    1aaa:	0e 94 1e 0a 	call	0x143c	; 0x143c <CAN_HANDLE>
		int_t2();
    1aae:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <int_t2>
		int_t3();
    1ab2:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <int_t3>
		update_ep();
    1ab6:	0e 94 c6 09 	call	0x138c	; 0x138c <update_ep>
		debug_can_tx();
    1aba:	0e 94 8d 0a 	call	0x151a	; 0x151a <debug_can_tx>
		CAN_HANDLE();
    1abe:	0e 94 1e 0a 	call	0x143c	; 0x143c <CAN_HANDLE>
    1ac2:	e5 cf       	rjmp	.-54     	; 0x1a8e <main+0x5e>

00001ac4 <sprintf>:
    1ac4:	ae e0       	ldi	r26, 0x0E	; 14
    1ac6:	b0 e0       	ldi	r27, 0x00	; 0
    1ac8:	e8 e6       	ldi	r30, 0x68	; 104
    1aca:	fd e0       	ldi	r31, 0x0D	; 13
    1acc:	0c 94 23 10 	jmp	0x2046	; 0x2046 <__prologue_saves__+0x1c>
    1ad0:	0d 89       	ldd	r16, Y+21	; 0x15
    1ad2:	1e 89       	ldd	r17, Y+22	; 0x16
    1ad4:	86 e0       	ldi	r24, 0x06	; 6
    1ad6:	8c 83       	std	Y+4, r24	; 0x04
    1ad8:	1a 83       	std	Y+2, r17	; 0x02
    1ada:	09 83       	std	Y+1, r16	; 0x01
    1adc:	8f ef       	ldi	r24, 0xFF	; 255
    1ade:	9f e7       	ldi	r25, 0x7F	; 127
    1ae0:	9e 83       	std	Y+6, r25	; 0x06
    1ae2:	8d 83       	std	Y+5, r24	; 0x05
    1ae4:	ae 01       	movw	r20, r28
    1ae6:	47 5e       	subi	r20, 0xE7	; 231
    1ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    1aea:	6f 89       	ldd	r22, Y+23	; 0x17
    1aec:	78 8d       	ldd	r23, Y+24	; 0x18
    1aee:	ce 01       	movw	r24, r28
    1af0:	01 96       	adiw	r24, 0x01	; 1
    1af2:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <vfprintf>
    1af6:	ef 81       	ldd	r30, Y+7	; 0x07
    1af8:	f8 85       	ldd	r31, Y+8	; 0x08
    1afa:	e0 0f       	add	r30, r16
    1afc:	f1 1f       	adc	r31, r17
    1afe:	10 82       	st	Z, r1
    1b00:	2e 96       	adiw	r28, 0x0e	; 14
    1b02:	e4 e0       	ldi	r30, 0x04	; 4
    1b04:	0c 94 3f 10 	jmp	0x207e	; 0x207e <__epilogue_restores__+0x1c>

00001b08 <vfprintf>:
    1b08:	ab e0       	ldi	r26, 0x0B	; 11
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	ea e8       	ldi	r30, 0x8A	; 138
    1b0e:	fd e0       	ldi	r31, 0x0D	; 13
    1b10:	0c 94 15 10 	jmp	0x202a	; 0x202a <__prologue_saves__>
    1b14:	6c 01       	movw	r12, r24
    1b16:	7b 01       	movw	r14, r22
    1b18:	8a 01       	movw	r16, r20
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	17 82       	std	Z+7, r1	; 0x07
    1b1e:	16 82       	std	Z+6, r1	; 0x06
    1b20:	83 81       	ldd	r24, Z+3	; 0x03
    1b22:	81 ff       	sbrs	r24, 1
    1b24:	cc c1       	rjmp	.+920    	; 0x1ebe <vfprintf+0x3b6>
    1b26:	ce 01       	movw	r24, r28
    1b28:	01 96       	adiw	r24, 0x01	; 1
    1b2a:	3c 01       	movw	r6, r24
    1b2c:	f6 01       	movw	r30, r12
    1b2e:	93 81       	ldd	r25, Z+3	; 0x03
    1b30:	f7 01       	movw	r30, r14
    1b32:	93 fd       	sbrc	r25, 3
    1b34:	85 91       	lpm	r24, Z+
    1b36:	93 ff       	sbrs	r25, 3
    1b38:	81 91       	ld	r24, Z+
    1b3a:	7f 01       	movw	r14, r30
    1b3c:	88 23       	and	r24, r24
    1b3e:	09 f4       	brne	.+2      	; 0x1b42 <vfprintf+0x3a>
    1b40:	ba c1       	rjmp	.+884    	; 0x1eb6 <vfprintf+0x3ae>
    1b42:	85 32       	cpi	r24, 0x25	; 37
    1b44:	39 f4       	brne	.+14     	; 0x1b54 <vfprintf+0x4c>
    1b46:	93 fd       	sbrc	r25, 3
    1b48:	85 91       	lpm	r24, Z+
    1b4a:	93 ff       	sbrs	r25, 3
    1b4c:	81 91       	ld	r24, Z+
    1b4e:	7f 01       	movw	r14, r30
    1b50:	85 32       	cpi	r24, 0x25	; 37
    1b52:	29 f4       	brne	.+10     	; 0x1b5e <vfprintf+0x56>
    1b54:	b6 01       	movw	r22, r12
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1b5c:	e7 cf       	rjmp	.-50     	; 0x1b2c <vfprintf+0x24>
    1b5e:	91 2c       	mov	r9, r1
    1b60:	21 2c       	mov	r2, r1
    1b62:	31 2c       	mov	r3, r1
    1b64:	ff e1       	ldi	r31, 0x1F	; 31
    1b66:	f3 15       	cp	r31, r3
    1b68:	d8 f0       	brcs	.+54     	; 0x1ba0 <vfprintf+0x98>
    1b6a:	8b 32       	cpi	r24, 0x2B	; 43
    1b6c:	79 f0       	breq	.+30     	; 0x1b8c <vfprintf+0x84>
    1b6e:	38 f4       	brcc	.+14     	; 0x1b7e <vfprintf+0x76>
    1b70:	80 32       	cpi	r24, 0x20	; 32
    1b72:	79 f0       	breq	.+30     	; 0x1b92 <vfprintf+0x8a>
    1b74:	83 32       	cpi	r24, 0x23	; 35
    1b76:	a1 f4       	brne	.+40     	; 0x1ba0 <vfprintf+0x98>
    1b78:	23 2d       	mov	r18, r3
    1b7a:	20 61       	ori	r18, 0x10	; 16
    1b7c:	1d c0       	rjmp	.+58     	; 0x1bb8 <vfprintf+0xb0>
    1b7e:	8d 32       	cpi	r24, 0x2D	; 45
    1b80:	61 f0       	breq	.+24     	; 0x1b9a <vfprintf+0x92>
    1b82:	80 33       	cpi	r24, 0x30	; 48
    1b84:	69 f4       	brne	.+26     	; 0x1ba0 <vfprintf+0x98>
    1b86:	23 2d       	mov	r18, r3
    1b88:	21 60       	ori	r18, 0x01	; 1
    1b8a:	16 c0       	rjmp	.+44     	; 0x1bb8 <vfprintf+0xb0>
    1b8c:	83 2d       	mov	r24, r3
    1b8e:	82 60       	ori	r24, 0x02	; 2
    1b90:	38 2e       	mov	r3, r24
    1b92:	e3 2d       	mov	r30, r3
    1b94:	e4 60       	ori	r30, 0x04	; 4
    1b96:	3e 2e       	mov	r3, r30
    1b98:	2a c0       	rjmp	.+84     	; 0x1bee <vfprintf+0xe6>
    1b9a:	f3 2d       	mov	r31, r3
    1b9c:	f8 60       	ori	r31, 0x08	; 8
    1b9e:	1d c0       	rjmp	.+58     	; 0x1bda <vfprintf+0xd2>
    1ba0:	37 fc       	sbrc	r3, 7
    1ba2:	2d c0       	rjmp	.+90     	; 0x1bfe <vfprintf+0xf6>
    1ba4:	20 ed       	ldi	r18, 0xD0	; 208
    1ba6:	28 0f       	add	r18, r24
    1ba8:	2a 30       	cpi	r18, 0x0A	; 10
    1baa:	40 f0       	brcs	.+16     	; 0x1bbc <vfprintf+0xb4>
    1bac:	8e 32       	cpi	r24, 0x2E	; 46
    1bae:	b9 f4       	brne	.+46     	; 0x1bde <vfprintf+0xd6>
    1bb0:	36 fc       	sbrc	r3, 6
    1bb2:	81 c1       	rjmp	.+770    	; 0x1eb6 <vfprintf+0x3ae>
    1bb4:	23 2d       	mov	r18, r3
    1bb6:	20 64       	ori	r18, 0x40	; 64
    1bb8:	32 2e       	mov	r3, r18
    1bba:	19 c0       	rjmp	.+50     	; 0x1bee <vfprintf+0xe6>
    1bbc:	36 fe       	sbrs	r3, 6
    1bbe:	06 c0       	rjmp	.+12     	; 0x1bcc <vfprintf+0xc4>
    1bc0:	8a e0       	ldi	r24, 0x0A	; 10
    1bc2:	98 9e       	mul	r9, r24
    1bc4:	20 0d       	add	r18, r0
    1bc6:	11 24       	eor	r1, r1
    1bc8:	92 2e       	mov	r9, r18
    1bca:	11 c0       	rjmp	.+34     	; 0x1bee <vfprintf+0xe6>
    1bcc:	ea e0       	ldi	r30, 0x0A	; 10
    1bce:	2e 9e       	mul	r2, r30
    1bd0:	20 0d       	add	r18, r0
    1bd2:	11 24       	eor	r1, r1
    1bd4:	22 2e       	mov	r2, r18
    1bd6:	f3 2d       	mov	r31, r3
    1bd8:	f0 62       	ori	r31, 0x20	; 32
    1bda:	3f 2e       	mov	r3, r31
    1bdc:	08 c0       	rjmp	.+16     	; 0x1bee <vfprintf+0xe6>
    1bde:	8c 36       	cpi	r24, 0x6C	; 108
    1be0:	21 f4       	brne	.+8      	; 0x1bea <vfprintf+0xe2>
    1be2:	83 2d       	mov	r24, r3
    1be4:	80 68       	ori	r24, 0x80	; 128
    1be6:	38 2e       	mov	r3, r24
    1be8:	02 c0       	rjmp	.+4      	; 0x1bee <vfprintf+0xe6>
    1bea:	88 36       	cpi	r24, 0x68	; 104
    1bec:	41 f4       	brne	.+16     	; 0x1bfe <vfprintf+0xf6>
    1bee:	f7 01       	movw	r30, r14
    1bf0:	93 fd       	sbrc	r25, 3
    1bf2:	85 91       	lpm	r24, Z+
    1bf4:	93 ff       	sbrs	r25, 3
    1bf6:	81 91       	ld	r24, Z+
    1bf8:	7f 01       	movw	r14, r30
    1bfa:	81 11       	cpse	r24, r1
    1bfc:	b3 cf       	rjmp	.-154    	; 0x1b64 <vfprintf+0x5c>
    1bfe:	98 2f       	mov	r25, r24
    1c00:	9f 7d       	andi	r25, 0xDF	; 223
    1c02:	95 54       	subi	r25, 0x45	; 69
    1c04:	93 30       	cpi	r25, 0x03	; 3
    1c06:	28 f4       	brcc	.+10     	; 0x1c12 <vfprintf+0x10a>
    1c08:	0c 5f       	subi	r16, 0xFC	; 252
    1c0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c0c:	9f e3       	ldi	r25, 0x3F	; 63
    1c0e:	99 83       	std	Y+1, r25	; 0x01
    1c10:	0d c0       	rjmp	.+26     	; 0x1c2c <vfprintf+0x124>
    1c12:	83 36       	cpi	r24, 0x63	; 99
    1c14:	31 f0       	breq	.+12     	; 0x1c22 <vfprintf+0x11a>
    1c16:	83 37       	cpi	r24, 0x73	; 115
    1c18:	71 f0       	breq	.+28     	; 0x1c36 <vfprintf+0x12e>
    1c1a:	83 35       	cpi	r24, 0x53	; 83
    1c1c:	09 f0       	breq	.+2      	; 0x1c20 <vfprintf+0x118>
    1c1e:	59 c0       	rjmp	.+178    	; 0x1cd2 <vfprintf+0x1ca>
    1c20:	21 c0       	rjmp	.+66     	; 0x1c64 <vfprintf+0x15c>
    1c22:	f8 01       	movw	r30, r16
    1c24:	80 81       	ld	r24, Z
    1c26:	89 83       	std	Y+1, r24	; 0x01
    1c28:	0e 5f       	subi	r16, 0xFE	; 254
    1c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c2c:	88 24       	eor	r8, r8
    1c2e:	83 94       	inc	r8
    1c30:	91 2c       	mov	r9, r1
    1c32:	53 01       	movw	r10, r6
    1c34:	13 c0       	rjmp	.+38     	; 0x1c5c <vfprintf+0x154>
    1c36:	28 01       	movw	r4, r16
    1c38:	f2 e0       	ldi	r31, 0x02	; 2
    1c3a:	4f 0e       	add	r4, r31
    1c3c:	51 1c       	adc	r5, r1
    1c3e:	f8 01       	movw	r30, r16
    1c40:	a0 80       	ld	r10, Z
    1c42:	b1 80       	ldd	r11, Z+1	; 0x01
    1c44:	36 fe       	sbrs	r3, 6
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <vfprintf+0x146>
    1c48:	69 2d       	mov	r22, r9
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	02 c0       	rjmp	.+4      	; 0x1c52 <vfprintf+0x14a>
    1c4e:	6f ef       	ldi	r22, 0xFF	; 255
    1c50:	7f ef       	ldi	r23, 0xFF	; 255
    1c52:	c5 01       	movw	r24, r10
    1c54:	0e 94 70 0f 	call	0x1ee0	; 0x1ee0 <strnlen>
    1c58:	4c 01       	movw	r8, r24
    1c5a:	82 01       	movw	r16, r4
    1c5c:	f3 2d       	mov	r31, r3
    1c5e:	ff 77       	andi	r31, 0x7F	; 127
    1c60:	3f 2e       	mov	r3, r31
    1c62:	16 c0       	rjmp	.+44     	; 0x1c90 <vfprintf+0x188>
    1c64:	28 01       	movw	r4, r16
    1c66:	22 e0       	ldi	r18, 0x02	; 2
    1c68:	42 0e       	add	r4, r18
    1c6a:	51 1c       	adc	r5, r1
    1c6c:	f8 01       	movw	r30, r16
    1c6e:	a0 80       	ld	r10, Z
    1c70:	b1 80       	ldd	r11, Z+1	; 0x01
    1c72:	36 fe       	sbrs	r3, 6
    1c74:	03 c0       	rjmp	.+6      	; 0x1c7c <vfprintf+0x174>
    1c76:	69 2d       	mov	r22, r9
    1c78:	70 e0       	ldi	r23, 0x00	; 0
    1c7a:	02 c0       	rjmp	.+4      	; 0x1c80 <vfprintf+0x178>
    1c7c:	6f ef       	ldi	r22, 0xFF	; 255
    1c7e:	7f ef       	ldi	r23, 0xFF	; 255
    1c80:	c5 01       	movw	r24, r10
    1c82:	0e 94 65 0f 	call	0x1eca	; 0x1eca <strnlen_P>
    1c86:	4c 01       	movw	r8, r24
    1c88:	f3 2d       	mov	r31, r3
    1c8a:	f0 68       	ori	r31, 0x80	; 128
    1c8c:	3f 2e       	mov	r3, r31
    1c8e:	82 01       	movw	r16, r4
    1c90:	33 fc       	sbrc	r3, 3
    1c92:	1b c0       	rjmp	.+54     	; 0x1cca <vfprintf+0x1c2>
    1c94:	82 2d       	mov	r24, r2
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	88 16       	cp	r8, r24
    1c9a:	99 06       	cpc	r9, r25
    1c9c:	b0 f4       	brcc	.+44     	; 0x1cca <vfprintf+0x1c2>
    1c9e:	b6 01       	movw	r22, r12
    1ca0:	80 e2       	ldi	r24, 0x20	; 32
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1ca8:	2a 94       	dec	r2
    1caa:	f4 cf       	rjmp	.-24     	; 0x1c94 <vfprintf+0x18c>
    1cac:	f5 01       	movw	r30, r10
    1cae:	37 fc       	sbrc	r3, 7
    1cb0:	85 91       	lpm	r24, Z+
    1cb2:	37 fe       	sbrs	r3, 7
    1cb4:	81 91       	ld	r24, Z+
    1cb6:	5f 01       	movw	r10, r30
    1cb8:	b6 01       	movw	r22, r12
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1cc0:	21 10       	cpse	r2, r1
    1cc2:	2a 94       	dec	r2
    1cc4:	21 e0       	ldi	r18, 0x01	; 1
    1cc6:	82 1a       	sub	r8, r18
    1cc8:	91 08       	sbc	r9, r1
    1cca:	81 14       	cp	r8, r1
    1ccc:	91 04       	cpc	r9, r1
    1cce:	71 f7       	brne	.-36     	; 0x1cac <vfprintf+0x1a4>
    1cd0:	e8 c0       	rjmp	.+464    	; 0x1ea2 <vfprintf+0x39a>
    1cd2:	84 36       	cpi	r24, 0x64	; 100
    1cd4:	11 f0       	breq	.+4      	; 0x1cda <vfprintf+0x1d2>
    1cd6:	89 36       	cpi	r24, 0x69	; 105
    1cd8:	41 f5       	brne	.+80     	; 0x1d2a <vfprintf+0x222>
    1cda:	f8 01       	movw	r30, r16
    1cdc:	37 fe       	sbrs	r3, 7
    1cde:	07 c0       	rjmp	.+14     	; 0x1cee <vfprintf+0x1e6>
    1ce0:	60 81       	ld	r22, Z
    1ce2:	71 81       	ldd	r23, Z+1	; 0x01
    1ce4:	82 81       	ldd	r24, Z+2	; 0x02
    1ce6:	93 81       	ldd	r25, Z+3	; 0x03
    1ce8:	0c 5f       	subi	r16, 0xFC	; 252
    1cea:	1f 4f       	sbci	r17, 0xFF	; 255
    1cec:	08 c0       	rjmp	.+16     	; 0x1cfe <vfprintf+0x1f6>
    1cee:	60 81       	ld	r22, Z
    1cf0:	71 81       	ldd	r23, Z+1	; 0x01
    1cf2:	07 2e       	mov	r0, r23
    1cf4:	00 0c       	add	r0, r0
    1cf6:	88 0b       	sbc	r24, r24
    1cf8:	99 0b       	sbc	r25, r25
    1cfa:	0e 5f       	subi	r16, 0xFE	; 254
    1cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    1cfe:	f3 2d       	mov	r31, r3
    1d00:	ff 76       	andi	r31, 0x6F	; 111
    1d02:	3f 2e       	mov	r3, r31
    1d04:	97 ff       	sbrs	r25, 7
    1d06:	09 c0       	rjmp	.+18     	; 0x1d1a <vfprintf+0x212>
    1d08:	90 95       	com	r25
    1d0a:	80 95       	com	r24
    1d0c:	70 95       	com	r23
    1d0e:	61 95       	neg	r22
    1d10:	7f 4f       	sbci	r23, 0xFF	; 255
    1d12:	8f 4f       	sbci	r24, 0xFF	; 255
    1d14:	9f 4f       	sbci	r25, 0xFF	; 255
    1d16:	f0 68       	ori	r31, 0x80	; 128
    1d18:	3f 2e       	mov	r3, r31
    1d1a:	2a e0       	ldi	r18, 0x0A	; 10
    1d1c:	30 e0       	ldi	r19, 0x00	; 0
    1d1e:	a3 01       	movw	r20, r6
    1d20:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__ultoa_invert>
    1d24:	88 2e       	mov	r8, r24
    1d26:	86 18       	sub	r8, r6
    1d28:	45 c0       	rjmp	.+138    	; 0x1db4 <vfprintf+0x2ac>
    1d2a:	85 37       	cpi	r24, 0x75	; 117
    1d2c:	31 f4       	brne	.+12     	; 0x1d3a <vfprintf+0x232>
    1d2e:	23 2d       	mov	r18, r3
    1d30:	2f 7e       	andi	r18, 0xEF	; 239
    1d32:	b2 2e       	mov	r11, r18
    1d34:	2a e0       	ldi	r18, 0x0A	; 10
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	25 c0       	rjmp	.+74     	; 0x1d84 <vfprintf+0x27c>
    1d3a:	93 2d       	mov	r25, r3
    1d3c:	99 7f       	andi	r25, 0xF9	; 249
    1d3e:	b9 2e       	mov	r11, r25
    1d40:	8f 36       	cpi	r24, 0x6F	; 111
    1d42:	c1 f0       	breq	.+48     	; 0x1d74 <vfprintf+0x26c>
    1d44:	18 f4       	brcc	.+6      	; 0x1d4c <vfprintf+0x244>
    1d46:	88 35       	cpi	r24, 0x58	; 88
    1d48:	79 f0       	breq	.+30     	; 0x1d68 <vfprintf+0x260>
    1d4a:	b5 c0       	rjmp	.+362    	; 0x1eb6 <vfprintf+0x3ae>
    1d4c:	80 37       	cpi	r24, 0x70	; 112
    1d4e:	19 f0       	breq	.+6      	; 0x1d56 <vfprintf+0x24e>
    1d50:	88 37       	cpi	r24, 0x78	; 120
    1d52:	21 f0       	breq	.+8      	; 0x1d5c <vfprintf+0x254>
    1d54:	b0 c0       	rjmp	.+352    	; 0x1eb6 <vfprintf+0x3ae>
    1d56:	e9 2f       	mov	r30, r25
    1d58:	e0 61       	ori	r30, 0x10	; 16
    1d5a:	be 2e       	mov	r11, r30
    1d5c:	b4 fe       	sbrs	r11, 4
    1d5e:	0d c0       	rjmp	.+26     	; 0x1d7a <vfprintf+0x272>
    1d60:	fb 2d       	mov	r31, r11
    1d62:	f4 60       	ori	r31, 0x04	; 4
    1d64:	bf 2e       	mov	r11, r31
    1d66:	09 c0       	rjmp	.+18     	; 0x1d7a <vfprintf+0x272>
    1d68:	34 fe       	sbrs	r3, 4
    1d6a:	0a c0       	rjmp	.+20     	; 0x1d80 <vfprintf+0x278>
    1d6c:	29 2f       	mov	r18, r25
    1d6e:	26 60       	ori	r18, 0x06	; 6
    1d70:	b2 2e       	mov	r11, r18
    1d72:	06 c0       	rjmp	.+12     	; 0x1d80 <vfprintf+0x278>
    1d74:	28 e0       	ldi	r18, 0x08	; 8
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	05 c0       	rjmp	.+10     	; 0x1d84 <vfprintf+0x27c>
    1d7a:	20 e1       	ldi	r18, 0x10	; 16
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	02 c0       	rjmp	.+4      	; 0x1d84 <vfprintf+0x27c>
    1d80:	20 e1       	ldi	r18, 0x10	; 16
    1d82:	32 e0       	ldi	r19, 0x02	; 2
    1d84:	f8 01       	movw	r30, r16
    1d86:	b7 fe       	sbrs	r11, 7
    1d88:	07 c0       	rjmp	.+14     	; 0x1d98 <vfprintf+0x290>
    1d8a:	60 81       	ld	r22, Z
    1d8c:	71 81       	ldd	r23, Z+1	; 0x01
    1d8e:	82 81       	ldd	r24, Z+2	; 0x02
    1d90:	93 81       	ldd	r25, Z+3	; 0x03
    1d92:	0c 5f       	subi	r16, 0xFC	; 252
    1d94:	1f 4f       	sbci	r17, 0xFF	; 255
    1d96:	06 c0       	rjmp	.+12     	; 0x1da4 <vfprintf+0x29c>
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	80 e0       	ldi	r24, 0x00	; 0
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	0e 5f       	subi	r16, 0xFE	; 254
    1da2:	1f 4f       	sbci	r17, 0xFF	; 255
    1da4:	a3 01       	movw	r20, r6
    1da6:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__ultoa_invert>
    1daa:	88 2e       	mov	r8, r24
    1dac:	86 18       	sub	r8, r6
    1dae:	fb 2d       	mov	r31, r11
    1db0:	ff 77       	andi	r31, 0x7F	; 127
    1db2:	3f 2e       	mov	r3, r31
    1db4:	36 fe       	sbrs	r3, 6
    1db6:	0d c0       	rjmp	.+26     	; 0x1dd2 <vfprintf+0x2ca>
    1db8:	23 2d       	mov	r18, r3
    1dba:	2e 7f       	andi	r18, 0xFE	; 254
    1dbc:	a2 2e       	mov	r10, r18
    1dbe:	89 14       	cp	r8, r9
    1dc0:	58 f4       	brcc	.+22     	; 0x1dd8 <vfprintf+0x2d0>
    1dc2:	34 fe       	sbrs	r3, 4
    1dc4:	0b c0       	rjmp	.+22     	; 0x1ddc <vfprintf+0x2d4>
    1dc6:	32 fc       	sbrc	r3, 2
    1dc8:	09 c0       	rjmp	.+18     	; 0x1ddc <vfprintf+0x2d4>
    1dca:	83 2d       	mov	r24, r3
    1dcc:	8e 7e       	andi	r24, 0xEE	; 238
    1dce:	a8 2e       	mov	r10, r24
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <vfprintf+0x2d4>
    1dd2:	b8 2c       	mov	r11, r8
    1dd4:	a3 2c       	mov	r10, r3
    1dd6:	03 c0       	rjmp	.+6      	; 0x1dde <vfprintf+0x2d6>
    1dd8:	b8 2c       	mov	r11, r8
    1dda:	01 c0       	rjmp	.+2      	; 0x1dde <vfprintf+0x2d6>
    1ddc:	b9 2c       	mov	r11, r9
    1dde:	a4 fe       	sbrs	r10, 4
    1de0:	0f c0       	rjmp	.+30     	; 0x1e00 <vfprintf+0x2f8>
    1de2:	fe 01       	movw	r30, r28
    1de4:	e8 0d       	add	r30, r8
    1de6:	f1 1d       	adc	r31, r1
    1de8:	80 81       	ld	r24, Z
    1dea:	80 33       	cpi	r24, 0x30	; 48
    1dec:	21 f4       	brne	.+8      	; 0x1df6 <vfprintf+0x2ee>
    1dee:	9a 2d       	mov	r25, r10
    1df0:	99 7e       	andi	r25, 0xE9	; 233
    1df2:	a9 2e       	mov	r10, r25
    1df4:	09 c0       	rjmp	.+18     	; 0x1e08 <vfprintf+0x300>
    1df6:	a2 fe       	sbrs	r10, 2
    1df8:	06 c0       	rjmp	.+12     	; 0x1e06 <vfprintf+0x2fe>
    1dfa:	b3 94       	inc	r11
    1dfc:	b3 94       	inc	r11
    1dfe:	04 c0       	rjmp	.+8      	; 0x1e08 <vfprintf+0x300>
    1e00:	8a 2d       	mov	r24, r10
    1e02:	86 78       	andi	r24, 0x86	; 134
    1e04:	09 f0       	breq	.+2      	; 0x1e08 <vfprintf+0x300>
    1e06:	b3 94       	inc	r11
    1e08:	a3 fc       	sbrc	r10, 3
    1e0a:	11 c0       	rjmp	.+34     	; 0x1e2e <vfprintf+0x326>
    1e0c:	a0 fe       	sbrs	r10, 0
    1e0e:	06 c0       	rjmp	.+12     	; 0x1e1c <vfprintf+0x314>
    1e10:	b2 14       	cp	r11, r2
    1e12:	88 f4       	brcc	.+34     	; 0x1e36 <vfprintf+0x32e>
    1e14:	28 0c       	add	r2, r8
    1e16:	92 2c       	mov	r9, r2
    1e18:	9b 18       	sub	r9, r11
    1e1a:	0e c0       	rjmp	.+28     	; 0x1e38 <vfprintf+0x330>
    1e1c:	b2 14       	cp	r11, r2
    1e1e:	60 f4       	brcc	.+24     	; 0x1e38 <vfprintf+0x330>
    1e20:	b6 01       	movw	r22, r12
    1e22:	80 e2       	ldi	r24, 0x20	; 32
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1e2a:	b3 94       	inc	r11
    1e2c:	f7 cf       	rjmp	.-18     	; 0x1e1c <vfprintf+0x314>
    1e2e:	b2 14       	cp	r11, r2
    1e30:	18 f4       	brcc	.+6      	; 0x1e38 <vfprintf+0x330>
    1e32:	2b 18       	sub	r2, r11
    1e34:	02 c0       	rjmp	.+4      	; 0x1e3a <vfprintf+0x332>
    1e36:	98 2c       	mov	r9, r8
    1e38:	21 2c       	mov	r2, r1
    1e3a:	a4 fe       	sbrs	r10, 4
    1e3c:	10 c0       	rjmp	.+32     	; 0x1e5e <vfprintf+0x356>
    1e3e:	b6 01       	movw	r22, r12
    1e40:	80 e3       	ldi	r24, 0x30	; 48
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1e48:	a2 fe       	sbrs	r10, 2
    1e4a:	17 c0       	rjmp	.+46     	; 0x1e7a <vfprintf+0x372>
    1e4c:	a1 fc       	sbrc	r10, 1
    1e4e:	03 c0       	rjmp	.+6      	; 0x1e56 <vfprintf+0x34e>
    1e50:	88 e7       	ldi	r24, 0x78	; 120
    1e52:	90 e0       	ldi	r25, 0x00	; 0
    1e54:	02 c0       	rjmp	.+4      	; 0x1e5a <vfprintf+0x352>
    1e56:	88 e5       	ldi	r24, 0x58	; 88
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	b6 01       	movw	r22, r12
    1e5c:	0c c0       	rjmp	.+24     	; 0x1e76 <vfprintf+0x36e>
    1e5e:	8a 2d       	mov	r24, r10
    1e60:	86 78       	andi	r24, 0x86	; 134
    1e62:	59 f0       	breq	.+22     	; 0x1e7a <vfprintf+0x372>
    1e64:	a1 fe       	sbrs	r10, 1
    1e66:	02 c0       	rjmp	.+4      	; 0x1e6c <vfprintf+0x364>
    1e68:	8b e2       	ldi	r24, 0x2B	; 43
    1e6a:	01 c0       	rjmp	.+2      	; 0x1e6e <vfprintf+0x366>
    1e6c:	80 e2       	ldi	r24, 0x20	; 32
    1e6e:	a7 fc       	sbrc	r10, 7
    1e70:	8d e2       	ldi	r24, 0x2D	; 45
    1e72:	b6 01       	movw	r22, r12
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1e7a:	89 14       	cp	r8, r9
    1e7c:	38 f4       	brcc	.+14     	; 0x1e8c <vfprintf+0x384>
    1e7e:	b6 01       	movw	r22, r12
    1e80:	80 e3       	ldi	r24, 0x30	; 48
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1e88:	9a 94       	dec	r9
    1e8a:	f7 cf       	rjmp	.-18     	; 0x1e7a <vfprintf+0x372>
    1e8c:	8a 94       	dec	r8
    1e8e:	f3 01       	movw	r30, r6
    1e90:	e8 0d       	add	r30, r8
    1e92:	f1 1d       	adc	r31, r1
    1e94:	80 81       	ld	r24, Z
    1e96:	b6 01       	movw	r22, r12
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1e9e:	81 10       	cpse	r8, r1
    1ea0:	f5 cf       	rjmp	.-22     	; 0x1e8c <vfprintf+0x384>
    1ea2:	22 20       	and	r2, r2
    1ea4:	09 f4       	brne	.+2      	; 0x1ea8 <vfprintf+0x3a0>
    1ea6:	42 ce       	rjmp	.-892    	; 0x1b2c <vfprintf+0x24>
    1ea8:	b6 01       	movw	r22, r12
    1eaa:	80 e2       	ldi	r24, 0x20	; 32
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	0e 94 7b 0f 	call	0x1ef6	; 0x1ef6 <fputc>
    1eb2:	2a 94       	dec	r2
    1eb4:	f6 cf       	rjmp	.-20     	; 0x1ea2 <vfprintf+0x39a>
    1eb6:	f6 01       	movw	r30, r12
    1eb8:	86 81       	ldd	r24, Z+6	; 0x06
    1eba:	97 81       	ldd	r25, Z+7	; 0x07
    1ebc:	02 c0       	rjmp	.+4      	; 0x1ec2 <vfprintf+0x3ba>
    1ebe:	8f ef       	ldi	r24, 0xFF	; 255
    1ec0:	9f ef       	ldi	r25, 0xFF	; 255
    1ec2:	2b 96       	adiw	r28, 0x0b	; 11
    1ec4:	e2 e1       	ldi	r30, 0x12	; 18
    1ec6:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__epilogue_restores__>

00001eca <strnlen_P>:
    1eca:	fc 01       	movw	r30, r24
    1ecc:	05 90       	lpm	r0, Z+
    1ece:	61 50       	subi	r22, 0x01	; 1
    1ed0:	70 40       	sbci	r23, 0x00	; 0
    1ed2:	01 10       	cpse	r0, r1
    1ed4:	d8 f7       	brcc	.-10     	; 0x1ecc <strnlen_P+0x2>
    1ed6:	80 95       	com	r24
    1ed8:	90 95       	com	r25
    1eda:	8e 0f       	add	r24, r30
    1edc:	9f 1f       	adc	r25, r31
    1ede:	08 95       	ret

00001ee0 <strnlen>:
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	61 50       	subi	r22, 0x01	; 1
    1ee4:	70 40       	sbci	r23, 0x00	; 0
    1ee6:	01 90       	ld	r0, Z+
    1ee8:	01 10       	cpse	r0, r1
    1eea:	d8 f7       	brcc	.-10     	; 0x1ee2 <strnlen+0x2>
    1eec:	80 95       	com	r24
    1eee:	90 95       	com	r25
    1ef0:	8e 0f       	add	r24, r30
    1ef2:	9f 1f       	adc	r25, r31
    1ef4:	08 95       	ret

00001ef6 <fputc>:
    1ef6:	0f 93       	push	r16
    1ef8:	1f 93       	push	r17
    1efa:	cf 93       	push	r28
    1efc:	df 93       	push	r29
    1efe:	fb 01       	movw	r30, r22
    1f00:	23 81       	ldd	r18, Z+3	; 0x03
    1f02:	21 fd       	sbrc	r18, 1
    1f04:	03 c0       	rjmp	.+6      	; 0x1f0c <fputc+0x16>
    1f06:	8f ef       	ldi	r24, 0xFF	; 255
    1f08:	9f ef       	ldi	r25, 0xFF	; 255
    1f0a:	2c c0       	rjmp	.+88     	; 0x1f64 <fputc+0x6e>
    1f0c:	22 ff       	sbrs	r18, 2
    1f0e:	16 c0       	rjmp	.+44     	; 0x1f3c <fputc+0x46>
    1f10:	46 81       	ldd	r20, Z+6	; 0x06
    1f12:	57 81       	ldd	r21, Z+7	; 0x07
    1f14:	24 81       	ldd	r18, Z+4	; 0x04
    1f16:	35 81       	ldd	r19, Z+5	; 0x05
    1f18:	42 17       	cp	r20, r18
    1f1a:	53 07       	cpc	r21, r19
    1f1c:	44 f4       	brge	.+16     	; 0x1f2e <fputc+0x38>
    1f1e:	a0 81       	ld	r26, Z
    1f20:	b1 81       	ldd	r27, Z+1	; 0x01
    1f22:	9d 01       	movw	r18, r26
    1f24:	2f 5f       	subi	r18, 0xFF	; 255
    1f26:	3f 4f       	sbci	r19, 0xFF	; 255
    1f28:	31 83       	std	Z+1, r19	; 0x01
    1f2a:	20 83       	st	Z, r18
    1f2c:	8c 93       	st	X, r24
    1f2e:	26 81       	ldd	r18, Z+6	; 0x06
    1f30:	37 81       	ldd	r19, Z+7	; 0x07
    1f32:	2f 5f       	subi	r18, 0xFF	; 255
    1f34:	3f 4f       	sbci	r19, 0xFF	; 255
    1f36:	37 83       	std	Z+7, r19	; 0x07
    1f38:	26 83       	std	Z+6, r18	; 0x06
    1f3a:	14 c0       	rjmp	.+40     	; 0x1f64 <fputc+0x6e>
    1f3c:	8b 01       	movw	r16, r22
    1f3e:	ec 01       	movw	r28, r24
    1f40:	fb 01       	movw	r30, r22
    1f42:	00 84       	ldd	r0, Z+8	; 0x08
    1f44:	f1 85       	ldd	r31, Z+9	; 0x09
    1f46:	e0 2d       	mov	r30, r0
    1f48:	09 95       	icall
    1f4a:	89 2b       	or	r24, r25
    1f4c:	e1 f6       	brne	.-72     	; 0x1f06 <fputc+0x10>
    1f4e:	d8 01       	movw	r26, r16
    1f50:	16 96       	adiw	r26, 0x06	; 6
    1f52:	8d 91       	ld	r24, X+
    1f54:	9c 91       	ld	r25, X
    1f56:	17 97       	sbiw	r26, 0x07	; 7
    1f58:	01 96       	adiw	r24, 0x01	; 1
    1f5a:	17 96       	adiw	r26, 0x07	; 7
    1f5c:	9c 93       	st	X, r25
    1f5e:	8e 93       	st	-X, r24
    1f60:	16 97       	sbiw	r26, 0x06	; 6
    1f62:	ce 01       	movw	r24, r28
    1f64:	df 91       	pop	r29
    1f66:	cf 91       	pop	r28
    1f68:	1f 91       	pop	r17
    1f6a:	0f 91       	pop	r16
    1f6c:	08 95       	ret

00001f6e <__ultoa_invert>:
    1f6e:	fa 01       	movw	r30, r20
    1f70:	aa 27       	eor	r26, r26
    1f72:	28 30       	cpi	r18, 0x08	; 8
    1f74:	51 f1       	breq	.+84     	; 0x1fca <__ultoa_invert+0x5c>
    1f76:	20 31       	cpi	r18, 0x10	; 16
    1f78:	81 f1       	breq	.+96     	; 0x1fda <__ultoa_invert+0x6c>
    1f7a:	e8 94       	clt
    1f7c:	6f 93       	push	r22
    1f7e:	6e 7f       	andi	r22, 0xFE	; 254
    1f80:	6e 5f       	subi	r22, 0xFE	; 254
    1f82:	7f 4f       	sbci	r23, 0xFF	; 255
    1f84:	8f 4f       	sbci	r24, 0xFF	; 255
    1f86:	9f 4f       	sbci	r25, 0xFF	; 255
    1f88:	af 4f       	sbci	r26, 0xFF	; 255
    1f8a:	b1 e0       	ldi	r27, 0x01	; 1
    1f8c:	3e d0       	rcall	.+124    	; 0x200a <__ultoa_invert+0x9c>
    1f8e:	b4 e0       	ldi	r27, 0x04	; 4
    1f90:	3c d0       	rcall	.+120    	; 0x200a <__ultoa_invert+0x9c>
    1f92:	67 0f       	add	r22, r23
    1f94:	78 1f       	adc	r23, r24
    1f96:	89 1f       	adc	r24, r25
    1f98:	9a 1f       	adc	r25, r26
    1f9a:	a1 1d       	adc	r26, r1
    1f9c:	68 0f       	add	r22, r24
    1f9e:	79 1f       	adc	r23, r25
    1fa0:	8a 1f       	adc	r24, r26
    1fa2:	91 1d       	adc	r25, r1
    1fa4:	a1 1d       	adc	r26, r1
    1fa6:	6a 0f       	add	r22, r26
    1fa8:	71 1d       	adc	r23, r1
    1faa:	81 1d       	adc	r24, r1
    1fac:	91 1d       	adc	r25, r1
    1fae:	a1 1d       	adc	r26, r1
    1fb0:	20 d0       	rcall	.+64     	; 0x1ff2 <__ultoa_invert+0x84>
    1fb2:	09 f4       	brne	.+2      	; 0x1fb6 <__ultoa_invert+0x48>
    1fb4:	68 94       	set
    1fb6:	3f 91       	pop	r19
    1fb8:	2a e0       	ldi	r18, 0x0A	; 10
    1fba:	26 9f       	mul	r18, r22
    1fbc:	11 24       	eor	r1, r1
    1fbe:	30 19       	sub	r19, r0
    1fc0:	30 5d       	subi	r19, 0xD0	; 208
    1fc2:	31 93       	st	Z+, r19
    1fc4:	de f6       	brtc	.-74     	; 0x1f7c <__ultoa_invert+0xe>
    1fc6:	cf 01       	movw	r24, r30
    1fc8:	08 95       	ret
    1fca:	46 2f       	mov	r20, r22
    1fcc:	47 70       	andi	r20, 0x07	; 7
    1fce:	40 5d       	subi	r20, 0xD0	; 208
    1fd0:	41 93       	st	Z+, r20
    1fd2:	b3 e0       	ldi	r27, 0x03	; 3
    1fd4:	0f d0       	rcall	.+30     	; 0x1ff4 <__ultoa_invert+0x86>
    1fd6:	c9 f7       	brne	.-14     	; 0x1fca <__ultoa_invert+0x5c>
    1fd8:	f6 cf       	rjmp	.-20     	; 0x1fc6 <__ultoa_invert+0x58>
    1fda:	46 2f       	mov	r20, r22
    1fdc:	4f 70       	andi	r20, 0x0F	; 15
    1fde:	40 5d       	subi	r20, 0xD0	; 208
    1fe0:	4a 33       	cpi	r20, 0x3A	; 58
    1fe2:	18 f0       	brcs	.+6      	; 0x1fea <__ultoa_invert+0x7c>
    1fe4:	49 5d       	subi	r20, 0xD9	; 217
    1fe6:	31 fd       	sbrc	r19, 1
    1fe8:	40 52       	subi	r20, 0x20	; 32
    1fea:	41 93       	st	Z+, r20
    1fec:	02 d0       	rcall	.+4      	; 0x1ff2 <__ultoa_invert+0x84>
    1fee:	a9 f7       	brne	.-22     	; 0x1fda <__ultoa_invert+0x6c>
    1ff0:	ea cf       	rjmp	.-44     	; 0x1fc6 <__ultoa_invert+0x58>
    1ff2:	b4 e0       	ldi	r27, 0x04	; 4
    1ff4:	a6 95       	lsr	r26
    1ff6:	97 95       	ror	r25
    1ff8:	87 95       	ror	r24
    1ffa:	77 95       	ror	r23
    1ffc:	67 95       	ror	r22
    1ffe:	ba 95       	dec	r27
    2000:	c9 f7       	brne	.-14     	; 0x1ff4 <__ultoa_invert+0x86>
    2002:	00 97       	sbiw	r24, 0x00	; 0
    2004:	61 05       	cpc	r22, r1
    2006:	71 05       	cpc	r23, r1
    2008:	08 95       	ret
    200a:	9b 01       	movw	r18, r22
    200c:	ac 01       	movw	r20, r24
    200e:	0a 2e       	mov	r0, r26
    2010:	06 94       	lsr	r0
    2012:	57 95       	ror	r21
    2014:	47 95       	ror	r20
    2016:	37 95       	ror	r19
    2018:	27 95       	ror	r18
    201a:	ba 95       	dec	r27
    201c:	c9 f7       	brne	.-14     	; 0x2010 <__ultoa_invert+0xa2>
    201e:	62 0f       	add	r22, r18
    2020:	73 1f       	adc	r23, r19
    2022:	84 1f       	adc	r24, r20
    2024:	95 1f       	adc	r25, r21
    2026:	a0 1d       	adc	r26, r0
    2028:	08 95       	ret

0000202a <__prologue_saves__>:
    202a:	2f 92       	push	r2
    202c:	3f 92       	push	r3
    202e:	4f 92       	push	r4
    2030:	5f 92       	push	r5
    2032:	6f 92       	push	r6
    2034:	7f 92       	push	r7
    2036:	8f 92       	push	r8
    2038:	9f 92       	push	r9
    203a:	af 92       	push	r10
    203c:	bf 92       	push	r11
    203e:	cf 92       	push	r12
    2040:	df 92       	push	r13
    2042:	ef 92       	push	r14
    2044:	ff 92       	push	r15
    2046:	0f 93       	push	r16
    2048:	1f 93       	push	r17
    204a:	cf 93       	push	r28
    204c:	df 93       	push	r29
    204e:	cd b7       	in	r28, 0x3d	; 61
    2050:	de b7       	in	r29, 0x3e	; 62
    2052:	ca 1b       	sub	r28, r26
    2054:	db 0b       	sbc	r29, r27
    2056:	0f b6       	in	r0, 0x3f	; 63
    2058:	f8 94       	cli
    205a:	de bf       	out	0x3e, r29	; 62
    205c:	0f be       	out	0x3f, r0	; 63
    205e:	cd bf       	out	0x3d, r28	; 61
    2060:	09 94       	ijmp

00002062 <__epilogue_restores__>:
    2062:	2a 88       	ldd	r2, Y+18	; 0x12
    2064:	39 88       	ldd	r3, Y+17	; 0x11
    2066:	48 88       	ldd	r4, Y+16	; 0x10
    2068:	5f 84       	ldd	r5, Y+15	; 0x0f
    206a:	6e 84       	ldd	r6, Y+14	; 0x0e
    206c:	7d 84       	ldd	r7, Y+13	; 0x0d
    206e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2070:	9b 84       	ldd	r9, Y+11	; 0x0b
    2072:	aa 84       	ldd	r10, Y+10	; 0x0a
    2074:	b9 84       	ldd	r11, Y+9	; 0x09
    2076:	c8 84       	ldd	r12, Y+8	; 0x08
    2078:	df 80       	ldd	r13, Y+7	; 0x07
    207a:	ee 80       	ldd	r14, Y+6	; 0x06
    207c:	fd 80       	ldd	r15, Y+5	; 0x05
    207e:	0c 81       	ldd	r16, Y+4	; 0x04
    2080:	1b 81       	ldd	r17, Y+3	; 0x03
    2082:	aa 81       	ldd	r26, Y+2	; 0x02
    2084:	b9 81       	ldd	r27, Y+1	; 0x01
    2086:	ce 0f       	add	r28, r30
    2088:	d1 1d       	adc	r29, r1
    208a:	0f b6       	in	r0, 0x3f	; 63
    208c:	f8 94       	cli
    208e:	de bf       	out	0x3e, r29	; 62
    2090:	0f be       	out	0x3f, r0	; 63
    2092:	cd bf       	out	0x3d, r28	; 61
    2094:	ed 01       	movw	r28, r26
    2096:	08 95       	ret

00002098 <_exit>:
    2098:	f8 94       	cli

0000209a <__stop_program>:
    209a:	ff cf       	rjmp	.-2      	; 0x209a <__stop_program>
